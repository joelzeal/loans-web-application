#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LoanWebApplication4
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FINANCEMANAGER_ImperialTrust")]
	public partial class FinanceManagerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCollateral(Collateral instance);
    partial void UpdateCollateral(Collateral instance);
    partial void DeleteCollateral(Collateral instance);
    partial void InsertRepaymentSchedule(RepaymentSchedule instance);
    partial void UpdateRepaymentSchedule(RepaymentSchedule instance);
    partial void DeleteRepaymentSchedule(RepaymentSchedule instance);
    partial void InsertContributionSchedule(ContributionSchedule instance);
    partial void UpdateContributionSchedule(ContributionSchedule instance);
    partial void DeleteContributionSchedule(ContributionSchedule instance);
    partial void InsertGroupMember(GroupMember instance);
    partial void UpdateGroupMember(GroupMember instance);
    partial void DeleteGroupMember(GroupMember instance);
    partial void InsertGuarantor(Guarantor instance);
    partial void UpdateGuarantor(Guarantor instance);
    partial void DeleteGuarantor(Guarantor instance);
    partial void InsertHoliday(Holiday instance);
    partial void UpdateHoliday(Holiday instance);
    partial void DeleteHoliday(Holiday instance);
    partial void InsertIdentificationType(IdentificationType instance);
    partial void UpdateIdentificationType(IdentificationType instance);
    partial void DeleteIdentificationType(IdentificationType instance);
    partial void InsertInterestRateType(InterestRateType instance);
    partial void UpdateInterestRateType(InterestRateType instance);
    partial void DeleteInterestRateType(InterestRateType instance);
    partial void InsertInvestmentDuration(InvestmentDuration instance);
    partial void UpdateInvestmentDuration(InvestmentDuration instance);
    partial void DeleteInvestmentDuration(InvestmentDuration instance);
    partial void InsertInvestmentType(InvestmentType instance);
    partial void UpdateInvestmentType(InvestmentType instance);
    partial void DeleteInvestmentType(InvestmentType instance);
    partial void InsertLoanDuration(LoanDuration instance);
    partial void UpdateLoanDuration(LoanDuration instance);
    partial void DeleteLoanDuration(LoanDuration instance);
    partial void InsertLoanPenalty(LoanPenalty instance);
    partial void UpdateLoanPenalty(LoanPenalty instance);
    partial void DeleteLoanPenalty(LoanPenalty instance);
    partial void InsertLoanPreset(LoanPreset instance);
    partial void UpdateLoanPreset(LoanPreset instance);
    partial void DeleteLoanPreset(LoanPreset instance);
    partial void InsertMemberDeposit(MemberDeposit instance);
    partial void UpdateMemberDeposit(MemberDeposit instance);
    partial void DeleteMemberDeposit(MemberDeposit instance);
    partial void InsertParameter(Parameter instance);
    partial void UpdateParameter(Parameter instance);
    partial void DeleteParameter(Parameter instance);
    partial void InsertRepaymentFrequency(RepaymentFrequency instance);
    partial void UpdateRepaymentFrequency(RepaymentFrequency instance);
    partial void DeleteRepaymentFrequency(RepaymentFrequency instance);
    partial void InsertAuditTrail(AuditTrail instance);
    partial void UpdateAuditTrail(AuditTrail instance);
    partial void DeleteAuditTrail(AuditTrail instance);
    partial void InsertMobileBankerCustomer(MobileBankerCustomer instance);
    partial void UpdateMobileBankerCustomer(MobileBankerCustomer instance);
    partial void DeleteMobileBankerCustomer(MobileBankerCustomer instance);
    partial void InsertAppliedInterest_Temp(AppliedInterest_Temp instance);
    partial void UpdateAppliedInterest_Temp(AppliedInterest_Temp instance);
    partial void DeleteAppliedInterest_Temp(AppliedInterest_Temp instance);
    partial void InsertContribution(Contribution instance);
    partial void UpdateContribution(Contribution instance);
    partial void DeleteContribution(Contribution instance);
    partial void InsertRepayment(Repayment instance);
    partial void UpdateRepayment(Repayment instance);
    partial void DeleteRepayment(Repayment instance);
    partial void InsertMemberWithdrawal(MemberWithdrawal instance);
    partial void UpdateMemberWithdrawal(MemberWithdrawal instance);
    partial void DeleteMemberWithdrawal(MemberWithdrawal instance);
    partial void InsertLoan(Loan instance);
    partial void UpdateLoan(Loan instance);
    partial void DeleteLoan(Loan instance);
    partial void InsertCompanyProfile(CompanyProfile instance);
    partial void UpdateCompanyProfile(CompanyProfile instance);
    partial void DeleteCompanyProfile(CompanyProfile instance);
    partial void InsertMember(Member instance);
    partial void UpdateMember(Member instance);
    partial void DeleteMember(Member instance);
    partial void InsertAccountType(AccountType instance);
    partial void UpdateAccountType(AccountType instance);
    partial void DeleteAccountType(AccountType instance);
    partial void InsertBranch(Branch instance);
    partial void UpdateBranch(Branch instance);
    partial void DeleteBranch(Branch instance);
    partial void InsertLoanGroup(LoanGroup instance);
    partial void UpdateLoanGroup(LoanGroup instance);
    partial void DeleteLoanGroup(LoanGroup instance);
    partial void InsertAccountFeatureFreqOfCalculation(AccountFeatureFreqOfCalculation instance);
    partial void UpdateAccountFeatureFreqOfCalculation(AccountFeatureFreqOfCalculation instance);
    partial void DeleteAccountFeatureFreqOfCalculation(AccountFeatureFreqOfCalculation instance);
    partial void InsertAccountTypeFeaturesCalculateOn(AccountTypeFeaturesCalculateOn instance);
    partial void UpdateAccountTypeFeaturesCalculateOn(AccountTypeFeaturesCalculateOn instance);
    partial void DeleteAccountTypeFeaturesCalculateOn(AccountTypeFeaturesCalculateOn instance);
    partial void InsertFailMessage(FailMessage instance);
    partial void UpdateFailMessage(FailMessage instance);
    partial void DeleteFailMessage(FailMessage instance);
    partial void InsertMobileBanker(MobileBanker instance);
    partial void UpdateMobileBanker(MobileBanker instance);
    partial void DeleteMobileBanker(MobileBanker instance);
    partial void InsertLoanCollateralDocument(LoanCollateralDocument instance);
    partial void UpdateLoanCollateralDocument(LoanCollateralDocument instance);
    partial void DeleteLoanCollateralDocument(LoanCollateralDocument instance);
    partial void InsertInvestment(Investment instance);
    partial void UpdateInvestment(Investment instance);
    partial void DeleteInvestment(Investment instance);
    partial void InsertAccountTypeFeature(AccountTypeFeature instance);
    partial void UpdateAccountTypeFeature(AccountTypeFeature instance);
    partial void DeleteAccountTypeFeature(AccountTypeFeature instance);
    partial void InsertAppliedAccountFeature(AppliedAccountFeature instance);
    partial void UpdateAppliedAccountFeature(AppliedAccountFeature instance);
    partial void DeleteAppliedAccountFeature(AppliedAccountFeature instance);
    partial void InsertAppliedFeatureHistory(AppliedFeatureHistory instance);
    partial void UpdateAppliedFeatureHistory(AppliedFeatureHistory instance);
    partial void DeleteAppliedFeatureHistory(AppliedFeatureHistory instance);
    partial void InsertAppliedInterest(AppliedInterest instance);
    partial void UpdateAppliedInterest(AppliedInterest instance);
    partial void DeleteAppliedInterest(AppliedInterest instance);
    partial void InsertAppliedDeduction(AppliedDeduction instance);
    partial void UpdateAppliedDeduction(AppliedDeduction instance);
    partial void DeleteAppliedDeduction(AppliedDeduction instance);
    #endregion
		
		public FinanceManagerDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["FINANCEMANAGERConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public FinanceManagerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FinanceManagerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FinanceManagerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FinanceManagerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Collateral> Collaterals
		{
			get
			{
				return this.GetTable<Collateral>();
			}
		}
		
		public System.Data.Linq.Table<RepaymentSchedule> RepaymentSchedules
		{
			get
			{
				return this.GetTable<RepaymentSchedule>();
			}
		}
		
		public System.Data.Linq.Table<ContributionSchedule> ContributionSchedules
		{
			get
			{
				return this.GetTable<ContributionSchedule>();
			}
		}
		
		public System.Data.Linq.Table<GroupMember> GroupMembers
		{
			get
			{
				return this.GetTable<GroupMember>();
			}
		}
		
		public System.Data.Linq.Table<Guarantor> Guarantors
		{
			get
			{
				return this.GetTable<Guarantor>();
			}
		}
		
		public System.Data.Linq.Table<Holiday> Holidays
		{
			get
			{
				return this.GetTable<Holiday>();
			}
		}
		
		public System.Data.Linq.Table<IdentificationType> IdentificationTypes
		{
			get
			{
				return this.GetTable<IdentificationType>();
			}
		}
		
		public System.Data.Linq.Table<InterestRateType> InterestRateTypes
		{
			get
			{
				return this.GetTable<InterestRateType>();
			}
		}
		
		public System.Data.Linq.Table<InvestmentDuration> InvestmentDurations
		{
			get
			{
				return this.GetTable<InvestmentDuration>();
			}
		}
		
		public System.Data.Linq.Table<InvestmentType> InvestmentTypes
		{
			get
			{
				return this.GetTable<InvestmentType>();
			}
		}
		
		public System.Data.Linq.Table<LoanDuration> LoanDurations
		{
			get
			{
				return this.GetTable<LoanDuration>();
			}
		}
		
		public System.Data.Linq.Table<LoanPenalty> LoanPenalties
		{
			get
			{
				return this.GetTable<LoanPenalty>();
			}
		}
		
		public System.Data.Linq.Table<LoanPreset> LoanPresets
		{
			get
			{
				return this.GetTable<LoanPreset>();
			}
		}
		
		public System.Data.Linq.Table<MemberDeposit> MemberDeposits
		{
			get
			{
				return this.GetTable<MemberDeposit>();
			}
		}
		
		public System.Data.Linq.Table<Parameter> Parameters
		{
			get
			{
				return this.GetTable<Parameter>();
			}
		}
		
		public System.Data.Linq.Table<RepaymentFrequency> RepaymentFrequencies
		{
			get
			{
				return this.GetTable<RepaymentFrequency>();
			}
		}
		
		public System.Data.Linq.Table<MembersView> MembersViews
		{
			get
			{
				return this.GetTable<MembersView>();
			}
		}
		
		public System.Data.Linq.Table<vwGroupInvestment> vwGroupInvestments
		{
			get
			{
				return this.GetTable<vwGroupInvestment>();
			}
		}
		
		public System.Data.Linq.Table<vwGroupLoan> vwGroupLoans
		{
			get
			{
				return this.GetTable<vwGroupLoan>();
			}
		}
		
		public System.Data.Linq.Table<vwGroup> vwGroups
		{
			get
			{
				return this.GetTable<vwGroup>();
			}
		}
		
		public System.Data.Linq.Table<vwGuarantor> vwGuarantors
		{
			get
			{
				return this.GetTable<vwGuarantor>();
			}
		}
		
		public System.Data.Linq.Table<vwLoanRepayment> vwLoanRepayments
		{
			get
			{
				return this.GetTable<vwLoanRepayment>();
			}
		}
		
		public System.Data.Linq.Table<vwMemberFixedDepositInvestment> vwMemberFixedDepositInvestments
		{
			get
			{
				return this.GetTable<vwMemberFixedDepositInvestment>();
			}
		}
		
		public System.Data.Linq.Table<vwMemberInvestment> vwMemberInvestments
		{
			get
			{
				return this.GetTable<vwMemberInvestment>();
			}
		}
		
		public System.Data.Linq.Table<vwMemberLoan> vwMemberLoans
		{
			get
			{
				return this.GetTable<vwMemberLoan>();
			}
		}
		
		public System.Data.Linq.Table<vwMemberSUSUInvestment> vwMemberSUSUInvestments
		{
			get
			{
				return this.GetTable<vwMemberSUSUInvestment>();
			}
		}
		
		public System.Data.Linq.Table<vwRepaymentSchedule> vwRepaymentSchedules
		{
			get
			{
				return this.GetTable<vwRepaymentSchedule>();
			}
		}
		
		public System.Data.Linq.Table<vwSUSUContributionReceipt> vwSUSUContributionReceipts
		{
			get
			{
				return this.GetTable<vwSUSUContributionReceipt>();
			}
		}
		
		public System.Data.Linq.Table<vwMemberInvestmentWithTotalContributionAndWithdrawal> vwMemberInvestmentWithTotalContributionAndWithdrawals
		{
			get
			{
				return this.GetTable<vwMemberInvestmentWithTotalContributionAndWithdrawal>();
			}
		}
		
		public System.Data.Linq.Table<vwMemberFixedDepositInvestment_MemberDetailsAdded> vwMemberFixedDepositInvestment_MemberDetailsAddeds
		{
			get
			{
				return this.GetTable<vwMemberFixedDepositInvestment_MemberDetailsAdded>();
			}
		}
		
		public System.Data.Linq.Table<vwDepositesToday> vwDepositesTodays
		{
			get
			{
				return this.GetTable<vwDepositesToday>();
			}
		}
		
		public System.Data.Linq.Table<vwWithdrawalsToday> vwWithdrawalsTodays
		{
			get
			{
				return this.GetTable<vwWithdrawalsToday>();
			}
		}
		
		public System.Data.Linq.Table<vwLoansToday> vwLoansTodays
		{
			get
			{
				return this.GetTable<vwLoansToday>();
			}
		}
		
		public System.Data.Linq.Table<DefultersView> DefultersViews
		{
			get
			{
				return this.GetTable<DefultersView>();
			}
		}
		
		public System.Data.Linq.Table<AuditTrail> AuditTrails
		{
			get
			{
				return this.GetTable<AuditTrail>();
			}
		}
		
		public System.Data.Linq.Table<MobileBankerCustomer> MobileBankerCustomers
		{
			get
			{
				return this.GetTable<MobileBankerCustomer>();
			}
		}
		
		public System.Data.Linq.Table<vwMobileBanker> vwMobileBankers
		{
			get
			{
				return this.GetTable<vwMobileBanker>();
			}
		}
		
		public System.Data.Linq.Table<AppliedInterest_Temp> AppliedInterest_Temps
		{
			get
			{
				return this.GetTable<AppliedInterest_Temp>();
			}
		}
		
		public System.Data.Linq.Table<Contribution> Contributions
		{
			get
			{
				return this.GetTable<Contribution>();
			}
		}
		
		public System.Data.Linq.Table<Repayment> Repayments
		{
			get
			{
				return this.GetTable<Repayment>();
			}
		}
		
		public System.Data.Linq.Table<MembersView2> MembersView2s
		{
			get
			{
				return this.GetTable<MembersView2>();
			}
		}
		
		public System.Data.Linq.Table<MemberWithdrawal> MemberWithdrawals
		{
			get
			{
				return this.GetTable<MemberWithdrawal>();
			}
		}
		
		public System.Data.Linq.Table<Loan> Loans
		{
			get
			{
				return this.GetTable<Loan>();
			}
		}
		
		public System.Data.Linq.Table<CompanyProfile> CompanyProfiles
		{
			get
			{
				return this.GetTable<CompanyProfile>();
			}
		}
		
		public System.Data.Linq.Table<Member> Members
		{
			get
			{
				return this.GetTable<Member>();
			}
		}
		
		public System.Data.Linq.Table<AccountType> AccountTypes
		{
			get
			{
				return this.GetTable<AccountType>();
			}
		}
		
		public System.Data.Linq.Table<Branch> Branches
		{
			get
			{
				return this.GetTable<Branch>();
			}
		}
		
		public System.Data.Linq.Table<LoanGroup> LoanGroups
		{
			get
			{
				return this.GetTable<LoanGroup>();
			}
		}
		
		public System.Data.Linq.Table<AccountFeatureFreqOfCalculation> AccountFeatureFreqOfCalculations
		{
			get
			{
				return this.GetTable<AccountFeatureFreqOfCalculation>();
			}
		}
		
		public System.Data.Linq.Table<AccountTypeFeaturesCalculateOn> AccountTypeFeaturesCalculateOns
		{
			get
			{
				return this.GetTable<AccountTypeFeaturesCalculateOn>();
			}
		}
		
		public System.Data.Linq.Table<FailMessage> FailMessages
		{
			get
			{
				return this.GetTable<FailMessage>();
			}
		}
		
		public System.Data.Linq.Table<MobileBanker> MobileBankers
		{
			get
			{
				return this.GetTable<MobileBanker>();
			}
		}
		
		public System.Data.Linq.Table<LoanCollateralDocument> LoanCollateralDocuments
		{
			get
			{
				return this.GetTable<LoanCollateralDocument>();
			}
		}
		
		public System.Data.Linq.Table<Investment> Investments
		{
			get
			{
				return this.GetTable<Investment>();
			}
		}
		
		public System.Data.Linq.Table<AccountTypeFeature> AccountTypeFeatures
		{
			get
			{
				return this.GetTable<AccountTypeFeature>();
			}
		}
		
		public System.Data.Linq.Table<AppliedAccountFeature> AppliedAccountFeatures
		{
			get
			{
				return this.GetTable<AppliedAccountFeature>();
			}
		}
		
		public System.Data.Linq.Table<vwMembersWithInvestment> vwMembersWithInvestments
		{
			get
			{
				return this.GetTable<vwMembersWithInvestment>();
			}
		}
		
		public System.Data.Linq.Table<AppliedFeatureHistory> AppliedFeatureHistories
		{
			get
			{
				return this.GetTable<AppliedFeatureHistory>();
			}
		}
		
		public System.Data.Linq.Table<AppliedInterest> AppliedInterests
		{
			get
			{
				return this.GetTable<AppliedInterest>();
			}
		}
		
		public System.Data.Linq.Table<AppliedDeduction> AppliedDeductions
		{
			get
			{
				return this.GetTable<AppliedDeduction>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTotalLoanRepayment", IsComposable=true)]
		public System.Nullable<decimal> GetTotalLoanRepayment([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LoanID", DbType="Int")] System.Nullable<int> loanID)
		{
			return ((System.Nullable<decimal>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), loanID).ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Collaterals")]
	public partial class Collateral : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CollateralID;
		
		private string _Description;
		
		private string _CreatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCollateralIDChanging(int value);
    partial void OnCollateralIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    #endregion
		
		public Collateral()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollateralID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CollateralID
		{
			get
			{
				return this._CollateralID;
			}
			set
			{
				if ((this._CollateralID != value))
				{
					this.OnCollateralIDChanging(value);
					this.SendPropertyChanging();
					this._CollateralID = value;
					this.SendPropertyChanged("CollateralID");
					this.OnCollateralIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RepaymentSchedule")]
	public partial class RepaymentSchedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RepaymentScheduleId;
		
		private System.Nullable<int> _MemberID;
		
		private System.Nullable<int> _LoanId;
		
		private System.Nullable<System.DateTime> _RepaymentDate;
		
		private System.Nullable<decimal> _ExpectedRepaymentAmount;
		
		private System.Nullable<bool> _IsPaymentMade;
		
		private string _CreatedBy;
		
		private System.Nullable<decimal> _Balance;
		
		private System.Nullable<decimal> _InterestPayment;
		
		private System.Nullable<decimal> _PrincipalPayment;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRepaymentScheduleIdChanging(int value);
    partial void OnRepaymentScheduleIdChanged();
    partial void OnMemberIDChanging(System.Nullable<int> value);
    partial void OnMemberIDChanged();
    partial void OnLoanIdChanging(System.Nullable<int> value);
    partial void OnLoanIdChanged();
    partial void OnRepaymentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRepaymentDateChanged();
    partial void OnExpectedRepaymentAmountChanging(System.Nullable<decimal> value);
    partial void OnExpectedRepaymentAmountChanged();
    partial void OnIsPaymentMadeChanging(System.Nullable<bool> value);
    partial void OnIsPaymentMadeChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnBalanceChanging(System.Nullable<decimal> value);
    partial void OnBalanceChanged();
    partial void OnInterestPaymentChanging(System.Nullable<decimal> value);
    partial void OnInterestPaymentChanged();
    partial void OnPrincipalPaymentChanging(System.Nullable<decimal> value);
    partial void OnPrincipalPaymentChanged();
    #endregion
		
		public RepaymentSchedule()
		{
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentScheduleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RepaymentScheduleId
		{
			get
			{
				return this._RepaymentScheduleId;
			}
			set
			{
				if ((this._RepaymentScheduleId != value))
				{
					this.OnRepaymentScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._RepaymentScheduleId = value;
					this.SendPropertyChanged("RepaymentScheduleId");
					this.OnRepaymentScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int")]
		public System.Nullable<int> MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanId", DbType="Int")]
		public System.Nullable<int> LoanId
		{
			get
			{
				return this._LoanId;
			}
			set
			{
				if ((this._LoanId != value))
				{
					this.OnLoanIdChanging(value);
					this.SendPropertyChanging();
					this._LoanId = value;
					this.SendPropertyChanged("LoanId");
					this.OnLoanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentDate", DbType="Date")]
		public System.Nullable<System.DateTime> RepaymentDate
		{
			get
			{
				return this._RepaymentDate;
			}
			set
			{
				if ((this._RepaymentDate != value))
				{
					this.OnRepaymentDateChanging(value);
					this.SendPropertyChanging();
					this._RepaymentDate = value;
					this.SendPropertyChanged("RepaymentDate");
					this.OnRepaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedRepaymentAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ExpectedRepaymentAmount
		{
			get
			{
				return this._ExpectedRepaymentAmount;
			}
			set
			{
				if ((this._ExpectedRepaymentAmount != value))
				{
					this.OnExpectedRepaymentAmountChanging(value);
					this.SendPropertyChanging();
					this._ExpectedRepaymentAmount = value;
					this.SendPropertyChanged("ExpectedRepaymentAmount");
					this.OnExpectedRepaymentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaymentMade", DbType="Bit")]
		public System.Nullable<bool> IsPaymentMade
		{
			get
			{
				return this._IsPaymentMade;
			}
			set
			{
				if ((this._IsPaymentMade != value))
				{
					this.OnIsPaymentMadeChanging(value);
					this.SendPropertyChanging();
					this._IsPaymentMade = value;
					this.SendPropertyChanged("IsPaymentMade");
					this.OnIsPaymentMadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestPayment", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> InterestPayment
		{
			get
			{
				return this._InterestPayment;
			}
			set
			{
				if ((this._InterestPayment != value))
				{
					this.OnInterestPaymentChanging(value);
					this.SendPropertyChanging();
					this._InterestPayment = value;
					this.SendPropertyChanged("InterestPayment");
					this.OnInterestPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrincipalPayment", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PrincipalPayment
		{
			get
			{
				return this._PrincipalPayment;
			}
			set
			{
				if ((this._PrincipalPayment != value))
				{
					this.OnPrincipalPaymentChanging(value);
					this.SendPropertyChanging();
					this._PrincipalPayment = value;
					this.SendPropertyChanged("PrincipalPayment");
					this.OnPrincipalPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_RepaymentSchedule", Storage="_Member", ThisKey="MemberID", OtherKey="MemberId", IsForeignKey=true, DeleteRule="CASCADE")]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.RepaymentSchedules.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.RepaymentSchedules.Add(this);
						this._MemberID = value.MemberId;
					}
					else
					{
						this._MemberID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContributionSchedule")]
	public partial class ContributionSchedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContributionScheduleId;
		
		private System.Nullable<int> _MemberID;
		
		private System.Nullable<int> _InvestmentId;
		
		private System.Nullable<System.DateTime> _ContributionDate;
		
		private System.Nullable<decimal> _ExpectedContributionAmount;
		
		private System.Nullable<bool> _IsContributionMade;
		
		private string _CreatedBy;
		
		private System.Nullable<decimal> _Balance;
		
		private EntityRef<Investment> _Investment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContributionScheduleIdChanging(int value);
    partial void OnContributionScheduleIdChanged();
    partial void OnMemberIDChanging(System.Nullable<int> value);
    partial void OnMemberIDChanged();
    partial void OnInvestmentIdChanging(System.Nullable<int> value);
    partial void OnInvestmentIdChanged();
    partial void OnContributionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnContributionDateChanged();
    partial void OnExpectedContributionAmountChanging(System.Nullable<decimal> value);
    partial void OnExpectedContributionAmountChanged();
    partial void OnIsContributionMadeChanging(System.Nullable<bool> value);
    partial void OnIsContributionMadeChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnBalanceChanging(System.Nullable<decimal> value);
    partial void OnBalanceChanged();
    #endregion
		
		public ContributionSchedule()
		{
			this._Investment = default(EntityRef<Investment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContributionScheduleId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContributionScheduleId
		{
			get
			{
				return this._ContributionScheduleId;
			}
			set
			{
				if ((this._ContributionScheduleId != value))
				{
					this.OnContributionScheduleIdChanging(value);
					this.SendPropertyChanging();
					this._ContributionScheduleId = value;
					this.SendPropertyChanged("ContributionScheduleId");
					this.OnContributionScheduleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int")]
		public System.Nullable<int> MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentId", DbType="Int")]
		public System.Nullable<int> InvestmentId
		{
			get
			{
				return this._InvestmentId;
			}
			set
			{
				if ((this._InvestmentId != value))
				{
					if (this._Investment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvestmentIdChanging(value);
					this.SendPropertyChanging();
					this._InvestmentId = value;
					this.SendPropertyChanged("InvestmentId");
					this.OnInvestmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContributionDate", DbType="Date")]
		public System.Nullable<System.DateTime> ContributionDate
		{
			get
			{
				return this._ContributionDate;
			}
			set
			{
				if ((this._ContributionDate != value))
				{
					this.OnContributionDateChanging(value);
					this.SendPropertyChanging();
					this._ContributionDate = value;
					this.SendPropertyChanged("ContributionDate");
					this.OnContributionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedContributionAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ExpectedContributionAmount
		{
			get
			{
				return this._ExpectedContributionAmount;
			}
			set
			{
				if ((this._ExpectedContributionAmount != value))
				{
					this.OnExpectedContributionAmountChanging(value);
					this.SendPropertyChanging();
					this._ExpectedContributionAmount = value;
					this.SendPropertyChanged("ExpectedContributionAmount");
					this.OnExpectedContributionAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsContributionMade", DbType="Bit")]
		public System.Nullable<bool> IsContributionMade
		{
			get
			{
				return this._IsContributionMade;
			}
			set
			{
				if ((this._IsContributionMade != value))
				{
					this.OnIsContributionMadeChanging(value);
					this.SendPropertyChanging();
					this._IsContributionMade = value;
					this.SendPropertyChanged("IsContributionMade");
					this.OnIsContributionMadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Investment_ContributionSchedule", Storage="_Investment", ThisKey="InvestmentId", OtherKey="InvestmentID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Investment Investment
		{
			get
			{
				return this._Investment.Entity;
			}
			set
			{
				Investment previousValue = this._Investment.Entity;
				if (((previousValue != value) 
							|| (this._Investment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Investment.Entity = null;
						previousValue.ContributionSchedules.Remove(this);
					}
					this._Investment.Entity = value;
					if ((value != null))
					{
						value.ContributionSchedules.Add(this);
						this._InvestmentId = value.InvestmentID;
					}
					else
					{
						this._InvestmentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Investment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupMembers")]
	public partial class GroupMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GroupMemberID;
		
		private System.Nullable<int> _MemberID;
		
		private System.Nullable<int> _GroupID;
		
		private string _Description;
		
		private string _CreatedBy;
		
		private EntityRef<Member> _Member;
		
		private EntityRef<LoanGroup> _LoanGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupMemberIDChanging(int value);
    partial void OnGroupMemberIDChanged();
    partial void OnMemberIDChanging(System.Nullable<int> value);
    partial void OnMemberIDChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    #endregion
		
		public GroupMember()
		{
			this._Member = default(EntityRef<Member>);
			this._LoanGroup = default(EntityRef<LoanGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupMemberID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GroupMemberID
		{
			get
			{
				return this._GroupMemberID;
			}
			set
			{
				if ((this._GroupMemberID != value))
				{
					this.OnGroupMemberIDChanging(value);
					this.SendPropertyChanging();
					this._GroupMemberID = value;
					this.SendPropertyChanged("GroupMemberID");
					this.OnGroupMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int")]
		public System.Nullable<int> MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int")]
		public System.Nullable<int> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._LoanGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_GroupMember", Storage="_Member", ThisKey="MemberID", OtherKey="MemberId", IsForeignKey=true, DeleteRule="CASCADE")]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.GroupMembers.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.GroupMembers.Add(this);
						this._MemberID = value.MemberId;
					}
					else
					{
						this._MemberID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoanGroup_GroupMember", Storage="_LoanGroup", ThisKey="GroupID", OtherKey="GroupId", IsForeignKey=true)]
		public LoanGroup LoanGroup
		{
			get
			{
				return this._LoanGroup.Entity;
			}
			set
			{
				LoanGroup previousValue = this._LoanGroup.Entity;
				if (((previousValue != value) 
							|| (this._LoanGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoanGroup.Entity = null;
						previousValue.GroupMembers.Remove(this);
					}
					this._LoanGroup.Entity = value;
					if ((value != null))
					{
						value.GroupMembers.Add(this);
						this._GroupID = value.GroupId;
					}
					else
					{
						this._GroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoanGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Guarantors")]
	public partial class Guarantor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GuarantorId;
		
		private string _GuarantorFirstName;
		
		private string _GuarantorLastName;
		
		private System.Data.Linq.Binary _GuarantorPhoto;
		
		private string _CreatedBy;
		
		private string _Fax;
		
		private string _Telephone;
		
		private string _Address;
		
		private string _ResidentialAddress;
		
		private string _BusinessAddress;
		
		private string _Gender;
		
		private string _OtherName;
		
		private System.Nullable<int> _IdentityTypeID;
		
		private string _IdentityNumber;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private string _Mobile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGuarantorIdChanging(int value);
    partial void OnGuarantorIdChanged();
    partial void OnGuarantorFirstNameChanging(string value);
    partial void OnGuarantorFirstNameChanged();
    partial void OnGuarantorLastNameChanging(string value);
    partial void OnGuarantorLastNameChanged();
    partial void OnGuarantorPhotoChanging(System.Data.Linq.Binary value);
    partial void OnGuarantorPhotoChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnResidentialAddressChanging(string value);
    partial void OnResidentialAddressChanged();
    partial void OnBusinessAddressChanging(string value);
    partial void OnBusinessAddressChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnOtherNameChanging(string value);
    partial void OnOtherNameChanged();
    partial void OnIdentityTypeIDChanging(System.Nullable<int> value);
    partial void OnIdentityTypeIDChanged();
    partial void OnIdentityNumberChanging(string value);
    partial void OnIdentityNumberChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    #endregion
		
		public Guarantor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuarantorId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GuarantorId
		{
			get
			{
				return this._GuarantorId;
			}
			set
			{
				if ((this._GuarantorId != value))
				{
					this.OnGuarantorIdChanging(value);
					this.SendPropertyChanging();
					this._GuarantorId = value;
					this.SendPropertyChanged("GuarantorId");
					this.OnGuarantorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuarantorFirstName", DbType="NVarChar(150)")]
		public string GuarantorFirstName
		{
			get
			{
				return this._GuarantorFirstName;
			}
			set
			{
				if ((this._GuarantorFirstName != value))
				{
					this.OnGuarantorFirstNameChanging(value);
					this.SendPropertyChanging();
					this._GuarantorFirstName = value;
					this.SendPropertyChanged("GuarantorFirstName");
					this.OnGuarantorFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuarantorLastName", DbType="NVarChar(150)")]
		public string GuarantorLastName
		{
			get
			{
				return this._GuarantorLastName;
			}
			set
			{
				if ((this._GuarantorLastName != value))
				{
					this.OnGuarantorLastNameChanging(value);
					this.SendPropertyChanging();
					this._GuarantorLastName = value;
					this.SendPropertyChanged("GuarantorLastName");
					this.OnGuarantorLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuarantorPhoto", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary GuarantorPhoto
		{
			get
			{
				return this._GuarantorPhoto;
			}
			set
			{
				if ((this._GuarantorPhoto != value))
				{
					this.OnGuarantorPhotoChanging(value);
					this.SendPropertyChanging();
					this._GuarantorPhoto = value;
					this.SendPropertyChanged("GuarantorPhoto");
					this.OnGuarantorPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(20)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(20)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(600)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidentialAddress", DbType="NVarChar(100)")]
		public string ResidentialAddress
		{
			get
			{
				return this._ResidentialAddress;
			}
			set
			{
				if ((this._ResidentialAddress != value))
				{
					this.OnResidentialAddressChanging(value);
					this.SendPropertyChanging();
					this._ResidentialAddress = value;
					this.SendPropertyChanged("ResidentialAddress");
					this.OnResidentialAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessAddress", DbType="NVarChar(100)")]
		public string BusinessAddress
		{
			get
			{
				return this._BusinessAddress;
			}
			set
			{
				if ((this._BusinessAddress != value))
				{
					this.OnBusinessAddressChanging(value);
					this.SendPropertyChanging();
					this._BusinessAddress = value;
					this.SendPropertyChanged("BusinessAddress");
					this.OnBusinessAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(10)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherName", DbType="NVarChar(50)")]
		public string OtherName
		{
			get
			{
				return this._OtherName;
			}
			set
			{
				if ((this._OtherName != value))
				{
					this.OnOtherNameChanging(value);
					this.SendPropertyChanging();
					this._OtherName = value;
					this.SendPropertyChanged("OtherName");
					this.OnOtherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityTypeID", DbType="Int")]
		public System.Nullable<int> IdentityTypeID
		{
			get
			{
				return this._IdentityTypeID;
			}
			set
			{
				if ((this._IdentityTypeID != value))
				{
					this.OnIdentityTypeIDChanging(value);
					this.SendPropertyChanging();
					this._IdentityTypeID = value;
					this.SendPropertyChanged("IdentityTypeID");
					this.OnIdentityTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityNumber", DbType="NVarChar(50)")]
		public string IdentityNumber
		{
			get
			{
				return this._IdentityNumber;
			}
			set
			{
				if ((this._IdentityNumber != value))
				{
					this.OnIdentityNumberChanging(value);
					this.SendPropertyChanging();
					this._IdentityNumber = value;
					this.SendPropertyChanged("IdentityNumber");
					this.OnIdentityNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(50)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Holidays")]
	public partial class Holiday : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HolidayID;
		
		private System.Nullable<System.DateTime> _HolidayDate;
		
		private string _CreatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHolidayIDChanging(int value);
    partial void OnHolidayIDChanged();
    partial void OnHolidayDateChanging(System.Nullable<System.DateTime> value);
    partial void OnHolidayDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    #endregion
		
		public Holiday()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HolidayID
		{
			get
			{
				return this._HolidayID;
			}
			set
			{
				if ((this._HolidayID != value))
				{
					this.OnHolidayIDChanging(value);
					this.SendPropertyChanging();
					this._HolidayID = value;
					this.SendPropertyChanged("HolidayID");
					this.OnHolidayIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolidayDate", DbType="Date")]
		public System.Nullable<System.DateTime> HolidayDate
		{
			get
			{
				return this._HolidayDate;
			}
			set
			{
				if ((this._HolidayDate != value))
				{
					this.OnHolidayDateChanging(value);
					this.SendPropertyChanging();
					this._HolidayDate = value;
					this.SendPropertyChanged("HolidayDate");
					this.OnHolidayDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IdentificationTypes")]
	public partial class IdentificationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdentificationTypeId;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdentificationTypeIdChanging(int value);
    partial void OnIdentificationTypeIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public IdentificationType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentificationTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdentificationTypeId
		{
			get
			{
				return this._IdentificationTypeId;
			}
			set
			{
				if ((this._IdentificationTypeId != value))
				{
					this.OnIdentificationTypeIdChanging(value);
					this.SendPropertyChanging();
					this._IdentificationTypeId = value;
					this.SendPropertyChanged("IdentificationTypeId");
					this.OnIdentificationTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InterestRateTypes")]
	public partial class InterestRateType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InterestRateTypeId;
		
		private System.Nullable<decimal> _Rate;
		
		private string _Description;
		
		private EntitySet<Loan> _Loans;
		
		private EntitySet<Investment> _Investments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInterestRateTypeIdChanging(int value);
    partial void OnInterestRateTypeIdChanged();
    partial void OnRateChanging(System.Nullable<decimal> value);
    partial void OnRateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public InterestRateType()
		{
			this._Loans = new EntitySet<Loan>(new Action<Loan>(this.attach_Loans), new Action<Loan>(this.detach_Loans));
			this._Investments = new EntitySet<Investment>(new Action<Investment>(this.attach_Investments), new Action<Investment>(this.detach_Investments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestRateTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int InterestRateTypeId
		{
			get
			{
				return this._InterestRateTypeId;
			}
			set
			{
				if ((this._InterestRateTypeId != value))
				{
					this.OnInterestRateTypeIdChanging(value);
					this.SendPropertyChanging();
					this._InterestRateTypeId = value;
					this.SendPropertyChanged("InterestRateTypeId");
					this.OnInterestRateTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InterestRateType_Loan", Storage="_Loans", ThisKey="InterestRateTypeId", OtherKey="InterestTypeId")]
		public EntitySet<Loan> Loans
		{
			get
			{
				return this._Loans;
			}
			set
			{
				this._Loans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InterestRateType_Investment", Storage="_Investments", ThisKey="InterestRateTypeId", OtherKey="InterestTypeId")]
		public EntitySet<Investment> Investments
		{
			get
			{
				return this._Investments;
			}
			set
			{
				this._Investments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Loans(Loan entity)
		{
			this.SendPropertyChanging();
			entity.InterestRateType = this;
		}
		
		private void detach_Loans(Loan entity)
		{
			this.SendPropertyChanging();
			entity.InterestRateType = null;
		}
		
		private void attach_Investments(Investment entity)
		{
			this.SendPropertyChanging();
			entity.InterestRateType = this;
		}
		
		private void detach_Investments(Investment entity)
		{
			this.SendPropertyChanging();
			entity.InterestRateType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvestmentDurations")]
	public partial class InvestmentDuration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvestmentDurationId;
		
		private string _Description;
		
		private System.Nullable<int> _NumberOfMonths;
		
		private string _CreatedBy;
		
		private System.Nullable<int> _NumberOfDays;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvestmentDurationIdChanging(int value);
    partial void OnInvestmentDurationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnNumberOfMonthsChanging(System.Nullable<int> value);
    partial void OnNumberOfMonthsChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnNumberOfDaysChanging(System.Nullable<int> value);
    partial void OnNumberOfDaysChanged();
    #endregion
		
		public InvestmentDuration()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentDurationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InvestmentDurationId
		{
			get
			{
				return this._InvestmentDurationId;
			}
			set
			{
				if ((this._InvestmentDurationId != value))
				{
					this.OnInvestmentDurationIdChanging(value);
					this.SendPropertyChanging();
					this._InvestmentDurationId = value;
					this.SendPropertyChanged("InvestmentDurationId");
					this.OnInvestmentDurationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfMonths", DbType="Int")]
		public System.Nullable<int> NumberOfMonths
		{
			get
			{
				return this._NumberOfMonths;
			}
			set
			{
				if ((this._NumberOfMonths != value))
				{
					this.OnNumberOfMonthsChanging(value);
					this.SendPropertyChanging();
					this._NumberOfMonths = value;
					this.SendPropertyChanged("NumberOfMonths");
					this.OnNumberOfMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfDays", DbType="Int")]
		public System.Nullable<int> NumberOfDays
		{
			get
			{
				return this._NumberOfDays;
			}
			set
			{
				if ((this._NumberOfDays != value))
				{
					this.OnNumberOfDaysChanging(value);
					this.SendPropertyChanging();
					this._NumberOfDays = value;
					this.SendPropertyChanged("NumberOfDays");
					this.OnNumberOfDaysChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvestmentTypes")]
	public partial class InvestmentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvestmentTypeId;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvestmentTypeIdChanging(int value);
    partial void OnInvestmentTypeIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public InvestmentType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int InvestmentTypeId
		{
			get
			{
				return this._InvestmentTypeId;
			}
			set
			{
				if ((this._InvestmentTypeId != value))
				{
					this.OnInvestmentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._InvestmentTypeId = value;
					this.SendPropertyChanged("InvestmentTypeId");
					this.OnInvestmentTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoanDurations")]
	public partial class LoanDuration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoanDurationId;
		
		private string _Description;
		
		private System.Nullable<int> _NumberOfMonths;
		
		private string _CreatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoanDurationIdChanging(int value);
    partial void OnLoanDurationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnNumberOfMonthsChanging(System.Nullable<int> value);
    partial void OnNumberOfMonthsChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    #endregion
		
		public LoanDuration()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanDurationId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoanDurationId
		{
			get
			{
				return this._LoanDurationId;
			}
			set
			{
				if ((this._LoanDurationId != value))
				{
					this.OnLoanDurationIdChanging(value);
					this.SendPropertyChanging();
					this._LoanDurationId = value;
					this.SendPropertyChanged("LoanDurationId");
					this.OnLoanDurationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfMonths", DbType="Int")]
		public System.Nullable<int> NumberOfMonths
		{
			get
			{
				return this._NumberOfMonths;
			}
			set
			{
				if ((this._NumberOfMonths != value))
				{
					this.OnNumberOfMonthsChanging(value);
					this.SendPropertyChanging();
					this._NumberOfMonths = value;
					this.SendPropertyChanged("NumberOfMonths");
					this.OnNumberOfMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoanPenalty")]
	public partial class LoanPenalty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoanPenaltyID;
		
		private System.Nullable<int> _LoanID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<decimal> _PenaltyRate;
		
		private System.Nullable<decimal> _PenaltyAmount;
		
		private System.Nullable<int> _PenaltyDurationInMonths;
		
		private System.Nullable<decimal> _BalanceOVerdue;
		
		private System.Nullable<bool> _IsReleived;
		
		private EntityRef<Loan> _Loan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoanPenaltyIDChanging(int value);
    partial void OnLoanPenaltyIDChanged();
    partial void OnLoanIDChanging(System.Nullable<int> value);
    partial void OnLoanIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnPenaltyRateChanging(System.Nullable<decimal> value);
    partial void OnPenaltyRateChanged();
    partial void OnPenaltyAmountChanging(System.Nullable<decimal> value);
    partial void OnPenaltyAmountChanged();
    partial void OnPenaltyDurationInMonthsChanging(System.Nullable<int> value);
    partial void OnPenaltyDurationInMonthsChanged();
    partial void OnBalanceOVerdueChanging(System.Nullable<decimal> value);
    partial void OnBalanceOVerdueChanged();
    partial void OnIsReleivedChanging(System.Nullable<bool> value);
    partial void OnIsReleivedChanged();
    #endregion
		
		public LoanPenalty()
		{
			this._Loan = default(EntityRef<Loan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanPenaltyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoanPenaltyID
		{
			get
			{
				return this._LoanPenaltyID;
			}
			set
			{
				if ((this._LoanPenaltyID != value))
				{
					this.OnLoanPenaltyIDChanging(value);
					this.SendPropertyChanging();
					this._LoanPenaltyID = value;
					this.SendPropertyChanged("LoanPenaltyID");
					this.OnLoanPenaltyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanID", DbType="Int")]
		public System.Nullable<int> LoanID
		{
			get
			{
				return this._LoanID;
			}
			set
			{
				if ((this._LoanID != value))
				{
					if (this._Loan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoanIDChanging(value);
					this.SendPropertyChanging();
					this._LoanID = value;
					this.SendPropertyChanged("LoanID");
					this.OnLoanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PenaltyRate", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PenaltyRate
		{
			get
			{
				return this._PenaltyRate;
			}
			set
			{
				if ((this._PenaltyRate != value))
				{
					this.OnPenaltyRateChanging(value);
					this.SendPropertyChanging();
					this._PenaltyRate = value;
					this.SendPropertyChanged("PenaltyRate");
					this.OnPenaltyRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PenaltyAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PenaltyAmount
		{
			get
			{
				return this._PenaltyAmount;
			}
			set
			{
				if ((this._PenaltyAmount != value))
				{
					this.OnPenaltyAmountChanging(value);
					this.SendPropertyChanging();
					this._PenaltyAmount = value;
					this.SendPropertyChanged("PenaltyAmount");
					this.OnPenaltyAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PenaltyDurationInMonths", DbType="Int")]
		public System.Nullable<int> PenaltyDurationInMonths
		{
			get
			{
				return this._PenaltyDurationInMonths;
			}
			set
			{
				if ((this._PenaltyDurationInMonths != value))
				{
					this.OnPenaltyDurationInMonthsChanging(value);
					this.SendPropertyChanging();
					this._PenaltyDurationInMonths = value;
					this.SendPropertyChanged("PenaltyDurationInMonths");
					this.OnPenaltyDurationInMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceOVerdue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> BalanceOVerdue
		{
			get
			{
				return this._BalanceOVerdue;
			}
			set
			{
				if ((this._BalanceOVerdue != value))
				{
					this.OnBalanceOVerdueChanging(value);
					this.SendPropertyChanging();
					this._BalanceOVerdue = value;
					this.SendPropertyChanged("BalanceOVerdue");
					this.OnBalanceOVerdueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReleived", DbType="Bit")]
		public System.Nullable<bool> IsReleived
		{
			get
			{
				return this._IsReleived;
			}
			set
			{
				if ((this._IsReleived != value))
				{
					this.OnIsReleivedChanging(value);
					this.SendPropertyChanging();
					this._IsReleived = value;
					this.SendPropertyChanged("IsReleived");
					this.OnIsReleivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loan_LoanPenalty", Storage="_Loan", ThisKey="LoanID", OtherKey="LoanID", IsForeignKey=true)]
		public Loan Loan
		{
			get
			{
				return this._Loan.Entity;
			}
			set
			{
				Loan previousValue = this._Loan.Entity;
				if (((previousValue != value) 
							|| (this._Loan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Loan.Entity = null;
						previousValue.LoanPenalties.Remove(this);
					}
					this._Loan.Entity = value;
					if ((value != null))
					{
						value.LoanPenalties.Add(this);
						this._LoanID = value.LoanID;
					}
					else
					{
						this._LoanID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Loan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoanPresets")]
	public partial class LoanPreset : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoanPresetId;
		
		private string _Description;
		
		private System.Nullable<decimal> _NumberOfMonths;
		
		private System.Nullable<decimal> _InsterestRate;
		
		private string _CreatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoanPresetIdChanging(int value);
    partial void OnLoanPresetIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnNumberOfMonthsChanging(System.Nullable<decimal> value);
    partial void OnNumberOfMonthsChanged();
    partial void OnInsterestRateChanging(System.Nullable<decimal> value);
    partial void OnInsterestRateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    #endregion
		
		public LoanPreset()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanPresetId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoanPresetId
		{
			get
			{
				return this._LoanPresetId;
			}
			set
			{
				if ((this._LoanPresetId != value))
				{
					this.OnLoanPresetIdChanging(value);
					this.SendPropertyChanging();
					this._LoanPresetId = value;
					this.SendPropertyChanged("LoanPresetId");
					this.OnLoanPresetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfMonths", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> NumberOfMonths
		{
			get
			{
				return this._NumberOfMonths;
			}
			set
			{
				if ((this._NumberOfMonths != value))
				{
					this.OnNumberOfMonthsChanging(value);
					this.SendPropertyChanging();
					this._NumberOfMonths = value;
					this.SendPropertyChanged("NumberOfMonths");
					this.OnNumberOfMonthsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsterestRate", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> InsterestRate
		{
			get
			{
				return this._InsterestRate;
			}
			set
			{
				if ((this._InsterestRate != value))
				{
					this.OnInsterestRateChanging(value);
					this.SendPropertyChanging();
					this._InsterestRate = value;
					this.SendPropertyChanged("InsterestRate");
					this.OnInsterestRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MemberDeposits")]
	public partial class MemberDeposit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MemberDepositId;
		
		private System.Nullable<int> _MemberId;
		
		private System.Nullable<decimal> _MemberDepositAmount;
		
		private string _DepositedBy;
		
		private System.Nullable<System.DateTime> _DepositDate;
		
		private System.Nullable<int> _ReceivedByUserId;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemberDepositIdChanging(int value);
    partial void OnMemberDepositIdChanged();
    partial void OnMemberIdChanging(System.Nullable<int> value);
    partial void OnMemberIdChanged();
    partial void OnMemberDepositAmountChanging(System.Nullable<decimal> value);
    partial void OnMemberDepositAmountChanged();
    partial void OnDepositedByChanging(string value);
    partial void OnDepositedByChanged();
    partial void OnDepositDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDepositDateChanged();
    partial void OnReceivedByUserIdChanging(System.Nullable<int> value);
    partial void OnReceivedByUserIdChanged();
    #endregion
		
		public MemberDeposit()
		{
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberDepositId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MemberDepositId
		{
			get
			{
				return this._MemberDepositId;
			}
			set
			{
				if ((this._MemberDepositId != value))
				{
					this.OnMemberDepositIdChanging(value);
					this.SendPropertyChanging();
					this._MemberDepositId = value;
					this.SendPropertyChanged("MemberDepositId");
					this.OnMemberDepositIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberId", DbType="Int")]
		public System.Nullable<int> MemberId
		{
			get
			{
				return this._MemberId;
			}
			set
			{
				if ((this._MemberId != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIdChanging(value);
					this.SendPropertyChanging();
					this._MemberId = value;
					this.SendPropertyChanged("MemberId");
					this.OnMemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberDepositAmount", DbType="Money")]
		public System.Nullable<decimal> MemberDepositAmount
		{
			get
			{
				return this._MemberDepositAmount;
			}
			set
			{
				if ((this._MemberDepositAmount != value))
				{
					this.OnMemberDepositAmountChanging(value);
					this.SendPropertyChanging();
					this._MemberDepositAmount = value;
					this.SendPropertyChanged("MemberDepositAmount");
					this.OnMemberDepositAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositedBy", DbType="NVarChar(50)")]
		public string DepositedBy
		{
			get
			{
				return this._DepositedBy;
			}
			set
			{
				if ((this._DepositedBy != value))
				{
					this.OnDepositedByChanging(value);
					this.SendPropertyChanging();
					this._DepositedBy = value;
					this.SendPropertyChanged("DepositedBy");
					this.OnDepositedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DepositDate
		{
			get
			{
				return this._DepositDate;
			}
			set
			{
				if ((this._DepositDate != value))
				{
					this.OnDepositDateChanging(value);
					this.SendPropertyChanging();
					this._DepositDate = value;
					this.SendPropertyChanged("DepositDate");
					this.OnDepositDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedByUserId", DbType="Int")]
		public System.Nullable<int> ReceivedByUserId
		{
			get
			{
				return this._ReceivedByUserId;
			}
			set
			{
				if ((this._ReceivedByUserId != value))
				{
					this.OnReceivedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._ReceivedByUserId = value;
					this.SendPropertyChanged("ReceivedByUserId");
					this.OnReceivedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_MemberDeposit", Storage="_Member", ThisKey="MemberId", OtherKey="MemberId", IsForeignKey=true, DeleteRule="CASCADE")]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.MemberDeposits.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.MemberDeposits.Add(this);
						this._MemberId = value.MemberId;
					}
					else
					{
						this._MemberId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Parameters")]
	public partial class Parameter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ParameterID;
		
		private System.Nullable<int> _ReceiptNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnParameterIDChanging(int value);
    partial void OnParameterIDChanged();
    partial void OnReceiptNumberChanging(System.Nullable<int> value);
    partial void OnReceiptNumberChanged();
    #endregion
		
		public Parameter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParameterID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ParameterID
		{
			get
			{
				return this._ParameterID;
			}
			set
			{
				if ((this._ParameterID != value))
				{
					this.OnParameterIDChanging(value);
					this.SendPropertyChanging();
					this._ParameterID = value;
					this.SendPropertyChanged("ParameterID");
					this.OnParameterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNumber", DbType="Int")]
		public System.Nullable<int> ReceiptNumber
		{
			get
			{
				return this._ReceiptNumber;
			}
			set
			{
				if ((this._ReceiptNumber != value))
				{
					this.OnReceiptNumberChanging(value);
					this.SendPropertyChanging();
					this._ReceiptNumber = value;
					this.SendPropertyChanged("ReceiptNumber");
					this.OnReceiptNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RepaymentFrequencies")]
	public partial class RepaymentFrequency : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RepaymentFrequencyId;
		
		private System.Nullable<int> _NumberOfDays;
		
		private string _Description;
		
		private System.Nullable<decimal> _ConversionUnit;
		
		private EntitySet<Loan> _Loans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRepaymentFrequencyIdChanging(int value);
    partial void OnRepaymentFrequencyIdChanged();
    partial void OnNumberOfDaysChanging(System.Nullable<int> value);
    partial void OnNumberOfDaysChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnConversionUnitChanging(System.Nullable<decimal> value);
    partial void OnConversionUnitChanged();
    #endregion
		
		public RepaymentFrequency()
		{
			this._Loans = new EntitySet<Loan>(new Action<Loan>(this.attach_Loans), new Action<Loan>(this.detach_Loans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentFrequencyId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RepaymentFrequencyId
		{
			get
			{
				return this._RepaymentFrequencyId;
			}
			set
			{
				if ((this._RepaymentFrequencyId != value))
				{
					this.OnRepaymentFrequencyIdChanging(value);
					this.SendPropertyChanging();
					this._RepaymentFrequencyId = value;
					this.SendPropertyChanged("RepaymentFrequencyId");
					this.OnRepaymentFrequencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfDays", DbType="Int")]
		public System.Nullable<int> NumberOfDays
		{
			get
			{
				return this._NumberOfDays;
			}
			set
			{
				if ((this._NumberOfDays != value))
				{
					this.OnNumberOfDaysChanging(value);
					this.SendPropertyChanging();
					this._NumberOfDays = value;
					this.SendPropertyChanged("NumberOfDays");
					this.OnNumberOfDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConversionUnit", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ConversionUnit
		{
			get
			{
				return this._ConversionUnit;
			}
			set
			{
				if ((this._ConversionUnit != value))
				{
					this.OnConversionUnitChanging(value);
					this.SendPropertyChanging();
					this._ConversionUnit = value;
					this.SendPropertyChanged("ConversionUnit");
					this.OnConversionUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RepaymentFrequency_Loan", Storage="_Loans", ThisKey="RepaymentFrequencyId", OtherKey="RepaymentFrequencyId")]
		public EntitySet<Loan> Loans
		{
			get
			{
				return this._Loans;
			}
			set
			{
				this._Loans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Loans(Loan entity)
		{
			this.SendPropertyChanging();
			entity.RepaymentFrequency = this;
		}
		
		private void detach_Loans(Loan entity)
		{
			this.SendPropertyChanging();
			entity.RepaymentFrequency = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MembersView")]
	public partial class MembersView
	{
		
		private string _Member;
		
		private int _MemberId;
		
		public MembersView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Member", DbType="NVarChar(354)")]
		public string Member
		{
			get
			{
				return this._Member;
			}
			set
			{
				if ((this._Member != value))
				{
					this._Member = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int MemberId
		{
			get
			{
				return this._MemberId;
			}
			set
			{
				if ((this._MemberId != value))
				{
					this._MemberId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwGroupInvestment")]
	public partial class vwGroupInvestment
	{
		
		private System.Nullable<decimal> _TotalContribution;
		
		private System.Nullable<System.DateTime> _MaturityDate;
		
		private System.Nullable<bool> _IsMatured;
		
		private System.Nullable<decimal> _InvestmentAmount;
		
		private System.Nullable<decimal> _InsterstRate;
		
		private string _Duration;
		
		private string _DurationDescription;
		
		private System.Nullable<decimal> _MaturedAmount;
		
		private System.Nullable<decimal> _ContributionFreqAmount;
		
		private string _ContributionFrquency;
		
		private System.Nullable<decimal> _InvestmentDuration;
		
		private string _InterestTypeDescription;
		
		private int _InvestmentID;
		
		private string _GroupName;
		
		public vwGroupInvestment()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalContribution", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalContribution
		{
			get
			{
				return this._TotalContribution;
			}
			set
			{
				if ((this._TotalContribution != value))
				{
					this._TotalContribution = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaturityDate", DbType="Date")]
		public System.Nullable<System.DateTime> MaturityDate
		{
			get
			{
				return this._MaturityDate;
			}
			set
			{
				if ((this._MaturityDate != value))
				{
					this._MaturityDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMatured", DbType="Bit")]
		public System.Nullable<bool> IsMatured
		{
			get
			{
				return this._IsMatured;
			}
			set
			{
				if ((this._IsMatured != value))
				{
					this._IsMatured = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentAmount", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> InvestmentAmount
		{
			get
			{
				return this._InvestmentAmount;
			}
			set
			{
				if ((this._InvestmentAmount != value))
				{
					this._InvestmentAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsterstRate", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> InsterstRate
		{
			get
			{
				return this._InsterstRate;
			}
			set
			{
				if ((this._InsterstRate != value))
				{
					this._InsterstRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="NVarChar(30)")]
		public string Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this._Duration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DurationDescription", DbType="NVarChar(100)")]
		public string DurationDescription
		{
			get
			{
				return this._DurationDescription;
			}
			set
			{
				if ((this._DurationDescription != value))
				{
					this._DurationDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaturedAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MaturedAmount
		{
			get
			{
				return this._MaturedAmount;
			}
			set
			{
				if ((this._MaturedAmount != value))
				{
					this._MaturedAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContributionFreqAmount", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ContributionFreqAmount
		{
			get
			{
				return this._ContributionFreqAmount;
			}
			set
			{
				if ((this._ContributionFreqAmount != value))
				{
					this._ContributionFreqAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContributionFrquency", DbType="NVarChar(100)")]
		public string ContributionFrquency
		{
			get
			{
				return this._ContributionFrquency;
			}
			set
			{
				if ((this._ContributionFrquency != value))
				{
					this._ContributionFrquency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentDuration", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> InvestmentDuration
		{
			get
			{
				return this._InvestmentDuration;
			}
			set
			{
				if ((this._InvestmentDuration != value))
				{
					this._InvestmentDuration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestTypeDescription", DbType="NVarChar(50)")]
		public string InterestTypeDescription
		{
			get
			{
				return this._InterestTypeDescription;
			}
			set
			{
				if ((this._InterestTypeDescription != value))
				{
					this._InterestTypeDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentID", DbType="Int NOT NULL")]
		public int InvestmentID
		{
			get
			{
				return this._InvestmentID;
			}
			set
			{
				if ((this._InvestmentID != value))
				{
					this._InvestmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(300)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this._GroupName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwGroupLoan")]
	public partial class vwGroupLoan
	{
		
		private System.Nullable<decimal> _Principal;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _Duration;
		
		private System.Nullable<int> _InterestTypeId;
		
		private string _RawDurationEntered;
		
		private System.Nullable<System.DateTime> _ExpectedRepaymentEndDate;
		
		private System.Nullable<decimal> _totalRepayment;
		
		private string _RepaymentFreqDescription;
		
		private int _LoanID;
		
		private System.Nullable<decimal> _Interest;
		
		private string _InterestTypeDescription;
		
		private string _LoanDurationDescription;
		
		private string _CollateralName;
		
		private string _CollateralDescription;
		
		private string _GroupName;
		
		private string _GroupDescription;
		
		public vwGroupLoan()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Principal", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Principal
		{
			get
			{
				return this._Principal;
			}
			set
			{
				if ((this._Principal != value))
				{
					this._Principal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this._Duration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestTypeId", DbType="Int")]
		public System.Nullable<int> InterestTypeId
		{
			get
			{
				return this._InterestTypeId;
			}
			set
			{
				if ((this._InterestTypeId != value))
				{
					this._InterestTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RawDurationEntered", DbType="NVarChar(50)")]
		public string RawDurationEntered
		{
			get
			{
				return this._RawDurationEntered;
			}
			set
			{
				if ((this._RawDurationEntered != value))
				{
					this._RawDurationEntered = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedRepaymentEndDate", DbType="Date")]
		public System.Nullable<System.DateTime> ExpectedRepaymentEndDate
		{
			get
			{
				return this._ExpectedRepaymentEndDate;
			}
			set
			{
				if ((this._ExpectedRepaymentEndDate != value))
				{
					this._ExpectedRepaymentEndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalRepayment", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> totalRepayment
		{
			get
			{
				return this._totalRepayment;
			}
			set
			{
				if ((this._totalRepayment != value))
				{
					this._totalRepayment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentFreqDescription", DbType="NVarChar(100)")]
		public string RepaymentFreqDescription
		{
			get
			{
				return this._RepaymentFreqDescription;
			}
			set
			{
				if ((this._RepaymentFreqDescription != value))
				{
					this._RepaymentFreqDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanID", DbType="Int NOT NULL")]
		public int LoanID
		{
			get
			{
				return this._LoanID;
			}
			set
			{
				if ((this._LoanID != value))
				{
					this._LoanID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interest", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Interest
		{
			get
			{
				return this._Interest;
			}
			set
			{
				if ((this._Interest != value))
				{
					this._Interest = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestTypeDescription", DbType="NVarChar(50)")]
		public string InterestTypeDescription
		{
			get
			{
				return this._InterestTypeDescription;
			}
			set
			{
				if ((this._InterestTypeDescription != value))
				{
					this._InterestTypeDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanDurationDescription", DbType="NVarChar(100)")]
		public string LoanDurationDescription
		{
			get
			{
				return this._LoanDurationDescription;
			}
			set
			{
				if ((this._LoanDurationDescription != value))
				{
					this._LoanDurationDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollateralName", DbType="NVarChar(100)")]
		public string CollateralName
		{
			get
			{
				return this._CollateralName;
			}
			set
			{
				if ((this._CollateralName != value))
				{
					this._CollateralName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollateralDescription", DbType="NVarChar(500)")]
		public string CollateralDescription
		{
			get
			{
				return this._CollateralDescription;
			}
			set
			{
				if ((this._CollateralDescription != value))
				{
					this._CollateralDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(300)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this._GroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupDescription", DbType="NVarChar(100)")]
		public string GroupDescription
		{
			get
			{
				return this._GroupDescription;
			}
			set
			{
				if ((this._GroupDescription != value))
				{
					this._GroupDescription = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwGroups")]
	public partial class vwGroup
	{
		
		private string _GroupName;
		
		private string _Description;
		
		private int _GroupId;
		
		private System.Nullable<int> _GroupMemberCount;
		
		public vwGroup()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(300)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this._GroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int NOT NULL")]
		public int GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this._GroupId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupMemberCount", DbType="Int")]
		public System.Nullable<int> GroupMemberCount
		{
			get
			{
				return this._GroupMemberCount;
			}
			set
			{
				if ((this._GroupMemberCount != value))
				{
					this._GroupMemberCount = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwGuarantor")]
	public partial class vwGuarantor
	{
		
		private string _Name;
		
		private int _GuarantorId;
		
		public vwGuarantor()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(352)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuarantorId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int GuarantorId
		{
			get
			{
				return this._GuarantorId;
			}
			set
			{
				if ((this._GuarantorId != value))
				{
					this._GuarantorId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwLoanRepayment")]
	public partial class vwLoanRepayment
	{
		
		private int _RepaymentId;
		
		private System.Nullable<int> _LoanId;
		
		private System.Nullable<decimal> _RepaymentAmount;
		
		private string _CreatedBy;
		
		private string _Description;
		
		private string _RepaymentBy;
		
		private System.Nullable<int> _RepaymentScheduleID;
		
		private System.Nullable<int> _RepaidWithInvestmentID;
		
		private string _ReceiptNumber;
		
		private string _RepaymentAmountInWords;
		
		private System.Nullable<decimal> _TotalRepayment;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _Balance;
		
		public vwLoanRepayment()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentId", DbType="Int NOT NULL")]
		public int RepaymentId
		{
			get
			{
				return this._RepaymentId;
			}
			set
			{
				if ((this._RepaymentId != value))
				{
					this._RepaymentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanId", DbType="Int")]
		public System.Nullable<int> LoanId
		{
			get
			{
				return this._LoanId;
			}
			set
			{
				if ((this._LoanId != value))
				{
					this._LoanId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> RepaymentAmount
		{
			get
			{
				return this._RepaymentAmount;
			}
			set
			{
				if ((this._RepaymentAmount != value))
				{
					this._RepaymentAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentBy", DbType="NVarChar(50)")]
		public string RepaymentBy
		{
			get
			{
				return this._RepaymentBy;
			}
			set
			{
				if ((this._RepaymentBy != value))
				{
					this._RepaymentBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentScheduleID", DbType="Int")]
		public System.Nullable<int> RepaymentScheduleID
		{
			get
			{
				return this._RepaymentScheduleID;
			}
			set
			{
				if ((this._RepaymentScheduleID != value))
				{
					this._RepaymentScheduleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaidWithInvestmentID", DbType="Int")]
		public System.Nullable<int> RepaidWithInvestmentID
		{
			get
			{
				return this._RepaidWithInvestmentID;
			}
			set
			{
				if ((this._RepaidWithInvestmentID != value))
				{
					this._RepaidWithInvestmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNumber", DbType="NVarChar(20)")]
		public string ReceiptNumber
		{
			get
			{
				return this._ReceiptNumber;
			}
			set
			{
				if ((this._ReceiptNumber != value))
				{
					this._ReceiptNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentAmountInWords", DbType="NVarChar(100)")]
		public string RepaymentAmountInWords
		{
			get
			{
				return this._RepaymentAmountInWords;
			}
			set
			{
				if ((this._RepaymentAmountInWords != value))
				{
					this._RepaymentAmountInWords = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRepayment", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalRepayment
		{
			get
			{
				return this._TotalRepayment;
			}
			set
			{
				if ((this._TotalRepayment != value))
				{
					this._TotalRepayment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Decimal(19,2)")]
		public System.Nullable<decimal> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this._Balance = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwMemberFixedDepositInvestment")]
	public partial class vwMemberFixedDepositInvestment
	{
		
		private System.Nullable<int> _MemberId;
		
		private string _MemberName;
		
		private string _AccountNumber;
		
		private System.Nullable<decimal> _TotalContribution;
		
		private System.Nullable<System.DateTime> _MaturityDate;
		
		private System.Nullable<bool> _IsMatured;
		
		private System.Nullable<decimal> _InvestmentAmount;
		
		private System.Nullable<decimal> _InsterstRate;
		
		private string _Duration;
		
		private string _DurationDescription;
		
		private System.Nullable<decimal> _MaturedAmount;
		
		private System.Nullable<decimal> _ContributionFreqAmount;
		
		private System.Nullable<decimal> _InvestmentDuration;
		
		private string _InterestTypeDescription;
		
		private int _InvestmentID;
		
		private System.Nullable<int> _GroupId;
		
		private string _GroupName;
		
		private string _GroupAccountNumber;
		
		private System.Nullable<decimal> _TotalWithdrawal;
		
		public vwMemberFixedDepositInvestment()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberId", DbType="Int")]
		public System.Nullable<int> MemberId
		{
			get
			{
				return this._MemberId;
			}
			set
			{
				if ((this._MemberId != value))
				{
					this._MemberId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberName", DbType="NVarChar(301)")]
		public string MemberName
		{
			get
			{
				return this._MemberName;
			}
			set
			{
				if ((this._MemberName != value))
				{
					this._MemberName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(50)")]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this._AccountNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalContribution", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalContribution
		{
			get
			{
				return this._TotalContribution;
			}
			set
			{
				if ((this._TotalContribution != value))
				{
					this._TotalContribution = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaturityDate", DbType="Date")]
		public System.Nullable<System.DateTime> MaturityDate
		{
			get
			{
				return this._MaturityDate;
			}
			set
			{
				if ((this._MaturityDate != value))
				{
					this._MaturityDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMatured", DbType="Bit")]
		public System.Nullable<bool> IsMatured
		{
			get
			{
				return this._IsMatured;
			}
			set
			{
				if ((this._IsMatured != value))
				{
					this._IsMatured = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentAmount", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> InvestmentAmount
		{
			get
			{
				return this._InvestmentAmount;
			}
			set
			{
				if ((this._InvestmentAmount != value))
				{
					this._InvestmentAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsterstRate", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> InsterstRate
		{
			get
			{
				return this._InsterstRate;
			}
			set
			{
				if ((this._InsterstRate != value))
				{
					this._InsterstRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="NVarChar(30)")]
		public string Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this._Duration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DurationDescription", DbType="NVarChar(100)")]
		public string DurationDescription
		{
			get
			{
				return this._DurationDescription;
			}
			set
			{
				if ((this._DurationDescription != value))
				{
					this._DurationDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaturedAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MaturedAmount
		{
			get
			{
				return this._MaturedAmount;
			}
			set
			{
				if ((this._MaturedAmount != value))
				{
					this._MaturedAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContributionFreqAmount", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ContributionFreqAmount
		{
			get
			{
				return this._ContributionFreqAmount;
			}
			set
			{
				if ((this._ContributionFreqAmount != value))
				{
					this._ContributionFreqAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentDuration", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> InvestmentDuration
		{
			get
			{
				return this._InvestmentDuration;
			}
			set
			{
				if ((this._InvestmentDuration != value))
				{
					this._InvestmentDuration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestTypeDescription", DbType="NVarChar(50)")]
		public string InterestTypeDescription
		{
			get
			{
				return this._InterestTypeDescription;
			}
			set
			{
				if ((this._InterestTypeDescription != value))
				{
					this._InterestTypeDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentID", DbType="Int NOT NULL")]
		public int InvestmentID
		{
			get
			{
				return this._InvestmentID;
			}
			set
			{
				if ((this._InvestmentID != value))
				{
					this._InvestmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int")]
		public System.Nullable<int> GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this._GroupId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(300)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this._GroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupAccountNumber", DbType="NVarChar(50)")]
		public string GroupAccountNumber
		{
			get
			{
				return this._GroupAccountNumber;
			}
			set
			{
				if ((this._GroupAccountNumber != value))
				{
					this._GroupAccountNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalWithdrawal", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalWithdrawal
		{
			get
			{
				return this._TotalWithdrawal;
			}
			set
			{
				if ((this._TotalWithdrawal != value))
				{
					this._TotalWithdrawal = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwMemberInvestment")]
	public partial class vwMemberInvestment
	{
		
		private System.Nullable<int> _MemberId;
		
		private string _MemberName;
		
		private string _AccountNumber;
		
		private System.Nullable<decimal> _TotalContribution;
		
		private System.Nullable<System.DateTime> _MaturityDate;
		
		private System.Nullable<bool> _IsMatured;
		
		private System.Nullable<decimal> _InvestmentAmount;
		
		private System.Nullable<decimal> _InsterstRate;
		
		private string _Duration;
		
		private string _DurationDescription;
		
		private System.Nullable<decimal> _MaturedAmount;
		
		private System.Nullable<decimal> _ContributionFreqAmount;
		
		private string _ContributionFrquency;
		
		private System.Nullable<decimal> _InvestmentDuration;
		
		private string _InterestTypeDescription;
		
		private int _InvestmentID;
		
		private System.Nullable<int> _GroupId;
		
		private string _GroupName;
		
		private string _GroupAccountNumber;
		
		public vwMemberInvestment()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberId", DbType="Int")]
		public System.Nullable<int> MemberId
		{
			get
			{
				return this._MemberId;
			}
			set
			{
				if ((this._MemberId != value))
				{
					this._MemberId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberName", DbType="NVarChar(301)")]
		public string MemberName
		{
			get
			{
				return this._MemberName;
			}
			set
			{
				if ((this._MemberName != value))
				{
					this._MemberName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(50)")]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this._AccountNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalContribution", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalContribution
		{
			get
			{
				return this._TotalContribution;
			}
			set
			{
				if ((this._TotalContribution != value))
				{
					this._TotalContribution = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaturityDate", DbType="Date")]
		public System.Nullable<System.DateTime> MaturityDate
		{
			get
			{
				return this._MaturityDate;
			}
			set
			{
				if ((this._MaturityDate != value))
				{
					this._MaturityDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMatured", DbType="Bit")]
		public System.Nullable<bool> IsMatured
		{
			get
			{
				return this._IsMatured;
			}
			set
			{
				if ((this._IsMatured != value))
				{
					this._IsMatured = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentAmount", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> InvestmentAmount
		{
			get
			{
				return this._InvestmentAmount;
			}
			set
			{
				if ((this._InvestmentAmount != value))
				{
					this._InvestmentAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsterstRate", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> InsterstRate
		{
			get
			{
				return this._InsterstRate;
			}
			set
			{
				if ((this._InsterstRate != value))
				{
					this._InsterstRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="NVarChar(30)")]
		public string Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this._Duration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DurationDescription", DbType="NVarChar(100)")]
		public string DurationDescription
		{
			get
			{
				return this._DurationDescription;
			}
			set
			{
				if ((this._DurationDescription != value))
				{
					this._DurationDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaturedAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MaturedAmount
		{
			get
			{
				return this._MaturedAmount;
			}
			set
			{
				if ((this._MaturedAmount != value))
				{
					this._MaturedAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContributionFreqAmount", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ContributionFreqAmount
		{
			get
			{
				return this._ContributionFreqAmount;
			}
			set
			{
				if ((this._ContributionFreqAmount != value))
				{
					this._ContributionFreqAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContributionFrquency", DbType="NVarChar(100)")]
		public string ContributionFrquency
		{
			get
			{
				return this._ContributionFrquency;
			}
			set
			{
				if ((this._ContributionFrquency != value))
				{
					this._ContributionFrquency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentDuration", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> InvestmentDuration
		{
			get
			{
				return this._InvestmentDuration;
			}
			set
			{
				if ((this._InvestmentDuration != value))
				{
					this._InvestmentDuration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestTypeDescription", DbType="NVarChar(50)")]
		public string InterestTypeDescription
		{
			get
			{
				return this._InterestTypeDescription;
			}
			set
			{
				if ((this._InterestTypeDescription != value))
				{
					this._InterestTypeDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentID", DbType="Int NOT NULL")]
		public int InvestmentID
		{
			get
			{
				return this._InvestmentID;
			}
			set
			{
				if ((this._InvestmentID != value))
				{
					this._InvestmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int")]
		public System.Nullable<int> GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this._GroupId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(300)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this._GroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupAccountNumber", DbType="NVarChar(50)")]
		public string GroupAccountNumber
		{
			get
			{
				return this._GroupAccountNumber;
			}
			set
			{
				if ((this._GroupAccountNumber != value))
				{
					this._GroupAccountNumber = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwMemberLoan")]
	public partial class vwMemberLoan
	{
		
		private string _MemberName;
		
		private System.Nullable<decimal> _Principal;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _Duration;
		
		private System.Nullable<int> _InterestTypeId;
		
		private string _RawDurationEntered;
		
		private System.Nullable<System.DateTime> _ExpectedRepaymentEndDate;
		
		private System.Nullable<decimal> _totalRepayment;
		
		private string _RepaymentFreqDescription;
		
		private int _LoanID;
		
		private System.Nullable<decimal> _Interest;
		
		private string _InterestTypeDescription;
		
		private string _LoanDurationDescription;
		
		private string _CollateralName;
		
		private string _CollateralDescription;
		
		private string _AccountNumber;
		
		private System.Nullable<decimal> _TotalPenalty;
		
		public vwMemberLoan()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberName", DbType="NVarChar(352)")]
		public string MemberName
		{
			get
			{
				return this._MemberName;
			}
			set
			{
				if ((this._MemberName != value))
				{
					this._MemberName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Principal", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Principal
		{
			get
			{
				return this._Principal;
			}
			set
			{
				if ((this._Principal != value))
				{
					this._Principal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this._Duration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestTypeId", DbType="Int")]
		public System.Nullable<int> InterestTypeId
		{
			get
			{
				return this._InterestTypeId;
			}
			set
			{
				if ((this._InterestTypeId != value))
				{
					this._InterestTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RawDurationEntered", DbType="NVarChar(50)")]
		public string RawDurationEntered
		{
			get
			{
				return this._RawDurationEntered;
			}
			set
			{
				if ((this._RawDurationEntered != value))
				{
					this._RawDurationEntered = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedRepaymentEndDate", DbType="Date")]
		public System.Nullable<System.DateTime> ExpectedRepaymentEndDate
		{
			get
			{
				return this._ExpectedRepaymentEndDate;
			}
			set
			{
				if ((this._ExpectedRepaymentEndDate != value))
				{
					this._ExpectedRepaymentEndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalRepayment", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> totalRepayment
		{
			get
			{
				return this._totalRepayment;
			}
			set
			{
				if ((this._totalRepayment != value))
				{
					this._totalRepayment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentFreqDescription", DbType="NVarChar(100)")]
		public string RepaymentFreqDescription
		{
			get
			{
				return this._RepaymentFreqDescription;
			}
			set
			{
				if ((this._RepaymentFreqDescription != value))
				{
					this._RepaymentFreqDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanID", DbType="Int NOT NULL")]
		public int LoanID
		{
			get
			{
				return this._LoanID;
			}
			set
			{
				if ((this._LoanID != value))
				{
					this._LoanID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interest", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Interest
		{
			get
			{
				return this._Interest;
			}
			set
			{
				if ((this._Interest != value))
				{
					this._Interest = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestTypeDescription", DbType="NVarChar(50)")]
		public string InterestTypeDescription
		{
			get
			{
				return this._InterestTypeDescription;
			}
			set
			{
				if ((this._InterestTypeDescription != value))
				{
					this._InterestTypeDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanDurationDescription", DbType="NVarChar(100)")]
		public string LoanDurationDescription
		{
			get
			{
				return this._LoanDurationDescription;
			}
			set
			{
				if ((this._LoanDurationDescription != value))
				{
					this._LoanDurationDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollateralName", DbType="NVarChar(100)")]
		public string CollateralName
		{
			get
			{
				return this._CollateralName;
			}
			set
			{
				if ((this._CollateralName != value))
				{
					this._CollateralName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollateralDescription", DbType="NVarChar(500)")]
		public string CollateralDescription
		{
			get
			{
				return this._CollateralDescription;
			}
			set
			{
				if ((this._CollateralDescription != value))
				{
					this._CollateralDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(50)")]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this._AccountNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPenalty", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalPenalty
		{
			get
			{
				return this._TotalPenalty;
			}
			set
			{
				if ((this._TotalPenalty != value))
				{
					this._TotalPenalty = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwMemberSUSUInvestment")]
	public partial class vwMemberSUSUInvestment
	{
		
		private System.Nullable<int> _MemberId;
		
		private string _MemberName;
		
		private string _AccountNumber;
		
		private System.Nullable<decimal> _TotalContribution;
		
		private System.Nullable<System.DateTime> _MaturityDate;
		
		private System.Nullable<bool> _IsMatured;
		
		private System.Nullable<decimal> _InvestmentAmount;
		
		private System.Nullable<decimal> _InsterstRate;
		
		private string _Duration;
		
		private string _DurationDescription;
		
		private System.Nullable<decimal> _MaturedAmount;
		
		private System.Nullable<decimal> _ContributionFreqAmount;
		
		private System.Nullable<decimal> _InvestmentDuration;
		
		private int _InvestmentID;
		
		private System.Nullable<int> _GroupId;
		
		private string _GroupName;
		
		private string _GroupAccountNumber;
		
		private System.Nullable<decimal> _TotalWithdrawal;
		
		public vwMemberSUSUInvestment()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberId", DbType="Int")]
		public System.Nullable<int> MemberId
		{
			get
			{
				return this._MemberId;
			}
			set
			{
				if ((this._MemberId != value))
				{
					this._MemberId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberName", DbType="NVarChar(301)")]
		public string MemberName
		{
			get
			{
				return this._MemberName;
			}
			set
			{
				if ((this._MemberName != value))
				{
					this._MemberName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(50)")]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this._AccountNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalContribution", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalContribution
		{
			get
			{
				return this._TotalContribution;
			}
			set
			{
				if ((this._TotalContribution != value))
				{
					this._TotalContribution = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaturityDate", DbType="Date")]
		public System.Nullable<System.DateTime> MaturityDate
		{
			get
			{
				return this._MaturityDate;
			}
			set
			{
				if ((this._MaturityDate != value))
				{
					this._MaturityDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMatured", DbType="Bit")]
		public System.Nullable<bool> IsMatured
		{
			get
			{
				return this._IsMatured;
			}
			set
			{
				if ((this._IsMatured != value))
				{
					this._IsMatured = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentAmount", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> InvestmentAmount
		{
			get
			{
				return this._InvestmentAmount;
			}
			set
			{
				if ((this._InvestmentAmount != value))
				{
					this._InvestmentAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsterstRate", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> InsterstRate
		{
			get
			{
				return this._InsterstRate;
			}
			set
			{
				if ((this._InsterstRate != value))
				{
					this._InsterstRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="NVarChar(30)")]
		public string Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this._Duration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DurationDescription", DbType="NVarChar(100)")]
		public string DurationDescription
		{
			get
			{
				return this._DurationDescription;
			}
			set
			{
				if ((this._DurationDescription != value))
				{
					this._DurationDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaturedAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MaturedAmount
		{
			get
			{
				return this._MaturedAmount;
			}
			set
			{
				if ((this._MaturedAmount != value))
				{
					this._MaturedAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContributionFreqAmount", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ContributionFreqAmount
		{
			get
			{
				return this._ContributionFreqAmount;
			}
			set
			{
				if ((this._ContributionFreqAmount != value))
				{
					this._ContributionFreqAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentDuration", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> InvestmentDuration
		{
			get
			{
				return this._InvestmentDuration;
			}
			set
			{
				if ((this._InvestmentDuration != value))
				{
					this._InvestmentDuration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentID", DbType="Int NOT NULL")]
		public int InvestmentID
		{
			get
			{
				return this._InvestmentID;
			}
			set
			{
				if ((this._InvestmentID != value))
				{
					this._InvestmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int")]
		public System.Nullable<int> GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this._GroupId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(300)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this._GroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupAccountNumber", DbType="NVarChar(50)")]
		public string GroupAccountNumber
		{
			get
			{
				return this._GroupAccountNumber;
			}
			set
			{
				if ((this._GroupAccountNumber != value))
				{
					this._GroupAccountNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalWithdrawal", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalWithdrawal
		{
			get
			{
				return this._TotalWithdrawal;
			}
			set
			{
				if ((this._TotalWithdrawal != value))
				{
					this._TotalWithdrawal = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwRepaymentSchedule")]
	public partial class vwRepaymentSchedule
	{
		
		private string _Expr1;
		
		public vwRepaymentSchedule()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expr1", DbType="NVarChar(67)")]
		public string Expr1
		{
			get
			{
				return this._Expr1;
			}
			set
			{
				if ((this._Expr1 != value))
				{
					this._Expr1 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwSUSUContributionReceipt")]
	public partial class vwSUSUContributionReceipt
	{
		
		private int _ContributionId;
		
		private System.Nullable<int> _InvestmentId;
		
		private System.Nullable<decimal> _ContributionAmount;
		
		private string _CreatedBy;
		
		private string _Description;
		
		private string _ContributionBy;
		
		private string _RecievedBy;
		
		private System.Nullable<int> _ContributionScheduleID;
		
		private string _ContributionAmountInWords;
		
		private string _ReceiptNumber;
		
		private System.Nullable<decimal> _TotalContribution;
		
		public vwSUSUContributionReceipt()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContributionId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ContributionId
		{
			get
			{
				return this._ContributionId;
			}
			set
			{
				if ((this._ContributionId != value))
				{
					this._ContributionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentId", DbType="Int")]
		public System.Nullable<int> InvestmentId
		{
			get
			{
				return this._InvestmentId;
			}
			set
			{
				if ((this._InvestmentId != value))
				{
					this._InvestmentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContributionAmount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ContributionAmount
		{
			get
			{
				return this._ContributionAmount;
			}
			set
			{
				if ((this._ContributionAmount != value))
				{
					this._ContributionAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContributionBy", DbType="NVarChar(50)")]
		public string ContributionBy
		{
			get
			{
				return this._ContributionBy;
			}
			set
			{
				if ((this._ContributionBy != value))
				{
					this._ContributionBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecievedBy", DbType="NVarChar(200)")]
		public string RecievedBy
		{
			get
			{
				return this._RecievedBy;
			}
			set
			{
				if ((this._RecievedBy != value))
				{
					this._RecievedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContributionScheduleID", DbType="Int")]
		public System.Nullable<int> ContributionScheduleID
		{
			get
			{
				return this._ContributionScheduleID;
			}
			set
			{
				if ((this._ContributionScheduleID != value))
				{
					this._ContributionScheduleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContributionAmountInWords", DbType="NVarChar(200)")]
		public string ContributionAmountInWords
		{
			get
			{
				return this._ContributionAmountInWords;
			}
			set
			{
				if ((this._ContributionAmountInWords != value))
				{
					this._ContributionAmountInWords = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNumber", DbType="NVarChar(100)")]
		public string ReceiptNumber
		{
			get
			{
				return this._ReceiptNumber;
			}
			set
			{
				if ((this._ReceiptNumber != value))
				{
					this._ReceiptNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalContribution", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalContribution
		{
			get
			{
				return this._TotalContribution;
			}
			set
			{
				if ((this._TotalContribution != value))
				{
					this._TotalContribution = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwMemberInvestmentWithTotalContributionAndWithdrawal")]
	public partial class vwMemberInvestmentWithTotalContributionAndWithdrawal
	{
		
		private int _InvestmentID;
		
		private System.Nullable<int> _MemberID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _CreatedBy;
		
		private System.Nullable<decimal> _InsterstRate;
		
		private System.Nullable<decimal> _InvestmentAmount;
		
		private System.Nullable<decimal> _Duration;
		
		private System.Nullable<decimal> _Balance;
		
		private System.Nullable<int> _GroupId;
		
		private System.Nullable<int> _ContributionFrequencyId;
		
		private System.Nullable<int> _InterestTypeId;
		
		private System.Nullable<System.DateTime> _MaturityDate;
		
		private System.Nullable<decimal> _ContributionFreqAmount;
		
		private System.Nullable<System.DateTime> _InvestmentCalculationStartDate;
		
		private System.Nullable<bool> _IsMatured;
		
		private System.Nullable<int> _DurationTypeId;
		
		private System.Nullable<decimal> _MaturedAmount;
		
		private System.Nullable<int> _InvestmentTypeId;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<decimal> _TotalContrilbution;
		
		private System.Nullable<decimal> _TotalWithdrawal;
		
		private string _DurationDescription;
		
		private string _InvestmentTypeDescription;
		
		public vwMemberInvestmentWithTotalContributionAndWithdrawal()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentID", DbType="Int NOT NULL")]
		public int InvestmentID
		{
			get
			{
				return this._InvestmentID;
			}
			set
			{
				if ((this._InvestmentID != value))
				{
					this._InvestmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int")]
		public System.Nullable<int> MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					this._MemberID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsterstRate", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> InsterstRate
		{
			get
			{
				return this._InsterstRate;
			}
			set
			{
				if ((this._InsterstRate != value))
				{
					this._InsterstRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentAmount", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> InvestmentAmount
		{
			get
			{
				return this._InvestmentAmount;
			}
			set
			{
				if ((this._InvestmentAmount != value))
				{
					this._InvestmentAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this._Duration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this._Balance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int")]
		public System.Nullable<int> GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this._GroupId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContributionFrequencyId", DbType="Int")]
		public System.Nullable<int> ContributionFrequencyId
		{
			get
			{
				return this._ContributionFrequencyId;
			}
			set
			{
				if ((this._ContributionFrequencyId != value))
				{
					this._ContributionFrequencyId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestTypeId", DbType="Int")]
		public System.Nullable<int> InterestTypeId
		{
			get
			{
				return this._InterestTypeId;
			}
			set
			{
				if ((this._InterestTypeId != value))
				{
					this._InterestTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaturityDate", DbType="Date")]
		public System.Nullable<System.DateTime> MaturityDate
		{
			get
			{
				return this._MaturityDate;
			}
			set
			{
				if ((this._MaturityDate != value))
				{
					this._MaturityDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContributionFreqAmount", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ContributionFreqAmount
		{
			get
			{
				return this._ContributionFreqAmount;
			}
			set
			{
				if ((this._ContributionFreqAmount != value))
				{
					this._ContributionFreqAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentCalculationStartDate", DbType="Date")]
		public System.Nullable<System.DateTime> InvestmentCalculationStartDate
		{
			get
			{
				return this._InvestmentCalculationStartDate;
			}
			set
			{
				if ((this._InvestmentCalculationStartDate != value))
				{
					this._InvestmentCalculationStartDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMatured", DbType="Bit")]
		public System.Nullable<bool> IsMatured
		{
			get
			{
				return this._IsMatured;
			}
			set
			{
				if ((this._IsMatured != value))
				{
					this._IsMatured = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DurationTypeId", DbType="Int")]
		public System.Nullable<int> DurationTypeId
		{
			get
			{
				return this._DurationTypeId;
			}
			set
			{
				if ((this._DurationTypeId != value))
				{
					this._DurationTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaturedAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MaturedAmount
		{
			get
			{
				return this._MaturedAmount;
			}
			set
			{
				if ((this._MaturedAmount != value))
				{
					this._MaturedAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentTypeId", DbType="Int")]
		public System.Nullable<int> InvestmentTypeId
		{
			get
			{
				return this._InvestmentTypeId;
			}
			set
			{
				if ((this._InvestmentTypeId != value))
				{
					this._InvestmentTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalContrilbution", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalContrilbution
		{
			get
			{
				return this._TotalContrilbution;
			}
			set
			{
				if ((this._TotalContrilbution != value))
				{
					this._TotalContrilbution = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalWithdrawal", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalWithdrawal
		{
			get
			{
				return this._TotalWithdrawal;
			}
			set
			{
				if ((this._TotalWithdrawal != value))
				{
					this._TotalWithdrawal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DurationDescription", DbType="NVarChar(106)")]
		public string DurationDescription
		{
			get
			{
				return this._DurationDescription;
			}
			set
			{
				if ((this._DurationDescription != value))
				{
					this._DurationDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentTypeDescription", DbType="NVarChar(100)")]
		public string InvestmentTypeDescription
		{
			get
			{
				return this._InvestmentTypeDescription;
			}
			set
			{
				if ((this._InvestmentTypeDescription != value))
				{
					this._InvestmentTypeDescription = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwMemberFixedDepositInvestment_MemberDetailsAdded")]
	public partial class vwMemberFixedDepositInvestment_MemberDetailsAdded
	{
		
		private System.Nullable<int> _MemberId;
		
		private string _MemberName;
		
		private string _AccountNumber;
		
		private System.Nullable<decimal> _TotalContribution;
		
		private System.Nullable<System.DateTime> _MaturityDate;
		
		private System.Nullable<bool> _IsMatured;
		
		private System.Nullable<decimal> _InvestmentAmount;
		
		private System.Nullable<decimal> _InsterstRate;
		
		private string _Duration;
		
		private string _DurationDescription;
		
		private System.Nullable<decimal> _MaturedAmount;
		
		private System.Nullable<decimal> _ContributionFreqAmount;
		
		private System.Nullable<decimal> _InvestmentDuration;
		
		private string _InterestTypeDescription;
		
		private int _InvestmentID;
		
		private System.Nullable<int> _GroupId;
		
		private System.Nullable<decimal> _TotalWithdrawal;
		
		private string _MemberFirstName;
		
		private string _MemberLastName;
		
		private System.Data.Linq.Binary _MemberPhoto;
		
		private string _MemberBranch;
		
		private string _Fax;
		
		private string _Telephone;
		
		private string _Address;
		
		private string _Gender;
		
		private string _OtherName;
		
		private string _ContactPerson;
		
		private string _GroupName;
		
		private string _GroupDescription;
		
		private System.Nullable<int> _GroupMemberCount;
		
		public vwMemberFixedDepositInvestment_MemberDetailsAdded()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberId", DbType="Int")]
		public System.Nullable<int> MemberId
		{
			get
			{
				return this._MemberId;
			}
			set
			{
				if ((this._MemberId != value))
				{
					this._MemberId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberName", DbType="NVarChar(301)")]
		public string MemberName
		{
			get
			{
				return this._MemberName;
			}
			set
			{
				if ((this._MemberName != value))
				{
					this._MemberName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(50)")]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this._AccountNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalContribution", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalContribution
		{
			get
			{
				return this._TotalContribution;
			}
			set
			{
				if ((this._TotalContribution != value))
				{
					this._TotalContribution = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaturityDate", DbType="Date")]
		public System.Nullable<System.DateTime> MaturityDate
		{
			get
			{
				return this._MaturityDate;
			}
			set
			{
				if ((this._MaturityDate != value))
				{
					this._MaturityDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMatured", DbType="Bit")]
		public System.Nullable<bool> IsMatured
		{
			get
			{
				return this._IsMatured;
			}
			set
			{
				if ((this._IsMatured != value))
				{
					this._IsMatured = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentAmount", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> InvestmentAmount
		{
			get
			{
				return this._InvestmentAmount;
			}
			set
			{
				if ((this._InvestmentAmount != value))
				{
					this._InvestmentAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsterstRate", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> InsterstRate
		{
			get
			{
				return this._InsterstRate;
			}
			set
			{
				if ((this._InsterstRate != value))
				{
					this._InsterstRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="NVarChar(30)")]
		public string Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this._Duration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DurationDescription", DbType="NVarChar(100)")]
		public string DurationDescription
		{
			get
			{
				return this._DurationDescription;
			}
			set
			{
				if ((this._DurationDescription != value))
				{
					this._DurationDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaturedAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MaturedAmount
		{
			get
			{
				return this._MaturedAmount;
			}
			set
			{
				if ((this._MaturedAmount != value))
				{
					this._MaturedAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContributionFreqAmount", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ContributionFreqAmount
		{
			get
			{
				return this._ContributionFreqAmount;
			}
			set
			{
				if ((this._ContributionFreqAmount != value))
				{
					this._ContributionFreqAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentDuration", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> InvestmentDuration
		{
			get
			{
				return this._InvestmentDuration;
			}
			set
			{
				if ((this._InvestmentDuration != value))
				{
					this._InvestmentDuration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestTypeDescription", DbType="NVarChar(50)")]
		public string InterestTypeDescription
		{
			get
			{
				return this._InterestTypeDescription;
			}
			set
			{
				if ((this._InterestTypeDescription != value))
				{
					this._InterestTypeDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentID", DbType="Int NOT NULL")]
		public int InvestmentID
		{
			get
			{
				return this._InvestmentID;
			}
			set
			{
				if ((this._InvestmentID != value))
				{
					this._InvestmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int")]
		public System.Nullable<int> GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this._GroupId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalWithdrawal", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalWithdrawal
		{
			get
			{
				return this._TotalWithdrawal;
			}
			set
			{
				if ((this._TotalWithdrawal != value))
				{
					this._TotalWithdrawal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberFirstName", DbType="NVarChar(150)")]
		public string MemberFirstName
		{
			get
			{
				return this._MemberFirstName;
			}
			set
			{
				if ((this._MemberFirstName != value))
				{
					this._MemberFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberLastName", DbType="NVarChar(150)")]
		public string MemberLastName
		{
			get
			{
				return this._MemberLastName;
			}
			set
			{
				if ((this._MemberLastName != value))
				{
					this._MemberLastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberPhoto", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary MemberPhoto
		{
			get
			{
				return this._MemberPhoto;
			}
			set
			{
				if ((this._MemberPhoto != value))
				{
					this._MemberPhoto = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberBranch", DbType="NVarChar(50)")]
		public string MemberBranch
		{
			get
			{
				return this._MemberBranch;
			}
			set
			{
				if ((this._MemberBranch != value))
				{
					this._MemberBranch = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(20)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this._Fax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(20)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this._Telephone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(600)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(10)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this._Gender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherName", DbType="NVarChar(50)")]
		public string OtherName
		{
			get
			{
				return this._OtherName;
			}
			set
			{
				if ((this._OtherName != value))
				{
					this._OtherName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPerson", DbType="NVarChar(100)")]
		public string ContactPerson
		{
			get
			{
				return this._ContactPerson;
			}
			set
			{
				if ((this._ContactPerson != value))
				{
					this._ContactPerson = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(300)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this._GroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupDescription", DbType="NVarChar(100)")]
		public string GroupDescription
		{
			get
			{
				return this._GroupDescription;
			}
			set
			{
				if ((this._GroupDescription != value))
				{
					this._GroupDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupMemberCount", DbType="Int")]
		public System.Nullable<int> GroupMemberCount
		{
			get
			{
				return this._GroupMemberCount;
			}
			set
			{
				if ((this._GroupMemberCount != value))
				{
					this._GroupMemberCount = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwDepositesToday")]
	public partial class vwDepositesToday
	{
		
		private System.Nullable<decimal> _ContributionAmount;
		
		private string _memberName;
		
		private int _CustomerID;
		
		private string _IsGroup;
		
		private System.Nullable<int> _InvestmentID;
		
		public vwDepositesToday()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContributionAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ContributionAmount
		{
			get
			{
				return this._ContributionAmount;
			}
			set
			{
				if ((this._ContributionAmount != value))
				{
					this._ContributionAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memberName", DbType="NVarChar(352)")]
		public string memberName
		{
			get
			{
				return this._memberName;
			}
			set
			{
				if ((this._memberName != value))
				{
					this._memberName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this._CustomerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGroup", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string IsGroup
		{
			get
			{
				return this._IsGroup;
			}
			set
			{
				if ((this._IsGroup != value))
				{
					this._IsGroup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentID", DbType="Int")]
		public System.Nullable<int> InvestmentID
		{
			get
			{
				return this._InvestmentID;
			}
			set
			{
				if ((this._InvestmentID != value))
				{
					this._InvestmentID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwWithdrawalsToday")]
	public partial class vwWithdrawalsToday
	{
		
		private string _memberName;
		
		private int _CustomerID;
		
		private string _IsGroup;
		
		private System.Nullable<decimal> _WithdrawalAmount;
		
		private string _WithdrawnBy;
		
		private string _WithdrawalIssuedByUserName;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private int _InvestmentID;
		
		public vwWithdrawalsToday()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memberName", DbType="NVarChar(352)")]
		public string memberName
		{
			get
			{
				return this._memberName;
			}
			set
			{
				if ((this._memberName != value))
				{
					this._memberName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this._CustomerID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGroup", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string IsGroup
		{
			get
			{
				return this._IsGroup;
			}
			set
			{
				if ((this._IsGroup != value))
				{
					this._IsGroup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithdrawalAmount", DbType="Money")]
		public System.Nullable<decimal> WithdrawalAmount
		{
			get
			{
				return this._WithdrawalAmount;
			}
			set
			{
				if ((this._WithdrawalAmount != value))
				{
					this._WithdrawalAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithdrawnBy", DbType="NVarChar(50)")]
		public string WithdrawnBy
		{
			get
			{
				return this._WithdrawnBy;
			}
			set
			{
				if ((this._WithdrawnBy != value))
				{
					this._WithdrawnBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithdrawalIssuedByUserName", DbType="NVarChar(100)")]
		public string WithdrawalIssuedByUserName
		{
			get
			{
				return this._WithdrawalIssuedByUserName;
			}
			set
			{
				if ((this._WithdrawalIssuedByUserName != value))
				{
					this._WithdrawalIssuedByUserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this._DateCreated = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentID", DbType="Int NOT NULL")]
		public int InvestmentID
		{
			get
			{
				return this._InvestmentID;
			}
			set
			{
				if ((this._InvestmentID != value))
				{
					this._InvestmentID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwLoansToday")]
	public partial class vwLoansToday
	{
		
		private string _MemberName;
		
		private int _CustomerId;
		
		private int _LoanID;
		
		private System.Nullable<decimal> _Principal;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _Duration;
		
		private string _IsGroup;
		
		public vwLoansToday()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberName", DbType="NVarChar(352)")]
		public string MemberName
		{
			get
			{
				return this._MemberName;
			}
			set
			{
				if ((this._MemberName != value))
				{
					this._MemberName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this._CustomerId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanID", DbType="Int NOT NULL")]
		public int LoanID
		{
			get
			{
				return this._LoanID;
			}
			set
			{
				if ((this._LoanID != value))
				{
					this._LoanID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Principal", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Principal
		{
			get
			{
				return this._Principal;
			}
			set
			{
				if ((this._Principal != value))
				{
					this._Principal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this._Duration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGroup", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string IsGroup
		{
			get
			{
				return this._IsGroup;
			}
			set
			{
				if ((this._IsGroup != value))
				{
					this._IsGroup = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DefultersView")]
	public partial class DefultersView
	{
		
		private string _MemberName;
		
		private int _CustomerId;
		
		private int _LoanID;
		
		private System.Nullable<decimal> _Principal;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _Duration;
		
		private string _IsGroup;
		
		private decimal _TotalRepayment;
		
		public DefultersView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberName", DbType="NVarChar(352)")]
		public string MemberName
		{
			get
			{
				return this._MemberName;
			}
			set
			{
				if ((this._MemberName != value))
				{
					this._MemberName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this._CustomerId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanID", DbType="Int NOT NULL")]
		public int LoanID
		{
			get
			{
				return this._LoanID;
			}
			set
			{
				if ((this._LoanID != value))
				{
					this._LoanID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Principal", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Principal
		{
			get
			{
				return this._Principal;
			}
			set
			{
				if ((this._Principal != value))
				{
					this._Principal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this._Amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this._Duration = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGroup", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string IsGroup
		{
			get
			{
				return this._IsGroup;
			}
			set
			{
				if ((this._IsGroup != value))
				{
					this._IsGroup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalRepayment", DbType="Decimal(18,2) NOT NULL")]
		public decimal TotalRepayment
		{
			get
			{
				return this._TotalRepayment;
			}
			set
			{
				if ((this._TotalRepayment != value))
				{
					this._TotalRepayment = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AuditTrail")]
	public partial class AuditTrail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _AuditTrailId;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _CreatedBy;
		
		private string _AffectedTable;
		
		private string _Action;
		
		private string _ActionDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuditTrailIdChanging(System.Guid value);
    partial void OnAuditTrailIdChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnAffectedTableChanging(string value);
    partial void OnAffectedTableChanged();
    partial void OnActionChanging(string value);
    partial void OnActionChanged();
    partial void OnActionDescriptionChanging(string value);
    partial void OnActionDescriptionChanged();
    #endregion
		
		public AuditTrail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditTrailId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AuditTrailId
		{
			get
			{
				return this._AuditTrailId;
			}
			set
			{
				if ((this._AuditTrailId != value))
				{
					this.OnAuditTrailIdChanging(value);
					this.SendPropertyChanging();
					this._AuditTrailId = value;
					this.SendPropertyChanged("AuditTrailId");
					this.OnAuditTrailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(100)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffectedTable", DbType="NVarChar(200)")]
		public string AffectedTable
		{
			get
			{
				return this._AffectedTable;
			}
			set
			{
				if ((this._AffectedTable != value))
				{
					this.OnAffectedTableChanging(value);
					this.SendPropertyChanging();
					this._AffectedTable = value;
					this.SendPropertyChanged("AffectedTable");
					this.OnAffectedTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="NVarChar(20)")]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDescription", DbType="NVarChar(MAX)")]
		public string ActionDescription
		{
			get
			{
				return this._ActionDescription;
			}
			set
			{
				if ((this._ActionDescription != value))
				{
					this.OnActionDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ActionDescription = value;
					this.SendPropertyChanged("ActionDescription");
					this.OnActionDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MobileBankerCustomers")]
	public partial class MobileBankerCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MobileBankerCustomerId;
		
		private System.Nullable<int> _MemberId;
		
		private System.Nullable<int> _GroupID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _ModifiedBy;
		
		private int _MobileBankerID;
		
		private EntityRef<Member> _Member;
		
		private EntityRef<LoanGroup> _LoanGroup;
		
		private EntityRef<MobileBanker> _MobileBanker;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMobileBankerCustomerIdChanging(int value);
    partial void OnMobileBankerCustomerIdChanged();
    partial void OnMemberIdChanging(System.Nullable<int> value);
    partial void OnMemberIdChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnMobileBankerIDChanging(int value);
    partial void OnMobileBankerIDChanged();
    #endregion
		
		public MobileBankerCustomer()
		{
			this._Member = default(EntityRef<Member>);
			this._LoanGroup = default(EntityRef<LoanGroup>);
			this._MobileBanker = default(EntityRef<MobileBanker>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileBankerCustomerId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MobileBankerCustomerId
		{
			get
			{
				return this._MobileBankerCustomerId;
			}
			set
			{
				if ((this._MobileBankerCustomerId != value))
				{
					this.OnMobileBankerCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._MobileBankerCustomerId = value;
					this.SendPropertyChanged("MobileBankerCustomerId");
					this.OnMobileBankerCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberId", DbType="Int")]
		public System.Nullable<int> MemberId
		{
			get
			{
				return this._MemberId;
			}
			set
			{
				if ((this._MemberId != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIdChanging(value);
					this.SendPropertyChanging();
					this._MemberId = value;
					this.SendPropertyChanged("MemberId");
					this.OnMemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int")]
		public System.Nullable<int> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					if (this._LoanGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileBankerID", DbType="Int NOT NULL")]
		public int MobileBankerID
		{
			get
			{
				return this._MobileBankerID;
			}
			set
			{
				if ((this._MobileBankerID != value))
				{
					if (this._MobileBanker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMobileBankerIDChanging(value);
					this.SendPropertyChanging();
					this._MobileBankerID = value;
					this.SendPropertyChanged("MobileBankerID");
					this.OnMobileBankerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_MobileBankerCustomer", Storage="_Member", ThisKey="MemberId", OtherKey="MemberId", IsForeignKey=true, DeleteRule="CASCADE")]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.MobileBankerCustomers.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.MobileBankerCustomers.Add(this);
						this._MemberId = value.MemberId;
					}
					else
					{
						this._MemberId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoanGroup_MobileBankerCustomer", Storage="_LoanGroup", ThisKey="GroupID", OtherKey="GroupId", IsForeignKey=true)]
		public LoanGroup LoanGroup
		{
			get
			{
				return this._LoanGroup.Entity;
			}
			set
			{
				LoanGroup previousValue = this._LoanGroup.Entity;
				if (((previousValue != value) 
							|| (this._LoanGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoanGroup.Entity = null;
						previousValue.MobileBankerCustomers.Remove(this);
					}
					this._LoanGroup.Entity = value;
					if ((value != null))
					{
						value.MobileBankerCustomers.Add(this);
						this._GroupID = value.GroupId;
					}
					else
					{
						this._GroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoanGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MobileBanker_MobileBankerCustomer", Storage="_MobileBanker", ThisKey="MobileBankerID", OtherKey="MobileBankerid", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MobileBanker MobileBanker
		{
			get
			{
				return this._MobileBanker.Entity;
			}
			set
			{
				MobileBanker previousValue = this._MobileBanker.Entity;
				if (((previousValue != value) 
							|| (this._MobileBanker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MobileBanker.Entity = null;
						previousValue.MobileBankerCustomers.Remove(this);
					}
					this._MobileBanker.Entity = value;
					if ((value != null))
					{
						value.MobileBankerCustomers.Add(this);
						this._MobileBankerID = value.MobileBankerid;
					}
					else
					{
						this._MobileBankerID = default(int);
					}
					this.SendPropertyChanged("MobileBanker");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwMobileBankers")]
	public partial class vwMobileBanker
	{
		
		private string _Name;
		
		private string _MobileBankerCode;
		
		private int _MobileBankerid;
		
		public vwMobileBanker()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(302)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileBankerCode", DbType="NVarChar(50)")]
		public string MobileBankerCode
		{
			get
			{
				return this._MobileBankerCode;
			}
			set
			{
				if ((this._MobileBankerCode != value))
				{
					this._MobileBankerCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileBankerid", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int MobileBankerid
		{
			get
			{
				return this._MobileBankerid;
			}
			set
			{
				if ((this._MobileBankerid != value))
				{
					this._MobileBankerid = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AppliedInterest_Temp")]
	public partial class AppliedInterest_Temp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AppliedInterestID;
		
		private System.Nullable<int> _InvestmentID;
		
		private System.Nullable<decimal> _Rate;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _CreatedBy;
		
		private System.Nullable<decimal> _InterestAmount;
		
		private System.Nullable<bool> _IsDeleted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppliedInterestIDChanging(int value);
    partial void OnAppliedInterestIDChanged();
    partial void OnInvestmentIDChanging(System.Nullable<int> value);
    partial void OnInvestmentIDChanged();
    partial void OnRateChanging(System.Nullable<decimal> value);
    partial void OnRateChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnInterestAmountChanging(System.Nullable<decimal> value);
    partial void OnInterestAmountChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public AppliedInterest_Temp()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppliedInterestID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AppliedInterestID
		{
			get
			{
				return this._AppliedInterestID;
			}
			set
			{
				if ((this._AppliedInterestID != value))
				{
					this.OnAppliedInterestIDChanging(value);
					this.SendPropertyChanging();
					this._AppliedInterestID = value;
					this.SendPropertyChanged("AppliedInterestID");
					this.OnAppliedInterestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentID", DbType="Int")]
		public System.Nullable<int> InvestmentID
		{
			get
			{
				return this._InvestmentID;
			}
			set
			{
				if ((this._InvestmentID != value))
				{
					this.OnInvestmentIDChanging(value);
					this.SendPropertyChanging();
					this._InvestmentID = value;
					this.SendPropertyChanged("InvestmentID");
					this.OnInvestmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(100)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestAmount", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> InterestAmount
		{
			get
			{
				return this._InterestAmount;
			}
			set
			{
				if ((this._InterestAmount != value))
				{
					this.OnInterestAmountChanging(value);
					this.SendPropertyChanging();
					this._InterestAmount = value;
					this.SendPropertyChanged("InterestAmount");
					this.OnInterestAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contributions")]
	public partial class Contribution : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ContributionId;
		
		private System.Nullable<int> _InvestmentId;
		
		private System.Nullable<decimal> _ContributionAmount;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _CreatedBy;
		
		private string _Description;
		
		private string _ContributionBy;
		
		private string _RecievedBy;
		
		private System.Nullable<int> _ContributionScheduleID;
		
		private string _ContributionAmountInWords;
		
		private string _ReceiptNumber;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _ModifiedBy;
		
		private System.Nullable<bool> _WasReceivedByMobileBanker;
		
		private System.Nullable<int> _MobileBankerID;
		
		private string _ChequeNumber;
		
		private System.Nullable<int> _PaymentMethodId;
		
		private EntityRef<Investment> _Investment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContributionIdChanging(int value);
    partial void OnContributionIdChanged();
    partial void OnInvestmentIdChanging(System.Nullable<int> value);
    partial void OnInvestmentIdChanged();
    partial void OnContributionAmountChanging(System.Nullable<decimal> value);
    partial void OnContributionAmountChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnContributionByChanging(string value);
    partial void OnContributionByChanged();
    partial void OnRecievedByChanging(string value);
    partial void OnRecievedByChanged();
    partial void OnContributionScheduleIDChanging(System.Nullable<int> value);
    partial void OnContributionScheduleIDChanged();
    partial void OnContributionAmountInWordsChanging(string value);
    partial void OnContributionAmountInWordsChanged();
    partial void OnReceiptNumberChanging(string value);
    partial void OnReceiptNumberChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnWasReceivedByMobileBankerChanging(System.Nullable<bool> value);
    partial void OnWasReceivedByMobileBankerChanged();
    partial void OnMobileBankerIDChanging(System.Nullable<int> value);
    partial void OnMobileBankerIDChanged();
    partial void OnChequeNumberChanging(string value);
    partial void OnChequeNumberChanged();
    partial void OnPaymentMethodIdChanging(System.Nullable<int> value);
    partial void OnPaymentMethodIdChanged();
    #endregion
		
		public Contribution()
		{
			this._Investment = default(EntityRef<Investment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContributionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ContributionId
		{
			get
			{
				return this._ContributionId;
			}
			set
			{
				if ((this._ContributionId != value))
				{
					this.OnContributionIdChanging(value);
					this.SendPropertyChanging();
					this._ContributionId = value;
					this.SendPropertyChanged("ContributionId");
					this.OnContributionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentId", DbType="Int")]
		public System.Nullable<int> InvestmentId
		{
			get
			{
				return this._InvestmentId;
			}
			set
			{
				if ((this._InvestmentId != value))
				{
					if (this._Investment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvestmentIdChanging(value);
					this.SendPropertyChanging();
					this._InvestmentId = value;
					this.SendPropertyChanged("InvestmentId");
					this.OnInvestmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContributionAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ContributionAmount
		{
			get
			{
				return this._ContributionAmount;
			}
			set
			{
				if ((this._ContributionAmount != value))
				{
					this.OnContributionAmountChanging(value);
					this.SendPropertyChanging();
					this._ContributionAmount = value;
					this.SendPropertyChanged("ContributionAmount");
					this.OnContributionAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContributionBy", DbType="NVarChar(50)")]
		public string ContributionBy
		{
			get
			{
				return this._ContributionBy;
			}
			set
			{
				if ((this._ContributionBy != value))
				{
					this.OnContributionByChanging(value);
					this.SendPropertyChanging();
					this._ContributionBy = value;
					this.SendPropertyChanged("ContributionBy");
					this.OnContributionByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecievedBy", DbType="NVarChar(200)")]
		public string RecievedBy
		{
			get
			{
				return this._RecievedBy;
			}
			set
			{
				if ((this._RecievedBy != value))
				{
					this.OnRecievedByChanging(value);
					this.SendPropertyChanging();
					this._RecievedBy = value;
					this.SendPropertyChanged("RecievedBy");
					this.OnRecievedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContributionScheduleID", DbType="Int")]
		public System.Nullable<int> ContributionScheduleID
		{
			get
			{
				return this._ContributionScheduleID;
			}
			set
			{
				if ((this._ContributionScheduleID != value))
				{
					this.OnContributionScheduleIDChanging(value);
					this.SendPropertyChanging();
					this._ContributionScheduleID = value;
					this.SendPropertyChanged("ContributionScheduleID");
					this.OnContributionScheduleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContributionAmountInWords", DbType="NVarChar(200)")]
		public string ContributionAmountInWords
		{
			get
			{
				return this._ContributionAmountInWords;
			}
			set
			{
				if ((this._ContributionAmountInWords != value))
				{
					this.OnContributionAmountInWordsChanging(value);
					this.SendPropertyChanging();
					this._ContributionAmountInWords = value;
					this.SendPropertyChanged("ContributionAmountInWords");
					this.OnContributionAmountInWordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNumber", DbType="NVarChar(100)")]
		public string ReceiptNumber
		{
			get
			{
				return this._ReceiptNumber;
			}
			set
			{
				if ((this._ReceiptNumber != value))
				{
					this.OnReceiptNumberChanging(value);
					this.SendPropertyChanging();
					this._ReceiptNumber = value;
					this.SendPropertyChanged("ReceiptNumber");
					this.OnReceiptNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(100)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WasReceivedByMobileBanker", DbType="Bit")]
		public System.Nullable<bool> WasReceivedByMobileBanker
		{
			get
			{
				return this._WasReceivedByMobileBanker;
			}
			set
			{
				if ((this._WasReceivedByMobileBanker != value))
				{
					this.OnWasReceivedByMobileBankerChanging(value);
					this.SendPropertyChanging();
					this._WasReceivedByMobileBanker = value;
					this.SendPropertyChanged("WasReceivedByMobileBanker");
					this.OnWasReceivedByMobileBankerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileBankerID", DbType="Int")]
		public System.Nullable<int> MobileBankerID
		{
			get
			{
				return this._MobileBankerID;
			}
			set
			{
				if ((this._MobileBankerID != value))
				{
					this.OnMobileBankerIDChanging(value);
					this.SendPropertyChanging();
					this._MobileBankerID = value;
					this.SendPropertyChanged("MobileBankerID");
					this.OnMobileBankerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChequeNumber", DbType="NVarChar(100)")]
		public string ChequeNumber
		{
			get
			{
				return this._ChequeNumber;
			}
			set
			{
				if ((this._ChequeNumber != value))
				{
					this.OnChequeNumberChanging(value);
					this.SendPropertyChanging();
					this._ChequeNumber = value;
					this.SendPropertyChanged("ChequeNumber");
					this.OnChequeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethodId", DbType="Int")]
		public System.Nullable<int> PaymentMethodId
		{
			get
			{
				return this._PaymentMethodId;
			}
			set
			{
				if ((this._PaymentMethodId != value))
				{
					this.OnPaymentMethodIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethodId = value;
					this.SendPropertyChanged("PaymentMethodId");
					this.OnPaymentMethodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Investment_Contribution", Storage="_Investment", ThisKey="InvestmentId", OtherKey="InvestmentID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Investment Investment
		{
			get
			{
				return this._Investment.Entity;
			}
			set
			{
				Investment previousValue = this._Investment.Entity;
				if (((previousValue != value) 
							|| (this._Investment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Investment.Entity = null;
						previousValue.Contributions.Remove(this);
					}
					this._Investment.Entity = value;
					if ((value != null))
					{
						value.Contributions.Add(this);
						this._InvestmentId = value.InvestmentID;
					}
					else
					{
						this._InvestmentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Investment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Repayments")]
	public partial class Repayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RepaymentId;
		
		private System.Nullable<int> _LoanId;
		
		private System.Nullable<decimal> _RepaymentAmount;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _CreatedBy;
		
		private string _Description;
		
		private string _RepaymentBy;
		
		private System.Nullable<int> _RepaymentScheduleID;
		
		private System.Nullable<int> _RepaidWithInvestmentID;
		
		private string _ReceiptNumber;
		
		private string _RepaymentAmountInWords;
		
		private System.Nullable<decimal> _InterestPayment;
		
		private System.Nullable<decimal> _PrincipalPayment;
		
		private System.Nullable<bool> _isDeleted;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _ChequeNumber;
		
		private System.Nullable<int> _PaymentMethodId;
		
		private EntityRef<Loan> _Loan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRepaymentIdChanging(int value);
    partial void OnRepaymentIdChanged();
    partial void OnLoanIdChanging(System.Nullable<int> value);
    partial void OnLoanIdChanged();
    partial void OnRepaymentAmountChanging(System.Nullable<decimal> value);
    partial void OnRepaymentAmountChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnRepaymentByChanging(string value);
    partial void OnRepaymentByChanged();
    partial void OnRepaymentScheduleIDChanging(System.Nullable<int> value);
    partial void OnRepaymentScheduleIDChanged();
    partial void OnRepaidWithInvestmentIDChanging(System.Nullable<int> value);
    partial void OnRepaidWithInvestmentIDChanged();
    partial void OnReceiptNumberChanging(string value);
    partial void OnReceiptNumberChanged();
    partial void OnRepaymentAmountInWordsChanging(string value);
    partial void OnRepaymentAmountInWordsChanged();
    partial void OnInterestPaymentChanging(System.Nullable<decimal> value);
    partial void OnInterestPaymentChanged();
    partial void OnPrincipalPaymentChanging(System.Nullable<decimal> value);
    partial void OnPrincipalPaymentChanged();
    partial void OnisDeletedChanging(System.Nullable<bool> value);
    partial void OnisDeletedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnChequeNumberChanging(string value);
    partial void OnChequeNumberChanged();
    partial void OnPaymentMethodIdChanging(System.Nullable<int> value);
    partial void OnPaymentMethodIdChanged();
    #endregion
		
		public Repayment()
		{
			this._Loan = default(EntityRef<Loan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RepaymentId
		{
			get
			{
				return this._RepaymentId;
			}
			set
			{
				if ((this._RepaymentId != value))
				{
					this.OnRepaymentIdChanging(value);
					this.SendPropertyChanging();
					this._RepaymentId = value;
					this.SendPropertyChanged("RepaymentId");
					this.OnRepaymentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanId", DbType="Int")]
		public System.Nullable<int> LoanId
		{
			get
			{
				return this._LoanId;
			}
			set
			{
				if ((this._LoanId != value))
				{
					if (this._Loan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoanIdChanging(value);
					this.SendPropertyChanging();
					this._LoanId = value;
					this.SendPropertyChanged("LoanId");
					this.OnLoanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> RepaymentAmount
		{
			get
			{
				return this._RepaymentAmount;
			}
			set
			{
				if ((this._RepaymentAmount != value))
				{
					this.OnRepaymentAmountChanging(value);
					this.SendPropertyChanging();
					this._RepaymentAmount = value;
					this.SendPropertyChanged("RepaymentAmount");
					this.OnRepaymentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentBy", DbType="NVarChar(50)")]
		public string RepaymentBy
		{
			get
			{
				return this._RepaymentBy;
			}
			set
			{
				if ((this._RepaymentBy != value))
				{
					this.OnRepaymentByChanging(value);
					this.SendPropertyChanging();
					this._RepaymentBy = value;
					this.SendPropertyChanged("RepaymentBy");
					this.OnRepaymentByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentScheduleID", DbType="Int")]
		public System.Nullable<int> RepaymentScheduleID
		{
			get
			{
				return this._RepaymentScheduleID;
			}
			set
			{
				if ((this._RepaymentScheduleID != value))
				{
					this.OnRepaymentScheduleIDChanging(value);
					this.SendPropertyChanging();
					this._RepaymentScheduleID = value;
					this.SendPropertyChanged("RepaymentScheduleID");
					this.OnRepaymentScheduleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaidWithInvestmentID", DbType="Int")]
		public System.Nullable<int> RepaidWithInvestmentID
		{
			get
			{
				return this._RepaidWithInvestmentID;
			}
			set
			{
				if ((this._RepaidWithInvestmentID != value))
				{
					this.OnRepaidWithInvestmentIDChanging(value);
					this.SendPropertyChanging();
					this._RepaidWithInvestmentID = value;
					this.SendPropertyChanged("RepaidWithInvestmentID");
					this.OnRepaidWithInvestmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNumber", DbType="NVarChar(20)")]
		public string ReceiptNumber
		{
			get
			{
				return this._ReceiptNumber;
			}
			set
			{
				if ((this._ReceiptNumber != value))
				{
					this.OnReceiptNumberChanging(value);
					this.SendPropertyChanging();
					this._ReceiptNumber = value;
					this.SendPropertyChanged("ReceiptNumber");
					this.OnReceiptNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentAmountInWords", DbType="NVarChar(100)")]
		public string RepaymentAmountInWords
		{
			get
			{
				return this._RepaymentAmountInWords;
			}
			set
			{
				if ((this._RepaymentAmountInWords != value))
				{
					this.OnRepaymentAmountInWordsChanging(value);
					this.SendPropertyChanging();
					this._RepaymentAmountInWords = value;
					this.SendPropertyChanged("RepaymentAmountInWords");
					this.OnRepaymentAmountInWordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestPayment", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> InterestPayment
		{
			get
			{
				return this._InterestPayment;
			}
			set
			{
				if ((this._InterestPayment != value))
				{
					this.OnInterestPaymentChanging(value);
					this.SendPropertyChanging();
					this._InterestPayment = value;
					this.SendPropertyChanged("InterestPayment");
					this.OnInterestPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrincipalPayment", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PrincipalPayment
		{
			get
			{
				return this._PrincipalPayment;
			}
			set
			{
				if ((this._PrincipalPayment != value))
				{
					this.OnPrincipalPaymentChanging(value);
					this.SendPropertyChanging();
					this._PrincipalPayment = value;
					this.SendPropertyChanged("PrincipalPayment");
					this.OnPrincipalPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDeleted", DbType="Bit")]
		public System.Nullable<bool> isDeleted
		{
			get
			{
				return this._isDeleted;
			}
			set
			{
				if ((this._isDeleted != value))
				{
					this.OnisDeletedChanging(value);
					this.SendPropertyChanging();
					this._isDeleted = value;
					this.SendPropertyChanged("isDeleted");
					this.OnisDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(100)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChequeNumber", DbType="NVarChar(100)")]
		public string ChequeNumber
		{
			get
			{
				return this._ChequeNumber;
			}
			set
			{
				if ((this._ChequeNumber != value))
				{
					this.OnChequeNumberChanging(value);
					this.SendPropertyChanging();
					this._ChequeNumber = value;
					this.SendPropertyChanged("ChequeNumber");
					this.OnChequeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentMethodId", DbType="Int")]
		public System.Nullable<int> PaymentMethodId
		{
			get
			{
				return this._PaymentMethodId;
			}
			set
			{
				if ((this._PaymentMethodId != value))
				{
					this.OnPaymentMethodIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentMethodId = value;
					this.SendPropertyChanged("PaymentMethodId");
					this.OnPaymentMethodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loan_Repayment", Storage="_Loan", ThisKey="LoanId", OtherKey="LoanID", IsForeignKey=true)]
		public Loan Loan
		{
			get
			{
				return this._Loan.Entity;
			}
			set
			{
				Loan previousValue = this._Loan.Entity;
				if (((previousValue != value) 
							|| (this._Loan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Loan.Entity = null;
						previousValue.Repayments.Remove(this);
					}
					this._Loan.Entity = value;
					if ((value != null))
					{
						value.Repayments.Add(this);
						this._LoanId = value.LoanID;
					}
					else
					{
						this._LoanId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Loan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MembersView2")]
	public partial class MembersView2
	{
		
		private string _Member;
		
		private int _MemberId;
		
		public MembersView2()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Member", DbType="NVarChar(354)")]
		public string Member
		{
			get
			{
				return this._Member;
			}
			set
			{
				if ((this._Member != value))
				{
					this._Member = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int MemberId
		{
			get
			{
				return this._MemberId;
			}
			set
			{
				if ((this._MemberId != value))
				{
					this._MemberId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MemberWithdrawals")]
	public partial class MemberWithdrawal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MemberWithdrawalId;
		
		private System.Nullable<int> _MemberId;
		
		private System.Nullable<decimal> _WithdrawalAmount;
		
		private string _WithdrawnBy;
		
		private string _WithdrawalIssuedByUserName;
		
		private System.Nullable<System.DateTime> _DateCreated;
		
		private string _CreatedBy;
		
		private System.Nullable<int> _InvestmentID;
		
		private string _Narration;
		
		private System.Nullable<bool> _IsDeleted;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<Member> _Member;
		
		private EntityRef<Investment> _Investment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemberWithdrawalIdChanging(int value);
    partial void OnMemberWithdrawalIdChanged();
    partial void OnMemberIdChanging(System.Nullable<int> value);
    partial void OnMemberIdChanged();
    partial void OnWithdrawalAmountChanging(System.Nullable<decimal> value);
    partial void OnWithdrawalAmountChanged();
    partial void OnWithdrawnByChanging(string value);
    partial void OnWithdrawnByChanged();
    partial void OnWithdrawalIssuedByUserNameChanging(string value);
    partial void OnWithdrawalIssuedByUserNameChanged();
    partial void OnDateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCreatedChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnInvestmentIDChanging(System.Nullable<int> value);
    partial void OnInvestmentIDChanged();
    partial void OnNarrationChanging(string value);
    partial void OnNarrationChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MemberWithdrawal()
		{
			this._Member = default(EntityRef<Member>);
			this._Investment = default(EntityRef<Investment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberWithdrawalId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MemberWithdrawalId
		{
			get
			{
				return this._MemberWithdrawalId;
			}
			set
			{
				if ((this._MemberWithdrawalId != value))
				{
					this.OnMemberWithdrawalIdChanging(value);
					this.SendPropertyChanging();
					this._MemberWithdrawalId = value;
					this.SendPropertyChanged("MemberWithdrawalId");
					this.OnMemberWithdrawalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberId", DbType="Int")]
		public System.Nullable<int> MemberId
		{
			get
			{
				return this._MemberId;
			}
			set
			{
				if ((this._MemberId != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIdChanging(value);
					this.SendPropertyChanging();
					this._MemberId = value;
					this.SendPropertyChanged("MemberId");
					this.OnMemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithdrawalAmount", DbType="Money")]
		public System.Nullable<decimal> WithdrawalAmount
		{
			get
			{
				return this._WithdrawalAmount;
			}
			set
			{
				if ((this._WithdrawalAmount != value))
				{
					this.OnWithdrawalAmountChanging(value);
					this.SendPropertyChanging();
					this._WithdrawalAmount = value;
					this.SendPropertyChanged("WithdrawalAmount");
					this.OnWithdrawalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithdrawnBy", DbType="NVarChar(50)")]
		public string WithdrawnBy
		{
			get
			{
				return this._WithdrawnBy;
			}
			set
			{
				if ((this._WithdrawnBy != value))
				{
					this.OnWithdrawnByChanging(value);
					this.SendPropertyChanging();
					this._WithdrawnBy = value;
					this.SendPropertyChanged("WithdrawnBy");
					this.OnWithdrawnByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithdrawalIssuedByUserName", DbType="NVarChar(100)")]
		public string WithdrawalIssuedByUserName
		{
			get
			{
				return this._WithdrawalIssuedByUserName;
			}
			set
			{
				if ((this._WithdrawalIssuedByUserName != value))
				{
					this.OnWithdrawalIssuedByUserNameChanging(value);
					this.SendPropertyChanging();
					this._WithdrawalIssuedByUserName = value;
					this.SendPropertyChanged("WithdrawalIssuedByUserName");
					this.OnWithdrawalIssuedByUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentID", DbType="Int")]
		public System.Nullable<int> InvestmentID
		{
			get
			{
				return this._InvestmentID;
			}
			set
			{
				if ((this._InvestmentID != value))
				{
					if (this._Investment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvestmentIDChanging(value);
					this.SendPropertyChanging();
					this._InvestmentID = value;
					this.SendPropertyChanged("InvestmentID");
					this.OnInvestmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Narration", DbType="NVarChar(100)")]
		public string Narration
		{
			get
			{
				return this._Narration;
			}
			set
			{
				if ((this._Narration != value))
				{
					this.OnNarrationChanging(value);
					this.SendPropertyChanging();
					this._Narration = value;
					this.SendPropertyChanged("Narration");
					this.OnNarrationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(100)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_MemberWithdrawal", Storage="_Member", ThisKey="MemberId", OtherKey="MemberId", IsForeignKey=true, DeleteRule="CASCADE")]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.MemberWithdrawals.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.MemberWithdrawals.Add(this);
						this._MemberId = value.MemberId;
					}
					else
					{
						this._MemberId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Investment_MemberWithdrawal", Storage="_Investment", ThisKey="InvestmentID", OtherKey="InvestmentID", IsForeignKey=true)]
		public Investment Investment
		{
			get
			{
				return this._Investment.Entity;
			}
			set
			{
				Investment previousValue = this._Investment.Entity;
				if (((previousValue != value) 
							|| (this._Investment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Investment.Entity = null;
						previousValue.MemberWithdrawals.Remove(this);
					}
					this._Investment.Entity = value;
					if ((value != null))
					{
						value.MemberWithdrawals.Add(this);
						this._InvestmentID = value.InvestmentID;
					}
					else
					{
						this._InvestmentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Investment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Loans")]
	public partial class Loan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoanID;
		
		private System.Nullable<int> _MemberId;
		
		private System.Nullable<decimal> _Interest;
		
		private System.Nullable<int> _InterestTypeId;
		
		private System.Nullable<decimal> _Principal;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _Duration;
		
		private System.Nullable<bool> _payWithContribution;
		
		private System.Nullable<int> _RepaymentFrequencyId;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ExpectedRepaymentEndDate;
		
		private System.Nullable<System.DateTime> _ActualRepaymentEndDate;
		
		private System.Nullable<bool> _IsPaidup;
		
		private System.Nullable<decimal> _Balance;
		
		private System.Nullable<decimal> _RepaymentFreqAmount;
		
		private System.Nullable<int> _DurationType;
		
		private string _RawDurationEntered;
		
		private System.Nullable<System.DateTime> _LoanCalculationStartDate;
		
		private System.Nullable<int> _CollateralID;
		
		private string _CollateralDescription;
		
		private System.Nullable<int> _GuarantorID;
		
		private System.Nullable<int> _GroupID;
		
		private string _CreatedBy;
		
		private System.Nullable<bool> _IsActive;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _LoanTypeID;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<int> _LoanDurationTypeID;
		
		private EntitySet<LoanPenalty> _LoanPenalties;
		
		private EntitySet<Repayment> _Repayments;
		
		private EntitySet<LoanCollateralDocument> _LoanCollateralDocuments;
		
		private EntityRef<InterestRateType> _InterestRateType;
		
		private EntityRef<RepaymentFrequency> _RepaymentFrequency;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoanIDChanging(int value);
    partial void OnLoanIDChanged();
    partial void OnMemberIdChanging(System.Nullable<int> value);
    partial void OnMemberIdChanged();
    partial void OnInterestChanging(System.Nullable<decimal> value);
    partial void OnInterestChanged();
    partial void OnInterestTypeIdChanging(System.Nullable<int> value);
    partial void OnInterestTypeIdChanged();
    partial void OnPrincipalChanging(System.Nullable<decimal> value);
    partial void OnPrincipalChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnDurationChanging(System.Nullable<decimal> value);
    partial void OnDurationChanged();
    partial void OnpayWithContributionChanging(System.Nullable<bool> value);
    partial void OnpayWithContributionChanged();
    partial void OnRepaymentFrequencyIdChanging(System.Nullable<int> value);
    partial void OnRepaymentFrequencyIdChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnExpectedRepaymentEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpectedRepaymentEndDateChanged();
    partial void OnActualRepaymentEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActualRepaymentEndDateChanged();
    partial void OnIsPaidupChanging(System.Nullable<bool> value);
    partial void OnIsPaidupChanged();
    partial void OnBalanceChanging(System.Nullable<decimal> value);
    partial void OnBalanceChanged();
    partial void OnRepaymentFreqAmountChanging(System.Nullable<decimal> value);
    partial void OnRepaymentFreqAmountChanged();
    partial void OnDurationTypeChanging(System.Nullable<int> value);
    partial void OnDurationTypeChanged();
    partial void OnRawDurationEnteredChanging(string value);
    partial void OnRawDurationEnteredChanged();
    partial void OnLoanCalculationStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLoanCalculationStartDateChanged();
    partial void OnCollateralIDChanging(System.Nullable<int> value);
    partial void OnCollateralIDChanged();
    partial void OnCollateralDescriptionChanging(string value);
    partial void OnCollateralDescriptionChanged();
    partial void OnGuarantorIDChanging(System.Nullable<int> value);
    partial void OnGuarantorIDChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnLoanTypeIDChanging(System.Nullable<int> value);
    partial void OnLoanTypeIDChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnLoanDurationTypeIDChanging(System.Nullable<int> value);
    partial void OnLoanDurationTypeIDChanged();
    #endregion
		
		public Loan()
		{
			this._LoanPenalties = new EntitySet<LoanPenalty>(new Action<LoanPenalty>(this.attach_LoanPenalties), new Action<LoanPenalty>(this.detach_LoanPenalties));
			this._Repayments = new EntitySet<Repayment>(new Action<Repayment>(this.attach_Repayments), new Action<Repayment>(this.detach_Repayments));
			this._LoanCollateralDocuments = new EntitySet<LoanCollateralDocument>(new Action<LoanCollateralDocument>(this.attach_LoanCollateralDocuments), new Action<LoanCollateralDocument>(this.detach_LoanCollateralDocuments));
			this._InterestRateType = default(EntityRef<InterestRateType>);
			this._RepaymentFrequency = default(EntityRef<RepaymentFrequency>);
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoanID
		{
			get
			{
				return this._LoanID;
			}
			set
			{
				if ((this._LoanID != value))
				{
					this.OnLoanIDChanging(value);
					this.SendPropertyChanging();
					this._LoanID = value;
					this.SendPropertyChanged("LoanID");
					this.OnLoanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberId", DbType="Int")]
		public System.Nullable<int> MemberId
		{
			get
			{
				return this._MemberId;
			}
			set
			{
				if ((this._MemberId != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIdChanging(value);
					this.SendPropertyChanging();
					this._MemberId = value;
					this.SendPropertyChanged("MemberId");
					this.OnMemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interest", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Interest
		{
			get
			{
				return this._Interest;
			}
			set
			{
				if ((this._Interest != value))
				{
					this.OnInterestChanging(value);
					this.SendPropertyChanging();
					this._Interest = value;
					this.SendPropertyChanged("Interest");
					this.OnInterestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestTypeId", DbType="Int")]
		public System.Nullable<int> InterestTypeId
		{
			get
			{
				return this._InterestTypeId;
			}
			set
			{
				if ((this._InterestTypeId != value))
				{
					if (this._InterestRateType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInterestTypeIdChanging(value);
					this.SendPropertyChanging();
					this._InterestTypeId = value;
					this.SendPropertyChanged("InterestTypeId");
					this.OnInterestTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Principal", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Principal
		{
			get
			{
				return this._Principal;
			}
			set
			{
				if ((this._Principal != value))
				{
					this.OnPrincipalChanging(value);
					this.SendPropertyChanging();
					this._Principal = value;
					this.SendPropertyChanged("Principal");
					this.OnPrincipalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payWithContribution", DbType="Bit")]
		public System.Nullable<bool> payWithContribution
		{
			get
			{
				return this._payWithContribution;
			}
			set
			{
				if ((this._payWithContribution != value))
				{
					this.OnpayWithContributionChanging(value);
					this.SendPropertyChanging();
					this._payWithContribution = value;
					this.SendPropertyChanged("payWithContribution");
					this.OnpayWithContributionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentFrequencyId", DbType="Int")]
		public System.Nullable<int> RepaymentFrequencyId
		{
			get
			{
				return this._RepaymentFrequencyId;
			}
			set
			{
				if ((this._RepaymentFrequencyId != value))
				{
					if (this._RepaymentFrequency.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRepaymentFrequencyIdChanging(value);
					this.SendPropertyChanging();
					this._RepaymentFrequencyId = value;
					this.SendPropertyChanged("RepaymentFrequencyId");
					this.OnRepaymentFrequencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpectedRepaymentEndDate", DbType="Date")]
		public System.Nullable<System.DateTime> ExpectedRepaymentEndDate
		{
			get
			{
				return this._ExpectedRepaymentEndDate;
			}
			set
			{
				if ((this._ExpectedRepaymentEndDate != value))
				{
					this.OnExpectedRepaymentEndDateChanging(value);
					this.SendPropertyChanging();
					this._ExpectedRepaymentEndDate = value;
					this.SendPropertyChanged("ExpectedRepaymentEndDate");
					this.OnExpectedRepaymentEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualRepaymentEndDate", DbType="Date")]
		public System.Nullable<System.DateTime> ActualRepaymentEndDate
		{
			get
			{
				return this._ActualRepaymentEndDate;
			}
			set
			{
				if ((this._ActualRepaymentEndDate != value))
				{
					this.OnActualRepaymentEndDateChanging(value);
					this.SendPropertyChanging();
					this._ActualRepaymentEndDate = value;
					this.SendPropertyChanged("ActualRepaymentEndDate");
					this.OnActualRepaymentEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaidup", DbType="Bit")]
		public System.Nullable<bool> IsPaidup
		{
			get
			{
				return this._IsPaidup;
			}
			set
			{
				if ((this._IsPaidup != value))
				{
					this.OnIsPaidupChanging(value);
					this.SendPropertyChanging();
					this._IsPaidup = value;
					this.SendPropertyChanged("IsPaidup");
					this.OnIsPaidupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RepaymentFreqAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> RepaymentFreqAmount
		{
			get
			{
				return this._RepaymentFreqAmount;
			}
			set
			{
				if ((this._RepaymentFreqAmount != value))
				{
					this.OnRepaymentFreqAmountChanging(value);
					this.SendPropertyChanging();
					this._RepaymentFreqAmount = value;
					this.SendPropertyChanged("RepaymentFreqAmount");
					this.OnRepaymentFreqAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DurationType", DbType="Int")]
		public System.Nullable<int> DurationType
		{
			get
			{
				return this._DurationType;
			}
			set
			{
				if ((this._DurationType != value))
				{
					this.OnDurationTypeChanging(value);
					this.SendPropertyChanging();
					this._DurationType = value;
					this.SendPropertyChanged("DurationType");
					this.OnDurationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RawDurationEntered", DbType="NVarChar(50)")]
		public string RawDurationEntered
		{
			get
			{
				return this._RawDurationEntered;
			}
			set
			{
				if ((this._RawDurationEntered != value))
				{
					this.OnRawDurationEnteredChanging(value);
					this.SendPropertyChanging();
					this._RawDurationEntered = value;
					this.SendPropertyChanged("RawDurationEntered");
					this.OnRawDurationEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanCalculationStartDate", DbType="Date")]
		public System.Nullable<System.DateTime> LoanCalculationStartDate
		{
			get
			{
				return this._LoanCalculationStartDate;
			}
			set
			{
				if ((this._LoanCalculationStartDate != value))
				{
					this.OnLoanCalculationStartDateChanging(value);
					this.SendPropertyChanging();
					this._LoanCalculationStartDate = value;
					this.SendPropertyChanged("LoanCalculationStartDate");
					this.OnLoanCalculationStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollateralID", DbType="Int")]
		public System.Nullable<int> CollateralID
		{
			get
			{
				return this._CollateralID;
			}
			set
			{
				if ((this._CollateralID != value))
				{
					this.OnCollateralIDChanging(value);
					this.SendPropertyChanging();
					this._CollateralID = value;
					this.SendPropertyChanged("CollateralID");
					this.OnCollateralIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollateralDescription", DbType="NVarChar(500)")]
		public string CollateralDescription
		{
			get
			{
				return this._CollateralDescription;
			}
			set
			{
				if ((this._CollateralDescription != value))
				{
					this.OnCollateralDescriptionChanging(value);
					this.SendPropertyChanging();
					this._CollateralDescription = value;
					this.SendPropertyChanged("CollateralDescription");
					this.OnCollateralDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuarantorID", DbType="Int")]
		public System.Nullable<int> GuarantorID
		{
			get
			{
				return this._GuarantorID;
			}
			set
			{
				if ((this._GuarantorID != value))
				{
					this.OnGuarantorIDChanging(value);
					this.SendPropertyChanging();
					this._GuarantorID = value;
					this.SendPropertyChanged("GuarantorID");
					this.OnGuarantorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int")]
		public System.Nullable<int> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(100)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(100)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanTypeID", DbType="Int")]
		public System.Nullable<int> LoanTypeID
		{
			get
			{
				return this._LoanTypeID;
			}
			set
			{
				if ((this._LoanTypeID != value))
				{
					this.OnLoanTypeIDChanging(value);
					this.SendPropertyChanging();
					this._LoanTypeID = value;
					this.SendPropertyChanged("LoanTypeID");
					this.OnLoanTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanDurationTypeID", DbType="Int")]
		public System.Nullable<int> LoanDurationTypeID
		{
			get
			{
				return this._LoanDurationTypeID;
			}
			set
			{
				if ((this._LoanDurationTypeID != value))
				{
					this.OnLoanDurationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._LoanDurationTypeID = value;
					this.SendPropertyChanged("LoanDurationTypeID");
					this.OnLoanDurationTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loan_LoanPenalty", Storage="_LoanPenalties", ThisKey="LoanID", OtherKey="LoanID")]
		public EntitySet<LoanPenalty> LoanPenalties
		{
			get
			{
				return this._LoanPenalties;
			}
			set
			{
				this._LoanPenalties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loan_Repayment", Storage="_Repayments", ThisKey="LoanID", OtherKey="LoanId")]
		public EntitySet<Repayment> Repayments
		{
			get
			{
				return this._Repayments;
			}
			set
			{
				this._Repayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loan_LoanCollateralDocument", Storage="_LoanCollateralDocuments", ThisKey="LoanID", OtherKey="LoanId")]
		public EntitySet<LoanCollateralDocument> LoanCollateralDocuments
		{
			get
			{
				return this._LoanCollateralDocuments;
			}
			set
			{
				this._LoanCollateralDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InterestRateType_Loan", Storage="_InterestRateType", ThisKey="InterestTypeId", OtherKey="InterestRateTypeId", IsForeignKey=true)]
		public InterestRateType InterestRateType
		{
			get
			{
				return this._InterestRateType.Entity;
			}
			set
			{
				InterestRateType previousValue = this._InterestRateType.Entity;
				if (((previousValue != value) 
							|| (this._InterestRateType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InterestRateType.Entity = null;
						previousValue.Loans.Remove(this);
					}
					this._InterestRateType.Entity = value;
					if ((value != null))
					{
						value.Loans.Add(this);
						this._InterestTypeId = value.InterestRateTypeId;
					}
					else
					{
						this._InterestTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("InterestRateType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RepaymentFrequency_Loan", Storage="_RepaymentFrequency", ThisKey="RepaymentFrequencyId", OtherKey="RepaymentFrequencyId", IsForeignKey=true)]
		public RepaymentFrequency RepaymentFrequency
		{
			get
			{
				return this._RepaymentFrequency.Entity;
			}
			set
			{
				RepaymentFrequency previousValue = this._RepaymentFrequency.Entity;
				if (((previousValue != value) 
							|| (this._RepaymentFrequency.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RepaymentFrequency.Entity = null;
						previousValue.Loans.Remove(this);
					}
					this._RepaymentFrequency.Entity = value;
					if ((value != null))
					{
						value.Loans.Add(this);
						this._RepaymentFrequencyId = value.RepaymentFrequencyId;
					}
					else
					{
						this._RepaymentFrequencyId = default(Nullable<int>);
					}
					this.SendPropertyChanged("RepaymentFrequency");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Loan", Storage="_Member", ThisKey="MemberId", OtherKey="MemberId", IsForeignKey=true, DeleteRule="CASCADE")]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Loans.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Loans.Add(this);
						this._MemberId = value.MemberId;
					}
					else
					{
						this._MemberId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LoanPenalties(LoanPenalty entity)
		{
			this.SendPropertyChanging();
			entity.Loan = this;
		}
		
		private void detach_LoanPenalties(LoanPenalty entity)
		{
			this.SendPropertyChanging();
			entity.Loan = null;
		}
		
		private void attach_Repayments(Repayment entity)
		{
			this.SendPropertyChanging();
			entity.Loan = this;
		}
		
		private void detach_Repayments(Repayment entity)
		{
			this.SendPropertyChanging();
			entity.Loan = null;
		}
		
		private void attach_LoanCollateralDocuments(LoanCollateralDocument entity)
		{
			this.SendPropertyChanging();
			entity.Loan = this;
		}
		
		private void detach_LoanCollateralDocuments(LoanCollateralDocument entity)
		{
			this.SendPropertyChanging();
			entity.Loan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompanyProfile")]
	public partial class CompanyProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CompanyName;
		
		private int _CompanyId;
		
		private string _address;
		
		private string _Email;
		
		private string _website;
		
		private System.Nullable<System.DateTime> _EndOfDayLastRunDate;
		
		private System.Nullable<int> _DefaultInterestRateTypeId;
		
		private System.Nullable<decimal> _SimpleInterestRate;
		
		private System.Nullable<int> _CompoundFrequency;
		
		private System.Nullable<decimal> _CompoundInterestRate;
		
		private System.Nullable<decimal> _DefaultersInteresty;
		
		private System.Nullable<bool> _ExcludeSundaysFromCalculations;
		
		private System.Nullable<bool> _ExcludeSaturdayFromCalculations;
		
		private System.Data.Linq.Binary _CompanyLogo;
		
		private string _LogoFileExt;
		
		private System.Nullable<bool> _AutoGenerateAccountNumbers;
		
		private System.Nullable<int> _GracePeriodDays;
		
		private System.Nullable<int> _PenaltyCalculationFrequencyDays;
		
		private string _RMFICategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnwebsiteChanging(string value);
    partial void OnwebsiteChanged();
    partial void OnEndOfDayLastRunDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndOfDayLastRunDateChanged();
    partial void OnDefaultInterestRateTypeIdChanging(System.Nullable<int> value);
    partial void OnDefaultInterestRateTypeIdChanged();
    partial void OnSimpleInterestRateChanging(System.Nullable<decimal> value);
    partial void OnSimpleInterestRateChanged();
    partial void OnCompoundFrequencyChanging(System.Nullable<int> value);
    partial void OnCompoundFrequencyChanged();
    partial void OnCompoundInterestRateChanging(System.Nullable<decimal> value);
    partial void OnCompoundInterestRateChanged();
    partial void OnDefaultersInterestyChanging(System.Nullable<decimal> value);
    partial void OnDefaultersInterestyChanged();
    partial void OnExcludeSundaysFromCalculationsChanging(System.Nullable<bool> value);
    partial void OnExcludeSundaysFromCalculationsChanged();
    partial void OnExcludeSaturdayFromCalculationsChanging(System.Nullable<bool> value);
    partial void OnExcludeSaturdayFromCalculationsChanged();
    partial void OnCompanyLogoChanging(System.Data.Linq.Binary value);
    partial void OnCompanyLogoChanged();
    partial void OnLogoFileExtChanging(string value);
    partial void OnLogoFileExtChanged();
    partial void OnAutoGenerateAccountNumbersChanging(System.Nullable<bool> value);
    partial void OnAutoGenerateAccountNumbersChanged();
    partial void OnGracePeriodDaysChanging(System.Nullable<int> value);
    partial void OnGracePeriodDaysChanged();
    partial void OnPenaltyCalculationFrequencyDaysChanging(System.Nullable<int> value);
    partial void OnPenaltyCalculationFrequencyDaysChanged();
    partial void OnRMFICategoryChanging(string value);
    partial void OnRMFICategoryChanged();
    #endregion
		
		public CompanyProfile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(100)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(200)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_website", DbType="NVarChar(200)")]
		public string website
		{
			get
			{
				return this._website;
			}
			set
			{
				if ((this._website != value))
				{
					this.OnwebsiteChanging(value);
					this.SendPropertyChanging();
					this._website = value;
					this.SendPropertyChanged("website");
					this.OnwebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndOfDayLastRunDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndOfDayLastRunDate
		{
			get
			{
				return this._EndOfDayLastRunDate;
			}
			set
			{
				if ((this._EndOfDayLastRunDate != value))
				{
					this.OnEndOfDayLastRunDateChanging(value);
					this.SendPropertyChanging();
					this._EndOfDayLastRunDate = value;
					this.SendPropertyChanged("EndOfDayLastRunDate");
					this.OnEndOfDayLastRunDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultInterestRateTypeId", DbType="Int")]
		public System.Nullable<int> DefaultInterestRateTypeId
		{
			get
			{
				return this._DefaultInterestRateTypeId;
			}
			set
			{
				if ((this._DefaultInterestRateTypeId != value))
				{
					this.OnDefaultInterestRateTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DefaultInterestRateTypeId = value;
					this.SendPropertyChanged("DefaultInterestRateTypeId");
					this.OnDefaultInterestRateTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SimpleInterestRate", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> SimpleInterestRate
		{
			get
			{
				return this._SimpleInterestRate;
			}
			set
			{
				if ((this._SimpleInterestRate != value))
				{
					this.OnSimpleInterestRateChanging(value);
					this.SendPropertyChanging();
					this._SimpleInterestRate = value;
					this.SendPropertyChanged("SimpleInterestRate");
					this.OnSimpleInterestRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompoundFrequency", DbType="Int")]
		public System.Nullable<int> CompoundFrequency
		{
			get
			{
				return this._CompoundFrequency;
			}
			set
			{
				if ((this._CompoundFrequency != value))
				{
					this.OnCompoundFrequencyChanging(value);
					this.SendPropertyChanging();
					this._CompoundFrequency = value;
					this.SendPropertyChanged("CompoundFrequency");
					this.OnCompoundFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompoundInterestRate", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> CompoundInterestRate
		{
			get
			{
				return this._CompoundInterestRate;
			}
			set
			{
				if ((this._CompoundInterestRate != value))
				{
					this.OnCompoundInterestRateChanging(value);
					this.SendPropertyChanging();
					this._CompoundInterestRate = value;
					this.SendPropertyChanged("CompoundInterestRate");
					this.OnCompoundInterestRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultersInteresty", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DefaultersInteresty
		{
			get
			{
				return this._DefaultersInteresty;
			}
			set
			{
				if ((this._DefaultersInteresty != value))
				{
					this.OnDefaultersInterestyChanging(value);
					this.SendPropertyChanging();
					this._DefaultersInteresty = value;
					this.SendPropertyChanged("DefaultersInteresty");
					this.OnDefaultersInterestyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExcludeSundaysFromCalculations", DbType="Bit")]
		public System.Nullable<bool> ExcludeSundaysFromCalculations
		{
			get
			{
				return this._ExcludeSundaysFromCalculations;
			}
			set
			{
				if ((this._ExcludeSundaysFromCalculations != value))
				{
					this.OnExcludeSundaysFromCalculationsChanging(value);
					this.SendPropertyChanging();
					this._ExcludeSundaysFromCalculations = value;
					this.SendPropertyChanged("ExcludeSundaysFromCalculations");
					this.OnExcludeSundaysFromCalculationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExcludeSaturdayFromCalculations", DbType="Bit")]
		public System.Nullable<bool> ExcludeSaturdayFromCalculations
		{
			get
			{
				return this._ExcludeSaturdayFromCalculations;
			}
			set
			{
				if ((this._ExcludeSaturdayFromCalculations != value))
				{
					this.OnExcludeSaturdayFromCalculationsChanging(value);
					this.SendPropertyChanging();
					this._ExcludeSaturdayFromCalculations = value;
					this.SendPropertyChanged("ExcludeSaturdayFromCalculations");
					this.OnExcludeSaturdayFromCalculationsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyLogo", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary CompanyLogo
		{
			get
			{
				return this._CompanyLogo;
			}
			set
			{
				if ((this._CompanyLogo != value))
				{
					this.OnCompanyLogoChanging(value);
					this.SendPropertyChanging();
					this._CompanyLogo = value;
					this.SendPropertyChanged("CompanyLogo");
					this.OnCompanyLogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogoFileExt", DbType="NVarChar(8)")]
		public string LogoFileExt
		{
			get
			{
				return this._LogoFileExt;
			}
			set
			{
				if ((this._LogoFileExt != value))
				{
					this.OnLogoFileExtChanging(value);
					this.SendPropertyChanging();
					this._LogoFileExt = value;
					this.SendPropertyChanged("LogoFileExt");
					this.OnLogoFileExtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoGenerateAccountNumbers", DbType="Bit")]
		public System.Nullable<bool> AutoGenerateAccountNumbers
		{
			get
			{
				return this._AutoGenerateAccountNumbers;
			}
			set
			{
				if ((this._AutoGenerateAccountNumbers != value))
				{
					this.OnAutoGenerateAccountNumbersChanging(value);
					this.SendPropertyChanging();
					this._AutoGenerateAccountNumbers = value;
					this.SendPropertyChanged("AutoGenerateAccountNumbers");
					this.OnAutoGenerateAccountNumbersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GracePeriodDays", DbType="Int")]
		public System.Nullable<int> GracePeriodDays
		{
			get
			{
				return this._GracePeriodDays;
			}
			set
			{
				if ((this._GracePeriodDays != value))
				{
					this.OnGracePeriodDaysChanging(value);
					this.SendPropertyChanging();
					this._GracePeriodDays = value;
					this.SendPropertyChanged("GracePeriodDays");
					this.OnGracePeriodDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PenaltyCalculationFrequencyDays", DbType="Int")]
		public System.Nullable<int> PenaltyCalculationFrequencyDays
		{
			get
			{
				return this._PenaltyCalculationFrequencyDays;
			}
			set
			{
				if ((this._PenaltyCalculationFrequencyDays != value))
				{
					this.OnPenaltyCalculationFrequencyDaysChanging(value);
					this.SendPropertyChanging();
					this._PenaltyCalculationFrequencyDays = value;
					this.SendPropertyChanged("PenaltyCalculationFrequencyDays");
					this.OnPenaltyCalculationFrequencyDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RMFICategory", DbType="NVarChar(200)")]
		public string RMFICategory
		{
			get
			{
				return this._RMFICategory;
			}
			set
			{
				if ((this._RMFICategory != value))
				{
					this.OnRMFICategoryChanging(value);
					this.SendPropertyChanging();
					this._RMFICategory = value;
					this.SendPropertyChanged("RMFICategory");
					this.OnRMFICategoryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Members")]
	public partial class Member : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MemberId;
		
		private string _MemberFirstName;
		
		private string _MemberLastName;
		
		private System.Data.Linq.Binary _MemberPhoto;
		
		private System.Nullable<decimal> _Balance;
		
		private string _MemberBranch;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _AccountNumber;
		
		private System.Nullable<int> _CurrentLoanId;
		
		private string _Fax;
		
		private string _Telephone;
		
		private string _Address;
		
		private string _ResidentialAddress;
		
		private string _BusinessAddress;
		
		private string _Gender;
		
		private string _OtherName;
		
		private string _ContactPerson;
		
		private System.Nullable<int> _IdentityTypeID;
		
		private string _IdentityNumber;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private string _Mobile;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Data.Linq.Binary _Signature;
		
		private System.Data.Linq.Binary _IDPhoto;
		
		private System.Nullable<int> _OccupationID;
		
		private string _ContactPersonPhone;
		
		private string _NextOfKin;
		
		private string _NextOfKinTelephone;
		
		private System.Nullable<int> _AccountTypeID;
		
		private System.Nullable<int> _BranchID;
		
		private EntitySet<RepaymentSchedule> _RepaymentSchedules;
		
		private EntitySet<GroupMember> _GroupMembers;
		
		private EntitySet<MemberDeposit> _MemberDeposits;
		
		private EntitySet<MobileBankerCustomer> _MobileBankerCustomers;
		
		private EntitySet<MemberWithdrawal> _MemberWithdrawals;
		
		private EntitySet<Loan> _Loans;
		
		private EntitySet<Investment> _Investments;
		
		private EntityRef<AccountType> _AccountType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemberIdChanging(int value);
    partial void OnMemberIdChanged();
    partial void OnMemberFirstNameChanging(string value);
    partial void OnMemberFirstNameChanged();
    partial void OnMemberLastNameChanging(string value);
    partial void OnMemberLastNameChanged();
    partial void OnMemberPhotoChanging(System.Data.Linq.Binary value);
    partial void OnMemberPhotoChanged();
    partial void OnBalanceChanging(System.Nullable<decimal> value);
    partial void OnBalanceChanged();
    partial void OnMemberBranchChanging(string value);
    partial void OnMemberBranchChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnCurrentLoanIdChanging(System.Nullable<int> value);
    partial void OnCurrentLoanIdChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnResidentialAddressChanging(string value);
    partial void OnResidentialAddressChanged();
    partial void OnBusinessAddressChanging(string value);
    partial void OnBusinessAddressChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnOtherNameChanging(string value);
    partial void OnOtherNameChanged();
    partial void OnContactPersonChanging(string value);
    partial void OnContactPersonChanged();
    partial void OnIdentityTypeIDChanging(System.Nullable<int> value);
    partial void OnIdentityTypeIDChanged();
    partial void OnIdentityNumberChanging(string value);
    partial void OnIdentityNumberChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnSignatureChanging(System.Data.Linq.Binary value);
    partial void OnSignatureChanged();
    partial void OnIDPhotoChanging(System.Data.Linq.Binary value);
    partial void OnIDPhotoChanged();
    partial void OnOccupationIDChanging(System.Nullable<int> value);
    partial void OnOccupationIDChanged();
    partial void OnContactPersonPhoneChanging(string value);
    partial void OnContactPersonPhoneChanged();
    partial void OnNextOfKinChanging(string value);
    partial void OnNextOfKinChanged();
    partial void OnNextOfKinTelephoneChanging(string value);
    partial void OnNextOfKinTelephoneChanged();
    partial void OnAccountTypeIDChanging(System.Nullable<int> value);
    partial void OnAccountTypeIDChanged();
    partial void OnBranchIDChanging(System.Nullable<int> value);
    partial void OnBranchIDChanged();
    #endregion
		
		public Member()
		{
			this._RepaymentSchedules = new EntitySet<RepaymentSchedule>(new Action<RepaymentSchedule>(this.attach_RepaymentSchedules), new Action<RepaymentSchedule>(this.detach_RepaymentSchedules));
			this._GroupMembers = new EntitySet<GroupMember>(new Action<GroupMember>(this.attach_GroupMembers), new Action<GroupMember>(this.detach_GroupMembers));
			this._MemberDeposits = new EntitySet<MemberDeposit>(new Action<MemberDeposit>(this.attach_MemberDeposits), new Action<MemberDeposit>(this.detach_MemberDeposits));
			this._MobileBankerCustomers = new EntitySet<MobileBankerCustomer>(new Action<MobileBankerCustomer>(this.attach_MobileBankerCustomers), new Action<MobileBankerCustomer>(this.detach_MobileBankerCustomers));
			this._MemberWithdrawals = new EntitySet<MemberWithdrawal>(new Action<MemberWithdrawal>(this.attach_MemberWithdrawals), new Action<MemberWithdrawal>(this.detach_MemberWithdrawals));
			this._Loans = new EntitySet<Loan>(new Action<Loan>(this.attach_Loans), new Action<Loan>(this.detach_Loans));
			this._Investments = new EntitySet<Investment>(new Action<Investment>(this.attach_Investments), new Action<Investment>(this.detach_Investments));
			this._AccountType = default(EntityRef<AccountType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MemberId
		{
			get
			{
				return this._MemberId;
			}
			set
			{
				if ((this._MemberId != value))
				{
					this.OnMemberIdChanging(value);
					this.SendPropertyChanging();
					this._MemberId = value;
					this.SendPropertyChanged("MemberId");
					this.OnMemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberFirstName", DbType="NVarChar(150)")]
		public string MemberFirstName
		{
			get
			{
				return this._MemberFirstName;
			}
			set
			{
				if ((this._MemberFirstName != value))
				{
					this.OnMemberFirstNameChanging(value);
					this.SendPropertyChanging();
					this._MemberFirstName = value;
					this.SendPropertyChanged("MemberFirstName");
					this.OnMemberFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberLastName", DbType="NVarChar(150)")]
		public string MemberLastName
		{
			get
			{
				return this._MemberLastName;
			}
			set
			{
				if ((this._MemberLastName != value))
				{
					this.OnMemberLastNameChanging(value);
					this.SendPropertyChanging();
					this._MemberLastName = value;
					this.SendPropertyChanged("MemberLastName");
					this.OnMemberLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberPhoto", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary MemberPhoto
		{
			get
			{
				return this._MemberPhoto;
			}
			set
			{
				if ((this._MemberPhoto != value))
				{
					this.OnMemberPhotoChanging(value);
					this.SendPropertyChanging();
					this._MemberPhoto = value;
					this.SendPropertyChanged("MemberPhoto");
					this.OnMemberPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Money")]
		public System.Nullable<decimal> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberBranch", DbType="NVarChar(50)")]
		public string MemberBranch
		{
			get
			{
				return this._MemberBranch;
			}
			set
			{
				if ((this._MemberBranch != value))
				{
					this.OnMemberBranchChanging(value);
					this.SendPropertyChanging();
					this._MemberBranch = value;
					this.SendPropertyChanged("MemberBranch");
					this.OnMemberBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(50)")]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentLoanId", DbType="Int")]
		public System.Nullable<int> CurrentLoanId
		{
			get
			{
				return this._CurrentLoanId;
			}
			set
			{
				if ((this._CurrentLoanId != value))
				{
					this.OnCurrentLoanIdChanging(value);
					this.SendPropertyChanging();
					this._CurrentLoanId = value;
					this.SendPropertyChanged("CurrentLoanId");
					this.OnCurrentLoanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(20)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(20)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(600)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidentialAddress", DbType="NVarChar(100)")]
		public string ResidentialAddress
		{
			get
			{
				return this._ResidentialAddress;
			}
			set
			{
				if ((this._ResidentialAddress != value))
				{
					this.OnResidentialAddressChanging(value);
					this.SendPropertyChanging();
					this._ResidentialAddress = value;
					this.SendPropertyChanged("ResidentialAddress");
					this.OnResidentialAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessAddress", DbType="NVarChar(100)")]
		public string BusinessAddress
		{
			get
			{
				return this._BusinessAddress;
			}
			set
			{
				if ((this._BusinessAddress != value))
				{
					this.OnBusinessAddressChanging(value);
					this.SendPropertyChanging();
					this._BusinessAddress = value;
					this.SendPropertyChanged("BusinessAddress");
					this.OnBusinessAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(10)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherName", DbType="NVarChar(50)")]
		public string OtherName
		{
			get
			{
				return this._OtherName;
			}
			set
			{
				if ((this._OtherName != value))
				{
					this.OnOtherNameChanging(value);
					this.SendPropertyChanging();
					this._OtherName = value;
					this.SendPropertyChanged("OtherName");
					this.OnOtherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPerson", DbType="NVarChar(100)")]
		public string ContactPerson
		{
			get
			{
				return this._ContactPerson;
			}
			set
			{
				if ((this._ContactPerson != value))
				{
					this.OnContactPersonChanging(value);
					this.SendPropertyChanging();
					this._ContactPerson = value;
					this.SendPropertyChanged("ContactPerson");
					this.OnContactPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityTypeID", DbType="Int")]
		public System.Nullable<int> IdentityTypeID
		{
			get
			{
				return this._IdentityTypeID;
			}
			set
			{
				if ((this._IdentityTypeID != value))
				{
					this.OnIdentityTypeIDChanging(value);
					this.SendPropertyChanging();
					this._IdentityTypeID = value;
					this.SendPropertyChanged("IdentityTypeID");
					this.OnIdentityTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityNumber", DbType="NVarChar(50)")]
		public string IdentityNumber
		{
			get
			{
				return this._IdentityNumber;
			}
			set
			{
				if ((this._IdentityNumber != value))
				{
					this.OnIdentityNumberChanging(value);
					this.SendPropertyChanging();
					this._IdentityNumber = value;
					this.SendPropertyChanged("IdentityNumber");
					this.OnIdentityNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="NVarChar(50)")]
		public string Mobile
		{
			get
			{
				return this._Mobile;
			}
			set
			{
				if ((this._Mobile != value))
				{
					this.OnMobileChanging(value);
					this.SendPropertyChanging();
					this._Mobile = value;
					this.SendPropertyChanged("Mobile");
					this.OnMobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Signature", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Signature
		{
			get
			{
				return this._Signature;
			}
			set
			{
				if ((this._Signature != value))
				{
					this.OnSignatureChanging(value);
					this.SendPropertyChanging();
					this._Signature = value;
					this.SendPropertyChanged("Signature");
					this.OnSignatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPhoto", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary IDPhoto
		{
			get
			{
				return this._IDPhoto;
			}
			set
			{
				if ((this._IDPhoto != value))
				{
					this.OnIDPhotoChanging(value);
					this.SendPropertyChanging();
					this._IDPhoto = value;
					this.SendPropertyChanged("IDPhoto");
					this.OnIDPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OccupationID", DbType="Int")]
		public System.Nullable<int> OccupationID
		{
			get
			{
				return this._OccupationID;
			}
			set
			{
				if ((this._OccupationID != value))
				{
					this.OnOccupationIDChanging(value);
					this.SendPropertyChanging();
					this._OccupationID = value;
					this.SendPropertyChanged("OccupationID");
					this.OnOccupationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPersonPhone", DbType="NVarChar(50)")]
		public string ContactPersonPhone
		{
			get
			{
				return this._ContactPersonPhone;
			}
			set
			{
				if ((this._ContactPersonPhone != value))
				{
					this.OnContactPersonPhoneChanging(value);
					this.SendPropertyChanging();
					this._ContactPersonPhone = value;
					this.SendPropertyChanged("ContactPersonPhone");
					this.OnContactPersonPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextOfKin", DbType="NVarChar(100)")]
		public string NextOfKin
		{
			get
			{
				return this._NextOfKin;
			}
			set
			{
				if ((this._NextOfKin != value))
				{
					this.OnNextOfKinChanging(value);
					this.SendPropertyChanging();
					this._NextOfKin = value;
					this.SendPropertyChanged("NextOfKin");
					this.OnNextOfKinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextOfKinTelephone", DbType="NVarChar(50)")]
		public string NextOfKinTelephone
		{
			get
			{
				return this._NextOfKinTelephone;
			}
			set
			{
				if ((this._NextOfKinTelephone != value))
				{
					this.OnNextOfKinTelephoneChanging(value);
					this.SendPropertyChanging();
					this._NextOfKinTelephone = value;
					this.SendPropertyChanged("NextOfKinTelephone");
					this.OnNextOfKinTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountTypeID", DbType="Int")]
		public System.Nullable<int> AccountTypeID
		{
			get
			{
				return this._AccountTypeID;
			}
			set
			{
				if ((this._AccountTypeID != value))
				{
					if (this._AccountType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountTypeIDChanging(value);
					this.SendPropertyChanging();
					this._AccountTypeID = value;
					this.SendPropertyChanged("AccountTypeID");
					this.OnAccountTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int")]
		public System.Nullable<int> BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_RepaymentSchedule", Storage="_RepaymentSchedules", ThisKey="MemberId", OtherKey="MemberID")]
		public EntitySet<RepaymentSchedule> RepaymentSchedules
		{
			get
			{
				return this._RepaymentSchedules;
			}
			set
			{
				this._RepaymentSchedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_GroupMember", Storage="_GroupMembers", ThisKey="MemberId", OtherKey="MemberID")]
		public EntitySet<GroupMember> GroupMembers
		{
			get
			{
				return this._GroupMembers;
			}
			set
			{
				this._GroupMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_MemberDeposit", Storage="_MemberDeposits", ThisKey="MemberId", OtherKey="MemberId")]
		public EntitySet<MemberDeposit> MemberDeposits
		{
			get
			{
				return this._MemberDeposits;
			}
			set
			{
				this._MemberDeposits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_MobileBankerCustomer", Storage="_MobileBankerCustomers", ThisKey="MemberId", OtherKey="MemberId")]
		public EntitySet<MobileBankerCustomer> MobileBankerCustomers
		{
			get
			{
				return this._MobileBankerCustomers;
			}
			set
			{
				this._MobileBankerCustomers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_MemberWithdrawal", Storage="_MemberWithdrawals", ThisKey="MemberId", OtherKey="MemberId")]
		public EntitySet<MemberWithdrawal> MemberWithdrawals
		{
			get
			{
				return this._MemberWithdrawals;
			}
			set
			{
				this._MemberWithdrawals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Loan", Storage="_Loans", ThisKey="MemberId", OtherKey="MemberId")]
		public EntitySet<Loan> Loans
		{
			get
			{
				return this._Loans;
			}
			set
			{
				this._Loans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Investment", Storage="_Investments", ThisKey="MemberId", OtherKey="MemberID")]
		public EntitySet<Investment> Investments
		{
			get
			{
				return this._Investments;
			}
			set
			{
				this._Investments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccountType_Member", Storage="_AccountType", ThisKey="AccountTypeID", OtherKey="AccountTypeId", IsForeignKey=true)]
		public AccountType AccountType
		{
			get
			{
				return this._AccountType.Entity;
			}
			set
			{
				AccountType previousValue = this._AccountType.Entity;
				if (((previousValue != value) 
							|| (this._AccountType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountType.Entity = null;
						previousValue.Members.Remove(this);
					}
					this._AccountType.Entity = value;
					if ((value != null))
					{
						value.Members.Add(this);
						this._AccountTypeID = value.AccountTypeId;
					}
					else
					{
						this._AccountTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AccountType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RepaymentSchedules(RepaymentSchedule entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_RepaymentSchedules(RepaymentSchedule entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_GroupMembers(GroupMember entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_GroupMembers(GroupMember entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_MemberDeposits(MemberDeposit entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_MemberDeposits(MemberDeposit entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_MobileBankerCustomers(MobileBankerCustomer entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_MobileBankerCustomers(MobileBankerCustomer entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_MemberWithdrawals(MemberWithdrawal entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_MemberWithdrawals(MemberWithdrawal entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_Loans(Loan entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_Loans(Loan entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_Investments(Investment entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_Investments(Investment entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountTypes")]
	public partial class AccountType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountTypeId;
		
		private string _Description;
		
		private System.Nullable<decimal> _MinimumBalance;
		
		private System.Nullable<int> _DefaultInvestmentTypeID;
		
		private System.Nullable<int> _LastMemberID;
		
		private EntitySet<Member> _Members;
		
		private EntitySet<LoanGroup> _LoanGroups;
		
		private EntitySet<AccountTypeFeature> _AccountTypeFeatures;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountTypeIdChanging(int value);
    partial void OnAccountTypeIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMinimumBalanceChanging(System.Nullable<decimal> value);
    partial void OnMinimumBalanceChanged();
    partial void OnDefaultInvestmentTypeIDChanging(System.Nullable<int> value);
    partial void OnDefaultInvestmentTypeIDChanged();
    partial void OnLastMemberIDChanging(System.Nullable<int> value);
    partial void OnLastMemberIDChanged();
    #endregion
		
		public AccountType()
		{
			this._Members = new EntitySet<Member>(new Action<Member>(this.attach_Members), new Action<Member>(this.detach_Members));
			this._LoanGroups = new EntitySet<LoanGroup>(new Action<LoanGroup>(this.attach_LoanGroups), new Action<LoanGroup>(this.detach_LoanGroups));
			this._AccountTypeFeatures = new EntitySet<AccountTypeFeature>(new Action<AccountTypeFeature>(this.attach_AccountTypeFeatures), new Action<AccountTypeFeature>(this.detach_AccountTypeFeatures));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountTypeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccountTypeId
		{
			get
			{
				return this._AccountTypeId;
			}
			set
			{
				if ((this._AccountTypeId != value))
				{
					this.OnAccountTypeIdChanging(value);
					this.SendPropertyChanging();
					this._AccountTypeId = value;
					this.SendPropertyChanged("AccountTypeId");
					this.OnAccountTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinimumBalance", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MinimumBalance
		{
			get
			{
				return this._MinimumBalance;
			}
			set
			{
				if ((this._MinimumBalance != value))
				{
					this.OnMinimumBalanceChanging(value);
					this.SendPropertyChanging();
					this._MinimumBalance = value;
					this.SendPropertyChanged("MinimumBalance");
					this.OnMinimumBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultInvestmentTypeID", DbType="Int")]
		public System.Nullable<int> DefaultInvestmentTypeID
		{
			get
			{
				return this._DefaultInvestmentTypeID;
			}
			set
			{
				if ((this._DefaultInvestmentTypeID != value))
				{
					this.OnDefaultInvestmentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DefaultInvestmentTypeID = value;
					this.SendPropertyChanged("DefaultInvestmentTypeID");
					this.OnDefaultInvestmentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastMemberID", DbType="Int")]
		public System.Nullable<int> LastMemberID
		{
			get
			{
				return this._LastMemberID;
			}
			set
			{
				if ((this._LastMemberID != value))
				{
					this.OnLastMemberIDChanging(value);
					this.SendPropertyChanging();
					this._LastMemberID = value;
					this.SendPropertyChanged("LastMemberID");
					this.OnLastMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccountType_Member", Storage="_Members", ThisKey="AccountTypeId", OtherKey="AccountTypeID")]
		public EntitySet<Member> Members
		{
			get
			{
				return this._Members;
			}
			set
			{
				this._Members.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccountType_LoanGroup", Storage="_LoanGroups", ThisKey="AccountTypeId", OtherKey="AccountTypeId")]
		public EntitySet<LoanGroup> LoanGroups
		{
			get
			{
				return this._LoanGroups;
			}
			set
			{
				this._LoanGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccountType_AccountTypeFeature", Storage="_AccountTypeFeatures", ThisKey="AccountTypeId", OtherKey="AccountTypeID")]
		public EntitySet<AccountTypeFeature> AccountTypeFeatures
		{
			get
			{
				return this._AccountTypeFeatures;
			}
			set
			{
				this._AccountTypeFeatures.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Members(Member entity)
		{
			this.SendPropertyChanging();
			entity.AccountType = this;
		}
		
		private void detach_Members(Member entity)
		{
			this.SendPropertyChanging();
			entity.AccountType = null;
		}
		
		private void attach_LoanGroups(LoanGroup entity)
		{
			this.SendPropertyChanging();
			entity.AccountType = this;
		}
		
		private void detach_LoanGroups(LoanGroup entity)
		{
			this.SendPropertyChanging();
			entity.AccountType = null;
		}
		
		private void attach_AccountTypeFeatures(AccountTypeFeature entity)
		{
			this.SendPropertyChanging();
			entity.AccountType = this;
		}
		
		private void detach_AccountTypeFeatures(AccountTypeFeature entity)
		{
			this.SendPropertyChanging();
			entity.AccountType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Branches")]
	public partial class Branch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BranchID;
		
		private string _BranchName;
		
		private string _BranchCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBranchIDChanging(int value);
    partial void OnBranchIDChanged();
    partial void OnBranchNameChanging(string value);
    partial void OnBranchNameChanged();
    partial void OnBranchCodeChanging(string value);
    partial void OnBranchCodeChanged();
    #endregion
		
		public Branch()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchName", DbType="NVarChar(50)")]
		public string BranchName
		{
			get
			{
				return this._BranchName;
			}
			set
			{
				if ((this._BranchName != value))
				{
					this.OnBranchNameChanging(value);
					this.SendPropertyChanging();
					this._BranchName = value;
					this.SendPropertyChanged("BranchName");
					this.OnBranchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchCode", DbType="NVarChar(50)")]
		public string BranchCode
		{
			get
			{
				return this._BranchCode;
			}
			set
			{
				if ((this._BranchCode != value))
				{
					this.OnBranchCodeChanging(value);
					this.SendPropertyChanging();
					this._BranchCode = value;
					this.SendPropertyChanged("BranchCode");
					this.OnBranchCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoanGroups")]
	public partial class LoanGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GroupId;
		
		private string _GroupName;
		
		private string _Description;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _AccountNumber;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<int> _AccountTypeId;
		
		private System.Nullable<int> _BranchID;
		
		private EntitySet<GroupMember> _GroupMembers;
		
		private EntitySet<MobileBankerCustomer> _MobileBankerCustomers;
		
		private EntitySet<Investment> _Investments;
		
		private EntityRef<AccountType> _AccountType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGroupIdChanging(int value);
    partial void OnGroupIdChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnAccountTypeIdChanging(System.Nullable<int> value);
    partial void OnAccountTypeIdChanged();
    partial void OnBranchIDChanging(System.Nullable<int> value);
    partial void OnBranchIDChanged();
    #endregion
		
		public LoanGroup()
		{
			this._GroupMembers = new EntitySet<GroupMember>(new Action<GroupMember>(this.attach_GroupMembers), new Action<GroupMember>(this.detach_GroupMembers));
			this._MobileBankerCustomers = new EntitySet<MobileBankerCustomer>(new Action<MobileBankerCustomer>(this.attach_MobileBankerCustomers), new Action<MobileBankerCustomer>(this.detach_MobileBankerCustomers));
			this._Investments = new EntitySet<Investment>(new Action<Investment>(this.attach_Investments), new Action<Investment>(this.detach_Investments));
			this._AccountType = default(EntityRef<AccountType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="NVarChar(300)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(50)")]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountTypeId", DbType="Int")]
		public System.Nullable<int> AccountTypeId
		{
			get
			{
				return this._AccountTypeId;
			}
			set
			{
				if ((this._AccountTypeId != value))
				{
					if (this._AccountType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountTypeIdChanging(value);
					this.SendPropertyChanging();
					this._AccountTypeId = value;
					this.SendPropertyChanged("AccountTypeId");
					this.OnAccountTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="Int")]
		public System.Nullable<int> BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoanGroup_GroupMember", Storage="_GroupMembers", ThisKey="GroupId", OtherKey="GroupID")]
		public EntitySet<GroupMember> GroupMembers
		{
			get
			{
				return this._GroupMembers;
			}
			set
			{
				this._GroupMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoanGroup_MobileBankerCustomer", Storage="_MobileBankerCustomers", ThisKey="GroupId", OtherKey="GroupID")]
		public EntitySet<MobileBankerCustomer> MobileBankerCustomers
		{
			get
			{
				return this._MobileBankerCustomers;
			}
			set
			{
				this._MobileBankerCustomers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoanGroup_Investment", Storage="_Investments", ThisKey="GroupId", OtherKey="GroupId")]
		public EntitySet<Investment> Investments
		{
			get
			{
				return this._Investments;
			}
			set
			{
				this._Investments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccountType_LoanGroup", Storage="_AccountType", ThisKey="AccountTypeId", OtherKey="AccountTypeId", IsForeignKey=true)]
		public AccountType AccountType
		{
			get
			{
				return this._AccountType.Entity;
			}
			set
			{
				AccountType previousValue = this._AccountType.Entity;
				if (((previousValue != value) 
							|| (this._AccountType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountType.Entity = null;
						previousValue.LoanGroups.Remove(this);
					}
					this._AccountType.Entity = value;
					if ((value != null))
					{
						value.LoanGroups.Add(this);
						this._AccountTypeId = value.AccountTypeId;
					}
					else
					{
						this._AccountTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("AccountType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GroupMembers(GroupMember entity)
		{
			this.SendPropertyChanging();
			entity.LoanGroup = this;
		}
		
		private void detach_GroupMembers(GroupMember entity)
		{
			this.SendPropertyChanging();
			entity.LoanGroup = null;
		}
		
		private void attach_MobileBankerCustomers(MobileBankerCustomer entity)
		{
			this.SendPropertyChanging();
			entity.LoanGroup = this;
		}
		
		private void detach_MobileBankerCustomers(MobileBankerCustomer entity)
		{
			this.SendPropertyChanging();
			entity.LoanGroup = null;
		}
		
		private void attach_Investments(Investment entity)
		{
			this.SendPropertyChanging();
			entity.LoanGroup = this;
		}
		
		private void detach_Investments(Investment entity)
		{
			this.SendPropertyChanging();
			entity.LoanGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountFeatureFreqOfCalculation")]
	public partial class AccountFeatureFreqOfCalculation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountFeatureFreqOfCalculationID;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountFeatureFreqOfCalculationIDChanging(int value);
    partial void OnAccountFeatureFreqOfCalculationIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public AccountFeatureFreqOfCalculation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountFeatureFreqOfCalculationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AccountFeatureFreqOfCalculationID
		{
			get
			{
				return this._AccountFeatureFreqOfCalculationID;
			}
			set
			{
				if ((this._AccountFeatureFreqOfCalculationID != value))
				{
					this.OnAccountFeatureFreqOfCalculationIDChanging(value);
					this.SendPropertyChanging();
					this._AccountFeatureFreqOfCalculationID = value;
					this.SendPropertyChanged("AccountFeatureFreqOfCalculationID");
					this.OnAccountFeatureFreqOfCalculationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountTypeFeaturesCalculateOn")]
	public partial class AccountTypeFeaturesCalculateOn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountTypeFeaturesCalculateOnID;
		
		private System.Nullable<int> _code;
		
		private string _Description;
		
		private EntitySet<AccountTypeFeature> _AccountTypeFeatures;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountTypeFeaturesCalculateOnIDChanging(int value);
    partial void OnAccountTypeFeaturesCalculateOnIDChanged();
    partial void OncodeChanging(System.Nullable<int> value);
    partial void OncodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public AccountTypeFeaturesCalculateOn()
		{
			this._AccountTypeFeatures = new EntitySet<AccountTypeFeature>(new Action<AccountTypeFeature>(this.attach_AccountTypeFeatures), new Action<AccountTypeFeature>(this.detach_AccountTypeFeatures));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountTypeFeaturesCalculateOnID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AccountTypeFeaturesCalculateOnID
		{
			get
			{
				return this._AccountTypeFeaturesCalculateOnID;
			}
			set
			{
				if ((this._AccountTypeFeaturesCalculateOnID != value))
				{
					this.OnAccountTypeFeaturesCalculateOnIDChanging(value);
					this.SendPropertyChanging();
					this._AccountTypeFeaturesCalculateOnID = value;
					this.SendPropertyChanged("AccountTypeFeaturesCalculateOnID");
					this.OnAccountTypeFeaturesCalculateOnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="Int")]
		public System.Nullable<int> code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccountTypeFeaturesCalculateOn_AccountTypeFeature", Storage="_AccountTypeFeatures", ThisKey="AccountTypeFeaturesCalculateOnID", OtherKey="CalculateOn")]
		public EntitySet<AccountTypeFeature> AccountTypeFeatures
		{
			get
			{
				return this._AccountTypeFeatures;
			}
			set
			{
				this._AccountTypeFeatures.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AccountTypeFeatures(AccountTypeFeature entity)
		{
			this.SendPropertyChanging();
			entity.AccountTypeFeaturesCalculateOn = this;
		}
		
		private void detach_AccountTypeFeatures(AccountTypeFeature entity)
		{
			this.SendPropertyChanging();
			entity.AccountTypeFeaturesCalculateOn = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FailMessages")]
	public partial class FailMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Message;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _Actioin;
		
		private System.Nullable<int> _AppliedAccountTypeFeatureHistoryID;
		
		private System.Guid _FailMessageId;
		
		private EntityRef<AppliedFeatureHistory> _AppliedFeatureHistory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnActioinChanging(string value);
    partial void OnActioinChanged();
    partial void OnAppliedAccountTypeFeatureHistoryIDChanging(System.Nullable<int> value);
    partial void OnAppliedAccountTypeFeatureHistoryIDChanged();
    partial void OnFailMessageIdChanging(System.Guid value);
    partial void OnFailMessageIdChanged();
    #endregion
		
		public FailMessage()
		{
			this._AppliedFeatureHistory = default(EntityRef<AppliedFeatureHistory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Actioin", DbType="NVarChar(200)")]
		public string Actioin
		{
			get
			{
				return this._Actioin;
			}
			set
			{
				if ((this._Actioin != value))
				{
					this.OnActioinChanging(value);
					this.SendPropertyChanging();
					this._Actioin = value;
					this.SendPropertyChanged("Actioin");
					this.OnActioinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppliedAccountTypeFeatureHistoryID", DbType="Int")]
		public System.Nullable<int> AppliedAccountTypeFeatureHistoryID
		{
			get
			{
				return this._AppliedAccountTypeFeatureHistoryID;
			}
			set
			{
				if ((this._AppliedAccountTypeFeatureHistoryID != value))
				{
					if (this._AppliedFeatureHistory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAppliedAccountTypeFeatureHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._AppliedAccountTypeFeatureHistoryID = value;
					this.SendPropertyChanged("AppliedAccountTypeFeatureHistoryID");
					this.OnAppliedAccountTypeFeatureHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailMessageId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid FailMessageId
		{
			get
			{
				return this._FailMessageId;
			}
			set
			{
				if ((this._FailMessageId != value))
				{
					this.OnFailMessageIdChanging(value);
					this.SendPropertyChanging();
					this._FailMessageId = value;
					this.SendPropertyChanged("FailMessageId");
					this.OnFailMessageIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppliedFeatureHistory_FailMessage", Storage="_AppliedFeatureHistory", ThisKey="AppliedAccountTypeFeatureHistoryID", OtherKey="AppliedFeatureHistoryId", IsForeignKey=true, DeleteRule="CASCADE")]
		public AppliedFeatureHistory AppliedFeatureHistory
		{
			get
			{
				return this._AppliedFeatureHistory.Entity;
			}
			set
			{
				AppliedFeatureHistory previousValue = this._AppliedFeatureHistory.Entity;
				if (((previousValue != value) 
							|| (this._AppliedFeatureHistory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AppliedFeatureHistory.Entity = null;
						previousValue.FailMessages.Remove(this);
					}
					this._AppliedFeatureHistory.Entity = value;
					if ((value != null))
					{
						value.FailMessages.Add(this);
						this._AppliedAccountTypeFeatureHistoryID = value.AppliedFeatureHistoryId;
					}
					else
					{
						this._AppliedAccountTypeFeatureHistoryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AppliedFeatureHistory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MobileBankers")]
	public partial class MobileBanker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MobileBankerid;
		
		private string _FirstName;
		
		private string _OtherName;
		
		private string _LastName;
		
		private string _Telephone;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _ModifiedBy;
		
		private string _MobileBankerCode;
		
		private string _Address;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Data.Linq.Binary _Photo;
		
		private EntitySet<MobileBankerCustomer> _MobileBankerCustomers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMobileBankeridChanging(int value);
    partial void OnMobileBankeridChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnOtherNameChanging(string value);
    partial void OnOtherNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnMobileBankerCodeChanging(string value);
    partial void OnMobileBankerCodeChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnPhotoChanging(System.Data.Linq.Binary value);
    partial void OnPhotoChanged();
    #endregion
		
		public MobileBanker()
		{
			this._MobileBankerCustomers = new EntitySet<MobileBankerCustomer>(new Action<MobileBankerCustomer>(this.attach_MobileBankerCustomers), new Action<MobileBankerCustomer>(this.detach_MobileBankerCustomers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileBankerid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MobileBankerid
		{
			get
			{
				return this._MobileBankerid;
			}
			set
			{
				if ((this._MobileBankerid != value))
				{
					this.OnMobileBankeridChanging(value);
					this.SendPropertyChanging();
					this._MobileBankerid = value;
					this.SendPropertyChanged("MobileBankerid");
					this.OnMobileBankeridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherName", DbType="NVarChar(100)")]
		public string OtherName
		{
			get
			{
				return this._OtherName;
			}
			set
			{
				if ((this._OtherName != value))
				{
					this.OnOtherNameChanging(value);
					this.SendPropertyChanging();
					this._OtherName = value;
					this.SendPropertyChanged("OtherName");
					this.OnOtherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(50)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileBankerCode", DbType="NVarChar(50)")]
		public string MobileBankerCode
		{
			get
			{
				return this._MobileBankerCode;
			}
			set
			{
				if ((this._MobileBankerCode != value))
				{
					this.OnMobileBankerCodeChanging(value);
					this.SendPropertyChanging();
					this._MobileBankerCode = value;
					this.SendPropertyChanged("MobileBankerCode");
					this.OnMobileBankerCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MobileBanker_MobileBankerCustomer", Storage="_MobileBankerCustomers", ThisKey="MobileBankerid", OtherKey="MobileBankerID")]
		public EntitySet<MobileBankerCustomer> MobileBankerCustomers
		{
			get
			{
				return this._MobileBankerCustomers;
			}
			set
			{
				this._MobileBankerCustomers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MobileBankerCustomers(MobileBankerCustomer entity)
		{
			this.SendPropertyChanging();
			entity.MobileBanker = this;
		}
		
		private void detach_MobileBankerCustomers(MobileBankerCustomer entity)
		{
			this.SendPropertyChanging();
			entity.MobileBanker = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoanCollateralDocument")]
	public partial class LoanCollateralDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoanCollateralDocumentId;
		
		private string _DocumentName;
		
		private System.Data.Linq.Binary _DocumentContent;
		
		private string _FileExtension;
		
		private System.Nullable<int> _LoanId;
		
		private EntityRef<Loan> _Loan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoanCollateralDocumentIdChanging(int value);
    partial void OnLoanCollateralDocumentIdChanged();
    partial void OnDocumentNameChanging(string value);
    partial void OnDocumentNameChanged();
    partial void OnDocumentContentChanging(System.Data.Linq.Binary value);
    partial void OnDocumentContentChanged();
    partial void OnFileExtensionChanging(string value);
    partial void OnFileExtensionChanged();
    partial void OnLoanIdChanging(System.Nullable<int> value);
    partial void OnLoanIdChanged();
    #endregion
		
		public LoanCollateralDocument()
		{
			this._Loan = default(EntityRef<Loan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanCollateralDocumentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoanCollateralDocumentId
		{
			get
			{
				return this._LoanCollateralDocumentId;
			}
			set
			{
				if ((this._LoanCollateralDocumentId != value))
				{
					this.OnLoanCollateralDocumentIdChanging(value);
					this.SendPropertyChanging();
					this._LoanCollateralDocumentId = value;
					this.SendPropertyChanged("LoanCollateralDocumentId");
					this.OnLoanCollateralDocumentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentName", DbType="NVarChar(50)")]
		public string DocumentName
		{
			get
			{
				return this._DocumentName;
			}
			set
			{
				if ((this._DocumentName != value))
				{
					this.OnDocumentNameChanging(value);
					this.SendPropertyChanging();
					this._DocumentName = value;
					this.SendPropertyChanged("DocumentName");
					this.OnDocumentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentContent", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary DocumentContent
		{
			get
			{
				return this._DocumentContent;
			}
			set
			{
				if ((this._DocumentContent != value))
				{
					this.OnDocumentContentChanging(value);
					this.SendPropertyChanging();
					this._DocumentContent = value;
					this.SendPropertyChanged("DocumentContent");
					this.OnDocumentContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileExtension", DbType="NVarChar(50)")]
		public string FileExtension
		{
			get
			{
				return this._FileExtension;
			}
			set
			{
				if ((this._FileExtension != value))
				{
					this.OnFileExtensionChanging(value);
					this.SendPropertyChanging();
					this._FileExtension = value;
					this.SendPropertyChanged("FileExtension");
					this.OnFileExtensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoanId", DbType="Int")]
		public System.Nullable<int> LoanId
		{
			get
			{
				return this._LoanId;
			}
			set
			{
				if ((this._LoanId != value))
				{
					if (this._Loan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoanIdChanging(value);
					this.SendPropertyChanging();
					this._LoanId = value;
					this.SendPropertyChanged("LoanId");
					this.OnLoanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loan_LoanCollateralDocument", Storage="_Loan", ThisKey="LoanId", OtherKey="LoanID", IsForeignKey=true)]
		public Loan Loan
		{
			get
			{
				return this._Loan.Entity;
			}
			set
			{
				Loan previousValue = this._Loan.Entity;
				if (((previousValue != value) 
							|| (this._Loan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Loan.Entity = null;
						previousValue.LoanCollateralDocuments.Remove(this);
					}
					this._Loan.Entity = value;
					if ((value != null))
					{
						value.LoanCollateralDocuments.Add(this);
						this._LoanId = value.LoanID;
					}
					else
					{
						this._LoanId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Loan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Investments")]
	public partial class Investment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InvestmentID;
		
		private System.Nullable<int> _MemberID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _CreatedBy;
		
		private System.Nullable<decimal> _InsterstRate;
		
		private System.Nullable<decimal> _InvestmentAmount;
		
		private System.Nullable<decimal> _Duration;
		
		private System.Nullable<decimal> _Balance;
		
		private System.Nullable<int> _GroupId;
		
		private System.Nullable<int> _ContributionFrequencyId;
		
		private System.Nullable<int> _InterestTypeId;
		
		private System.Nullable<System.DateTime> _MaturityDate;
		
		private System.Nullable<decimal> _ContributionFreqAmount;
		
		private System.Nullable<System.DateTime> _InvestmentCalculationStartDate;
		
		private System.Nullable<bool> _IsMatured;
		
		private System.Nullable<int> _DurationTypeId;
		
		private System.Nullable<decimal> _MaturedAmount;
		
		private System.Nullable<int> _InvestmentTypeId;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _ParentInvestmentID;
		
		private System.Nullable<int> _AccountTypeId;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _ModifiedBy;
		
		private System.Nullable<int> _InvestmentDescriptionId;
		
		private System.Nullable<int> _InterestDurationTypeID;
		
		private System.Nullable<bool> _IsDeleted;
		
		private EntitySet<ContributionSchedule> _ContributionSchedules;
		
		private EntitySet<Contribution> _Contributions;
		
		private EntitySet<MemberWithdrawal> _MemberWithdrawals;
		
		private EntitySet<AppliedInterest> _AppliedInterests;
		
		private EntitySet<AppliedDeduction> _AppliedDeductions;
		
		private EntityRef<InterestRateType> _InterestRateType;
		
		private EntityRef<LoanGroup> _LoanGroup;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInvestmentIDChanging(int value);
    partial void OnInvestmentIDChanged();
    partial void OnMemberIDChanging(System.Nullable<int> value);
    partial void OnMemberIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnInsterstRateChanging(System.Nullable<decimal> value);
    partial void OnInsterstRateChanged();
    partial void OnInvestmentAmountChanging(System.Nullable<decimal> value);
    partial void OnInvestmentAmountChanged();
    partial void OnDurationChanging(System.Nullable<decimal> value);
    partial void OnDurationChanged();
    partial void OnBalanceChanging(System.Nullable<decimal> value);
    partial void OnBalanceChanged();
    partial void OnGroupIdChanging(System.Nullable<int> value);
    partial void OnGroupIdChanged();
    partial void OnContributionFrequencyIdChanging(System.Nullable<int> value);
    partial void OnContributionFrequencyIdChanged();
    partial void OnInterestTypeIdChanging(System.Nullable<int> value);
    partial void OnInterestTypeIdChanged();
    partial void OnMaturityDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMaturityDateChanged();
    partial void OnContributionFreqAmountChanging(System.Nullable<decimal> value);
    partial void OnContributionFreqAmountChanged();
    partial void OnInvestmentCalculationStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInvestmentCalculationStartDateChanged();
    partial void OnIsMaturedChanging(System.Nullable<bool> value);
    partial void OnIsMaturedChanged();
    partial void OnDurationTypeIdChanging(System.Nullable<int> value);
    partial void OnDurationTypeIdChanged();
    partial void OnMaturedAmountChanging(System.Nullable<decimal> value);
    partial void OnMaturedAmountChanged();
    partial void OnInvestmentTypeIdChanging(System.Nullable<int> value);
    partial void OnInvestmentTypeIdChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnParentInvestmentIDChanging(System.Nullable<int> value);
    partial void OnParentInvestmentIDChanged();
    partial void OnAccountTypeIdChanging(System.Nullable<int> value);
    partial void OnAccountTypeIdChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnInvestmentDescriptionIdChanging(System.Nullable<int> value);
    partial void OnInvestmentDescriptionIdChanged();
    partial void OnInterestDurationTypeIDChanging(System.Nullable<int> value);
    partial void OnInterestDurationTypeIDChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    #endregion
		
		public Investment()
		{
			this._ContributionSchedules = new EntitySet<ContributionSchedule>(new Action<ContributionSchedule>(this.attach_ContributionSchedules), new Action<ContributionSchedule>(this.detach_ContributionSchedules));
			this._Contributions = new EntitySet<Contribution>(new Action<Contribution>(this.attach_Contributions), new Action<Contribution>(this.detach_Contributions));
			this._MemberWithdrawals = new EntitySet<MemberWithdrawal>(new Action<MemberWithdrawal>(this.attach_MemberWithdrawals), new Action<MemberWithdrawal>(this.detach_MemberWithdrawals));
			this._AppliedInterests = new EntitySet<AppliedInterest>(new Action<AppliedInterest>(this.attach_AppliedInterests), new Action<AppliedInterest>(this.detach_AppliedInterests));
			this._AppliedDeductions = new EntitySet<AppliedDeduction>(new Action<AppliedDeduction>(this.attach_AppliedDeductions), new Action<AppliedDeduction>(this.detach_AppliedDeductions));
			this._InterestRateType = default(EntityRef<InterestRateType>);
			this._LoanGroup = default(EntityRef<LoanGroup>);
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InvestmentID
		{
			get
			{
				return this._InvestmentID;
			}
			set
			{
				if ((this._InvestmentID != value))
				{
					this.OnInvestmentIDChanging(value);
					this.SendPropertyChanging();
					this._InvestmentID = value;
					this.SendPropertyChanged("InvestmentID");
					this.OnInvestmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="Int")]
		public System.Nullable<int> MemberID
		{
			get
			{
				return this._MemberID;
			}
			set
			{
				if ((this._MemberID != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberIDChanging(value);
					this.SendPropertyChanging();
					this._MemberID = value;
					this.SendPropertyChanged("MemberID");
					this.OnMemberIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsterstRate", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> InsterstRate
		{
			get
			{
				return this._InsterstRate;
			}
			set
			{
				if ((this._InsterstRate != value))
				{
					this.OnInsterstRateChanging(value);
					this.SendPropertyChanging();
					this._InsterstRate = value;
					this.SendPropertyChanged("InsterstRate");
					this.OnInsterstRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentAmount", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> InvestmentAmount
		{
			get
			{
				return this._InvestmentAmount;
			}
			set
			{
				if ((this._InvestmentAmount != value))
				{
					this.OnInvestmentAmountChanging(value);
					this.SendPropertyChanging();
					this._InvestmentAmount = value;
					this.SendPropertyChanged("InvestmentAmount");
					this.OnInvestmentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this.OnBalanceChanging(value);
					this.SendPropertyChanging();
					this._Balance = value;
					this.SendPropertyChanged("Balance");
					this.OnBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int")]
		public System.Nullable<int> GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					if (this._LoanGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContributionFrequencyId", DbType="Int")]
		public System.Nullable<int> ContributionFrequencyId
		{
			get
			{
				return this._ContributionFrequencyId;
			}
			set
			{
				if ((this._ContributionFrequencyId != value))
				{
					this.OnContributionFrequencyIdChanging(value);
					this.SendPropertyChanging();
					this._ContributionFrequencyId = value;
					this.SendPropertyChanged("ContributionFrequencyId");
					this.OnContributionFrequencyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestTypeId", DbType="Int")]
		public System.Nullable<int> InterestTypeId
		{
			get
			{
				return this._InterestTypeId;
			}
			set
			{
				if ((this._InterestTypeId != value))
				{
					if (this._InterestRateType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInterestTypeIdChanging(value);
					this.SendPropertyChanging();
					this._InterestTypeId = value;
					this.SendPropertyChanged("InterestTypeId");
					this.OnInterestTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaturityDate", DbType="Date")]
		public System.Nullable<System.DateTime> MaturityDate
		{
			get
			{
				return this._MaturityDate;
			}
			set
			{
				if ((this._MaturityDate != value))
				{
					this.OnMaturityDateChanging(value);
					this.SendPropertyChanging();
					this._MaturityDate = value;
					this.SendPropertyChanged("MaturityDate");
					this.OnMaturityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContributionFreqAmount", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> ContributionFreqAmount
		{
			get
			{
				return this._ContributionFreqAmount;
			}
			set
			{
				if ((this._ContributionFreqAmount != value))
				{
					this.OnContributionFreqAmountChanging(value);
					this.SendPropertyChanging();
					this._ContributionFreqAmount = value;
					this.SendPropertyChanged("ContributionFreqAmount");
					this.OnContributionFreqAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentCalculationStartDate", DbType="Date")]
		public System.Nullable<System.DateTime> InvestmentCalculationStartDate
		{
			get
			{
				return this._InvestmentCalculationStartDate;
			}
			set
			{
				if ((this._InvestmentCalculationStartDate != value))
				{
					this.OnInvestmentCalculationStartDateChanging(value);
					this.SendPropertyChanging();
					this._InvestmentCalculationStartDate = value;
					this.SendPropertyChanged("InvestmentCalculationStartDate");
					this.OnInvestmentCalculationStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMatured", DbType="Bit")]
		public System.Nullable<bool> IsMatured
		{
			get
			{
				return this._IsMatured;
			}
			set
			{
				if ((this._IsMatured != value))
				{
					this.OnIsMaturedChanging(value);
					this.SendPropertyChanging();
					this._IsMatured = value;
					this.SendPropertyChanged("IsMatured");
					this.OnIsMaturedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DurationTypeId", DbType="Int")]
		public System.Nullable<int> DurationTypeId
		{
			get
			{
				return this._DurationTypeId;
			}
			set
			{
				if ((this._DurationTypeId != value))
				{
					this.OnDurationTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DurationTypeId = value;
					this.SendPropertyChanged("DurationTypeId");
					this.OnDurationTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaturedAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MaturedAmount
		{
			get
			{
				return this._MaturedAmount;
			}
			set
			{
				if ((this._MaturedAmount != value))
				{
					this.OnMaturedAmountChanging(value);
					this.SendPropertyChanging();
					this._MaturedAmount = value;
					this.SendPropertyChanged("MaturedAmount");
					this.OnMaturedAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentTypeId", DbType="Int")]
		public System.Nullable<int> InvestmentTypeId
		{
			get
			{
				return this._InvestmentTypeId;
			}
			set
			{
				if ((this._InvestmentTypeId != value))
				{
					this.OnInvestmentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._InvestmentTypeId = value;
					this.SendPropertyChanged("InvestmentTypeId");
					this.OnInvestmentTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentInvestmentID", DbType="Int")]
		public System.Nullable<int> ParentInvestmentID
		{
			get
			{
				return this._ParentInvestmentID;
			}
			set
			{
				if ((this._ParentInvestmentID != value))
				{
					this.OnParentInvestmentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentInvestmentID = value;
					this.SendPropertyChanged("ParentInvestmentID");
					this.OnParentInvestmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountTypeId", DbType="Int")]
		public System.Nullable<int> AccountTypeId
		{
			get
			{
				return this._AccountTypeId;
			}
			set
			{
				if ((this._AccountTypeId != value))
				{
					this.OnAccountTypeIdChanging(value);
					this.SendPropertyChanging();
					this._AccountTypeId = value;
					this.SendPropertyChanged("AccountTypeId");
					this.OnAccountTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentDescriptionId", DbType="Int")]
		public System.Nullable<int> InvestmentDescriptionId
		{
			get
			{
				return this._InvestmentDescriptionId;
			}
			set
			{
				if ((this._InvestmentDescriptionId != value))
				{
					this.OnInvestmentDescriptionIdChanging(value);
					this.SendPropertyChanging();
					this._InvestmentDescriptionId = value;
					this.SendPropertyChanged("InvestmentDescriptionId");
					this.OnInvestmentDescriptionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestDurationTypeID", DbType="Int")]
		public System.Nullable<int> InterestDurationTypeID
		{
			get
			{
				return this._InterestDurationTypeID;
			}
			set
			{
				if ((this._InterestDurationTypeID != value))
				{
					this.OnInterestDurationTypeIDChanging(value);
					this.SendPropertyChanging();
					this._InterestDurationTypeID = value;
					this.SendPropertyChanged("InterestDurationTypeID");
					this.OnInterestDurationTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Investment_ContributionSchedule", Storage="_ContributionSchedules", ThisKey="InvestmentID", OtherKey="InvestmentId")]
		public EntitySet<ContributionSchedule> ContributionSchedules
		{
			get
			{
				return this._ContributionSchedules;
			}
			set
			{
				this._ContributionSchedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Investment_Contribution", Storage="_Contributions", ThisKey="InvestmentID", OtherKey="InvestmentId")]
		public EntitySet<Contribution> Contributions
		{
			get
			{
				return this._Contributions;
			}
			set
			{
				this._Contributions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Investment_MemberWithdrawal", Storage="_MemberWithdrawals", ThisKey="InvestmentID", OtherKey="InvestmentID")]
		public EntitySet<MemberWithdrawal> MemberWithdrawals
		{
			get
			{
				return this._MemberWithdrawals;
			}
			set
			{
				this._MemberWithdrawals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Investment_AppliedInterest", Storage="_AppliedInterests", ThisKey="InvestmentID", OtherKey="InvestmentID")]
		public EntitySet<AppliedInterest> AppliedInterests
		{
			get
			{
				return this._AppliedInterests;
			}
			set
			{
				this._AppliedInterests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Investment_AppliedDeduction", Storage="_AppliedDeductions", ThisKey="InvestmentID", OtherKey="InvestmentID")]
		public EntitySet<AppliedDeduction> AppliedDeductions
		{
			get
			{
				return this._AppliedDeductions;
			}
			set
			{
				this._AppliedDeductions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InterestRateType_Investment", Storage="_InterestRateType", ThisKey="InterestTypeId", OtherKey="InterestRateTypeId", IsForeignKey=true)]
		public InterestRateType InterestRateType
		{
			get
			{
				return this._InterestRateType.Entity;
			}
			set
			{
				InterestRateType previousValue = this._InterestRateType.Entity;
				if (((previousValue != value) 
							|| (this._InterestRateType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InterestRateType.Entity = null;
						previousValue.Investments.Remove(this);
					}
					this._InterestRateType.Entity = value;
					if ((value != null))
					{
						value.Investments.Add(this);
						this._InterestTypeId = value.InterestRateTypeId;
					}
					else
					{
						this._InterestTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("InterestRateType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoanGroup_Investment", Storage="_LoanGroup", ThisKey="GroupId", OtherKey="GroupId", IsForeignKey=true, DeleteRule="CASCADE")]
		public LoanGroup LoanGroup
		{
			get
			{
				return this._LoanGroup.Entity;
			}
			set
			{
				LoanGroup previousValue = this._LoanGroup.Entity;
				if (((previousValue != value) 
							|| (this._LoanGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoanGroup.Entity = null;
						previousValue.Investments.Remove(this);
					}
					this._LoanGroup.Entity = value;
					if ((value != null))
					{
						value.Investments.Add(this);
						this._GroupId = value.GroupId;
					}
					else
					{
						this._GroupId = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoanGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Investment", Storage="_Member", ThisKey="MemberID", OtherKey="MemberId", IsForeignKey=true, DeleteRule="CASCADE")]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Investments.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Investments.Add(this);
						this._MemberID = value.MemberId;
					}
					else
					{
						this._MemberID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContributionSchedules(ContributionSchedule entity)
		{
			this.SendPropertyChanging();
			entity.Investment = this;
		}
		
		private void detach_ContributionSchedules(ContributionSchedule entity)
		{
			this.SendPropertyChanging();
			entity.Investment = null;
		}
		
		private void attach_Contributions(Contribution entity)
		{
			this.SendPropertyChanging();
			entity.Investment = this;
		}
		
		private void detach_Contributions(Contribution entity)
		{
			this.SendPropertyChanging();
			entity.Investment = null;
		}
		
		private void attach_MemberWithdrawals(MemberWithdrawal entity)
		{
			this.SendPropertyChanging();
			entity.Investment = this;
		}
		
		private void detach_MemberWithdrawals(MemberWithdrawal entity)
		{
			this.SendPropertyChanging();
			entity.Investment = null;
		}
		
		private void attach_AppliedInterests(AppliedInterest entity)
		{
			this.SendPropertyChanging();
			entity.Investment = this;
		}
		
		private void detach_AppliedInterests(AppliedInterest entity)
		{
			this.SendPropertyChanging();
			entity.Investment = null;
		}
		
		private void attach_AppliedDeductions(AppliedDeduction entity)
		{
			this.SendPropertyChanging();
			entity.Investment = this;
		}
		
		private void detach_AppliedDeductions(AppliedDeduction entity)
		{
			this.SendPropertyChanging();
			entity.Investment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountTypeFeatures")]
	public partial class AccountTypeFeature : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountFeatureID;
		
		private System.Nullable<int> _AccountTypeID;
		
		private System.Nullable<bool> _IsDeduction;
		
		private System.Nullable<bool> _IsPercentage;
		
		private System.Nullable<int> _CalculateOn;
		
		private System.Nullable<decimal> _ValueToApply;
		
		private System.Nullable<int> _CalculationFrequencyID;
		
		private System.Nullable<int> _MonthlyCalculationDay;
		
		private System.Nullable<int> _AnnualCalculationMonth;
		
		private System.Nullable<int> _AnnualCalculationDay;
		
		private System.Nullable<bool> _HasCustomCalculationFrequency;
		
		private System.Nullable<int> _CustomCalculationFreqNumberOfDays;
		
		private System.Nullable<bool> _RunByEndOfFay;
		
		private string _FeatureDescription;
		
		private EntitySet<AppliedAccountFeature> _AppliedAccountFeatures;
		
		private EntitySet<AppliedFeatureHistory> _AppliedFeatureHistories;
		
		private EntityRef<AccountTypeFeaturesCalculateOn> _AccountTypeFeaturesCalculateOn;
		
		private EntityRef<AccountType> _AccountType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountFeatureIDChanging(int value);
    partial void OnAccountFeatureIDChanged();
    partial void OnAccountTypeIDChanging(System.Nullable<int> value);
    partial void OnAccountTypeIDChanged();
    partial void OnIsDeductionChanging(System.Nullable<bool> value);
    partial void OnIsDeductionChanged();
    partial void OnIsPercentageChanging(System.Nullable<bool> value);
    partial void OnIsPercentageChanged();
    partial void OnCalculateOnChanging(System.Nullable<int> value);
    partial void OnCalculateOnChanged();
    partial void OnValueToApplyChanging(System.Nullable<decimal> value);
    partial void OnValueToApplyChanged();
    partial void OnCalculationFrequencyIDChanging(System.Nullable<int> value);
    partial void OnCalculationFrequencyIDChanged();
    partial void OnMonthlyCalculationDayChanging(System.Nullable<int> value);
    partial void OnMonthlyCalculationDayChanged();
    partial void OnAnnualCalculationMonthChanging(System.Nullable<int> value);
    partial void OnAnnualCalculationMonthChanged();
    partial void OnAnnualCalculationDayChanging(System.Nullable<int> value);
    partial void OnAnnualCalculationDayChanged();
    partial void OnHasCustomCalculationFrequencyChanging(System.Nullable<bool> value);
    partial void OnHasCustomCalculationFrequencyChanged();
    partial void OnCustomCalculationFreqNumberOfDaysChanging(System.Nullable<int> value);
    partial void OnCustomCalculationFreqNumberOfDaysChanged();
    partial void OnRunByEndOfFayChanging(System.Nullable<bool> value);
    partial void OnRunByEndOfFayChanged();
    partial void OnFeatureDescriptionChanging(string value);
    partial void OnFeatureDescriptionChanged();
    #endregion
		
		public AccountTypeFeature()
		{
			this._AppliedAccountFeatures = new EntitySet<AppliedAccountFeature>(new Action<AppliedAccountFeature>(this.attach_AppliedAccountFeatures), new Action<AppliedAccountFeature>(this.detach_AppliedAccountFeatures));
			this._AppliedFeatureHistories = new EntitySet<AppliedFeatureHistory>(new Action<AppliedFeatureHistory>(this.attach_AppliedFeatureHistories), new Action<AppliedFeatureHistory>(this.detach_AppliedFeatureHistories));
			this._AccountTypeFeaturesCalculateOn = default(EntityRef<AccountTypeFeaturesCalculateOn>);
			this._AccountType = default(EntityRef<AccountType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountFeatureID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccountFeatureID
		{
			get
			{
				return this._AccountFeatureID;
			}
			set
			{
				if ((this._AccountFeatureID != value))
				{
					this.OnAccountFeatureIDChanging(value);
					this.SendPropertyChanging();
					this._AccountFeatureID = value;
					this.SendPropertyChanged("AccountFeatureID");
					this.OnAccountFeatureIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountTypeID", DbType="Int")]
		public System.Nullable<int> AccountTypeID
		{
			get
			{
				return this._AccountTypeID;
			}
			set
			{
				if ((this._AccountTypeID != value))
				{
					if (this._AccountType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountTypeIDChanging(value);
					this.SendPropertyChanging();
					this._AccountTypeID = value;
					this.SendPropertyChanged("AccountTypeID");
					this.OnAccountTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeduction", DbType="Bit")]
		public System.Nullable<bool> IsDeduction
		{
			get
			{
				return this._IsDeduction;
			}
			set
			{
				if ((this._IsDeduction != value))
				{
					this.OnIsDeductionChanging(value);
					this.SendPropertyChanging();
					this._IsDeduction = value;
					this.SendPropertyChanged("IsDeduction");
					this.OnIsDeductionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPercentage", DbType="Bit")]
		public System.Nullable<bool> IsPercentage
		{
			get
			{
				return this._IsPercentage;
			}
			set
			{
				if ((this._IsPercentage != value))
				{
					this.OnIsPercentageChanging(value);
					this.SendPropertyChanging();
					this._IsPercentage = value;
					this.SendPropertyChanged("IsPercentage");
					this.OnIsPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalculateOn", DbType="Int")]
		public System.Nullable<int> CalculateOn
		{
			get
			{
				return this._CalculateOn;
			}
			set
			{
				if ((this._CalculateOn != value))
				{
					if (this._AccountTypeFeaturesCalculateOn.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCalculateOnChanging(value);
					this.SendPropertyChanging();
					this._CalculateOn = value;
					this.SendPropertyChanged("CalculateOn");
					this.OnCalculateOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueToApply", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ValueToApply
		{
			get
			{
				return this._ValueToApply;
			}
			set
			{
				if ((this._ValueToApply != value))
				{
					this.OnValueToApplyChanging(value);
					this.SendPropertyChanging();
					this._ValueToApply = value;
					this.SendPropertyChanged("ValueToApply");
					this.OnValueToApplyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalculationFrequencyID", DbType="Int")]
		public System.Nullable<int> CalculationFrequencyID
		{
			get
			{
				return this._CalculationFrequencyID;
			}
			set
			{
				if ((this._CalculationFrequencyID != value))
				{
					this.OnCalculationFrequencyIDChanging(value);
					this.SendPropertyChanging();
					this._CalculationFrequencyID = value;
					this.SendPropertyChanged("CalculationFrequencyID");
					this.OnCalculationFrequencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonthlyCalculationDay", DbType="Int")]
		public System.Nullable<int> MonthlyCalculationDay
		{
			get
			{
				return this._MonthlyCalculationDay;
			}
			set
			{
				if ((this._MonthlyCalculationDay != value))
				{
					this.OnMonthlyCalculationDayChanging(value);
					this.SendPropertyChanging();
					this._MonthlyCalculationDay = value;
					this.SendPropertyChanged("MonthlyCalculationDay");
					this.OnMonthlyCalculationDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnualCalculationMonth", DbType="Int")]
		public System.Nullable<int> AnnualCalculationMonth
		{
			get
			{
				return this._AnnualCalculationMonth;
			}
			set
			{
				if ((this._AnnualCalculationMonth != value))
				{
					this.OnAnnualCalculationMonthChanging(value);
					this.SendPropertyChanging();
					this._AnnualCalculationMonth = value;
					this.SendPropertyChanged("AnnualCalculationMonth");
					this.OnAnnualCalculationMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnualCalculationDay", DbType="Int")]
		public System.Nullable<int> AnnualCalculationDay
		{
			get
			{
				return this._AnnualCalculationDay;
			}
			set
			{
				if ((this._AnnualCalculationDay != value))
				{
					this.OnAnnualCalculationDayChanging(value);
					this.SendPropertyChanging();
					this._AnnualCalculationDay = value;
					this.SendPropertyChanged("AnnualCalculationDay");
					this.OnAnnualCalculationDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasCustomCalculationFrequency", DbType="Bit")]
		public System.Nullable<bool> HasCustomCalculationFrequency
		{
			get
			{
				return this._HasCustomCalculationFrequency;
			}
			set
			{
				if ((this._HasCustomCalculationFrequency != value))
				{
					this.OnHasCustomCalculationFrequencyChanging(value);
					this.SendPropertyChanging();
					this._HasCustomCalculationFrequency = value;
					this.SendPropertyChanged("HasCustomCalculationFrequency");
					this.OnHasCustomCalculationFrequencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomCalculationFreqNumberOfDays", DbType="Int")]
		public System.Nullable<int> CustomCalculationFreqNumberOfDays
		{
			get
			{
				return this._CustomCalculationFreqNumberOfDays;
			}
			set
			{
				if ((this._CustomCalculationFreqNumberOfDays != value))
				{
					this.OnCustomCalculationFreqNumberOfDaysChanging(value);
					this.SendPropertyChanging();
					this._CustomCalculationFreqNumberOfDays = value;
					this.SendPropertyChanged("CustomCalculationFreqNumberOfDays");
					this.OnCustomCalculationFreqNumberOfDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunByEndOfFay", DbType="Bit")]
		public System.Nullable<bool> RunByEndOfFay
		{
			get
			{
				return this._RunByEndOfFay;
			}
			set
			{
				if ((this._RunByEndOfFay != value))
				{
					this.OnRunByEndOfFayChanging(value);
					this.SendPropertyChanging();
					this._RunByEndOfFay = value;
					this.SendPropertyChanged("RunByEndOfFay");
					this.OnRunByEndOfFayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FeatureDescription", DbType="NVarChar(200)")]
		public string FeatureDescription
		{
			get
			{
				return this._FeatureDescription;
			}
			set
			{
				if ((this._FeatureDescription != value))
				{
					this.OnFeatureDescriptionChanging(value);
					this.SendPropertyChanging();
					this._FeatureDescription = value;
					this.SendPropertyChanged("FeatureDescription");
					this.OnFeatureDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccountTypeFeature_AppliedAccountFeature", Storage="_AppliedAccountFeatures", ThisKey="AccountFeatureID", OtherKey="AccountTypeFeatureID")]
		public EntitySet<AppliedAccountFeature> AppliedAccountFeatures
		{
			get
			{
				return this._AppliedAccountFeatures;
			}
			set
			{
				this._AppliedAccountFeatures.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccountTypeFeature_AppliedFeatureHistory", Storage="_AppliedFeatureHistories", ThisKey="AccountFeatureID", OtherKey="AccountTypeFeatureID")]
		public EntitySet<AppliedFeatureHistory> AppliedFeatureHistories
		{
			get
			{
				return this._AppliedFeatureHistories;
			}
			set
			{
				this._AppliedFeatureHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccountTypeFeaturesCalculateOn_AccountTypeFeature", Storage="_AccountTypeFeaturesCalculateOn", ThisKey="CalculateOn", OtherKey="AccountTypeFeaturesCalculateOnID", IsForeignKey=true)]
		public AccountTypeFeaturesCalculateOn AccountTypeFeaturesCalculateOn
		{
			get
			{
				return this._AccountTypeFeaturesCalculateOn.Entity;
			}
			set
			{
				AccountTypeFeaturesCalculateOn previousValue = this._AccountTypeFeaturesCalculateOn.Entity;
				if (((previousValue != value) 
							|| (this._AccountTypeFeaturesCalculateOn.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountTypeFeaturesCalculateOn.Entity = null;
						previousValue.AccountTypeFeatures.Remove(this);
					}
					this._AccountTypeFeaturesCalculateOn.Entity = value;
					if ((value != null))
					{
						value.AccountTypeFeatures.Add(this);
						this._CalculateOn = value.AccountTypeFeaturesCalculateOnID;
					}
					else
					{
						this._CalculateOn = default(Nullable<int>);
					}
					this.SendPropertyChanged("AccountTypeFeaturesCalculateOn");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccountType_AccountTypeFeature", Storage="_AccountType", ThisKey="AccountTypeID", OtherKey="AccountTypeId", IsForeignKey=true, DeleteRule="CASCADE")]
		public AccountType AccountType
		{
			get
			{
				return this._AccountType.Entity;
			}
			set
			{
				AccountType previousValue = this._AccountType.Entity;
				if (((previousValue != value) 
							|| (this._AccountType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountType.Entity = null;
						previousValue.AccountTypeFeatures.Remove(this);
					}
					this._AccountType.Entity = value;
					if ((value != null))
					{
						value.AccountTypeFeatures.Add(this);
						this._AccountTypeID = value.AccountTypeId;
					}
					else
					{
						this._AccountTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AccountType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AppliedAccountFeatures(AppliedAccountFeature entity)
		{
			this.SendPropertyChanging();
			entity.AccountTypeFeature = this;
		}
		
		private void detach_AppliedAccountFeatures(AppliedAccountFeature entity)
		{
			this.SendPropertyChanging();
			entity.AccountTypeFeature = null;
		}
		
		private void attach_AppliedFeatureHistories(AppliedFeatureHistory entity)
		{
			this.SendPropertyChanging();
			entity.AccountTypeFeature = this;
		}
		
		private void detach_AppliedFeatureHistories(AppliedFeatureHistory entity)
		{
			this.SendPropertyChanging();
			entity.AccountTypeFeature = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AppliedAccountFeatures")]
	public partial class AppliedAccountFeature : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AppliedAccountFeaturesID;
		
		private System.Nullable<int> _InvestmentID;
		
		private string _AccountNumber;
		
		private System.Nullable<decimal> _AppliedValue;
		
		private System.Nullable<int> _AccountTypeFeatureID;
		
		private string _Narration;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _ModifiedBy;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _AppliedFeatureHistoryId;
		
		private EntityRef<AccountTypeFeature> _AccountTypeFeature;
		
		private EntityRef<AppliedFeatureHistory> _AppliedFeatureHistory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppliedAccountFeaturesIDChanging(int value);
    partial void OnAppliedAccountFeaturesIDChanged();
    partial void OnInvestmentIDChanging(System.Nullable<int> value);
    partial void OnInvestmentIDChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnAppliedValueChanging(System.Nullable<decimal> value);
    partial void OnAppliedValueChanged();
    partial void OnAccountTypeFeatureIDChanging(System.Nullable<int> value);
    partial void OnAccountTypeFeatureIDChanged();
    partial void OnNarrationChanging(string value);
    partial void OnNarrationChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnAppliedFeatureHistoryIdChanging(System.Nullable<int> value);
    partial void OnAppliedFeatureHistoryIdChanged();
    #endregion
		
		public AppliedAccountFeature()
		{
			this._AccountTypeFeature = default(EntityRef<AccountTypeFeature>);
			this._AppliedFeatureHistory = default(EntityRef<AppliedFeatureHistory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppliedAccountFeaturesID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AppliedAccountFeaturesID
		{
			get
			{
				return this._AppliedAccountFeaturesID;
			}
			set
			{
				if ((this._AppliedAccountFeaturesID != value))
				{
					this.OnAppliedAccountFeaturesIDChanging(value);
					this.SendPropertyChanging();
					this._AppliedAccountFeaturesID = value;
					this.SendPropertyChanged("AppliedAccountFeaturesID");
					this.OnAppliedAccountFeaturesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentID", DbType="Int")]
		public System.Nullable<int> InvestmentID
		{
			get
			{
				return this._InvestmentID;
			}
			set
			{
				if ((this._InvestmentID != value))
				{
					this.OnInvestmentIDChanging(value);
					this.SendPropertyChanging();
					this._InvestmentID = value;
					this.SendPropertyChanged("InvestmentID");
					this.OnInvestmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(50)")]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this.OnAccountNumberChanging(value);
					this.SendPropertyChanging();
					this._AccountNumber = value;
					this.SendPropertyChanged("AccountNumber");
					this.OnAccountNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppliedValue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AppliedValue
		{
			get
			{
				return this._AppliedValue;
			}
			set
			{
				if ((this._AppliedValue != value))
				{
					this.OnAppliedValueChanging(value);
					this.SendPropertyChanging();
					this._AppliedValue = value;
					this.SendPropertyChanged("AppliedValue");
					this.OnAppliedValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountTypeFeatureID", DbType="Int")]
		public System.Nullable<int> AccountTypeFeatureID
		{
			get
			{
				return this._AccountTypeFeatureID;
			}
			set
			{
				if ((this._AccountTypeFeatureID != value))
				{
					if (this._AccountTypeFeature.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountTypeFeatureIDChanging(value);
					this.SendPropertyChanging();
					this._AccountTypeFeatureID = value;
					this.SendPropertyChanged("AccountTypeFeatureID");
					this.OnAccountTypeFeatureIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Narration", DbType="NVarChar(50)")]
		public string Narration
		{
			get
			{
				return this._Narration;
			}
			set
			{
				if ((this._Narration != value))
				{
					this.OnNarrationChanging(value);
					this.SendPropertyChanging();
					this._Narration = value;
					this.SendPropertyChanged("Narration");
					this.OnNarrationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppliedFeatureHistoryId", DbType="Int")]
		public System.Nullable<int> AppliedFeatureHistoryId
		{
			get
			{
				return this._AppliedFeatureHistoryId;
			}
			set
			{
				if ((this._AppliedFeatureHistoryId != value))
				{
					if (this._AppliedFeatureHistory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAppliedFeatureHistoryIdChanging(value);
					this.SendPropertyChanging();
					this._AppliedFeatureHistoryId = value;
					this.SendPropertyChanged("AppliedFeatureHistoryId");
					this.OnAppliedFeatureHistoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccountTypeFeature_AppliedAccountFeature", Storage="_AccountTypeFeature", ThisKey="AccountTypeFeatureID", OtherKey="AccountFeatureID", IsForeignKey=true, DeleteRule="CASCADE")]
		public AccountTypeFeature AccountTypeFeature
		{
			get
			{
				return this._AccountTypeFeature.Entity;
			}
			set
			{
				AccountTypeFeature previousValue = this._AccountTypeFeature.Entity;
				if (((previousValue != value) 
							|| (this._AccountTypeFeature.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountTypeFeature.Entity = null;
						previousValue.AppliedAccountFeatures.Remove(this);
					}
					this._AccountTypeFeature.Entity = value;
					if ((value != null))
					{
						value.AppliedAccountFeatures.Add(this);
						this._AccountTypeFeatureID = value.AccountFeatureID;
					}
					else
					{
						this._AccountTypeFeatureID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AccountTypeFeature");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppliedFeatureHistory_AppliedAccountFeature", Storage="_AppliedFeatureHistory", ThisKey="AppliedFeatureHistoryId", OtherKey="AppliedFeatureHistoryId", IsForeignKey=true)]
		public AppliedFeatureHistory AppliedFeatureHistory
		{
			get
			{
				return this._AppliedFeatureHistory.Entity;
			}
			set
			{
				AppliedFeatureHistory previousValue = this._AppliedFeatureHistory.Entity;
				if (((previousValue != value) 
							|| (this._AppliedFeatureHistory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AppliedFeatureHistory.Entity = null;
						previousValue.AppliedAccountFeatures.Remove(this);
					}
					this._AppliedFeatureHistory.Entity = value;
					if ((value != null))
					{
						value.AppliedAccountFeatures.Add(this);
						this._AppliedFeatureHistoryId = value.AppliedFeatureHistoryId;
					}
					else
					{
						this._AppliedFeatureHistoryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("AppliedFeatureHistory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwMembersWithInvestments")]
	public partial class vwMembersWithInvestment
	{
		
		private string _Name;
		
		private string _AccountNumber;
		
		private int _MemberId;
		
		private int _InvestmentID;
		
		private System.Nullable<int> _AccountTypeID;
		
		private System.Nullable<decimal> _InvestmentAmount;
		
		private System.Nullable<decimal> _TotalInterestApplied;
		
		private System.Nullable<decimal> _Balance;
		
		private System.Nullable<int> _InvestmentTypeId;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		public vwMembersWithInvestment()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(352)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(50)")]
		public string AccountNumber
		{
			get
			{
				return this._AccountNumber;
			}
			set
			{
				if ((this._AccountNumber != value))
				{
					this._AccountNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberId", DbType="Int NOT NULL")]
		public int MemberId
		{
			get
			{
				return this._MemberId;
			}
			set
			{
				if ((this._MemberId != value))
				{
					this._MemberId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentID", DbType="Int NOT NULL")]
		public int InvestmentID
		{
			get
			{
				return this._InvestmentID;
			}
			set
			{
				if ((this._InvestmentID != value))
				{
					this._InvestmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountTypeID", DbType="Int")]
		public System.Nullable<int> AccountTypeID
		{
			get
			{
				return this._AccountTypeID;
			}
			set
			{
				if ((this._AccountTypeID != value))
				{
					this._AccountTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentAmount", DbType="Decimal(18,4)")]
		public System.Nullable<decimal> InvestmentAmount
		{
			get
			{
				return this._InvestmentAmount;
			}
			set
			{
				if ((this._InvestmentAmount != value))
				{
					this._InvestmentAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalInterestApplied", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalInterestApplied
		{
			get
			{
				return this._TotalInterestApplied;
			}
			set
			{
				if ((this._TotalInterestApplied != value))
				{
					this._TotalInterestApplied = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Decimal(20,2)")]
		public System.Nullable<decimal> Balance
		{
			get
			{
				return this._Balance;
			}
			set
			{
				if ((this._Balance != value))
				{
					this._Balance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentTypeId", DbType="Int")]
		public System.Nullable<int> InvestmentTypeId
		{
			get
			{
				return this._InvestmentTypeId;
			}
			set
			{
				if ((this._InvestmentTypeId != value))
				{
					this._InvestmentTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AppliedFeatureHistory")]
	public partial class AppliedFeatureHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AppliedFeatureHistoryId;
		
		private System.Nullable<int> _AccountTypeFeatureID;
		
		private System.Nullable<System.DateTime> _AppliedDate;
		
		private string _AppliedBy;
		
		private string _ActionInitiatedBy;
		
		private System.Nullable<System.DateTime> _AppliedForDate;
		
		private EntitySet<FailMessage> _FailMessages;
		
		private EntitySet<AppliedAccountFeature> _AppliedAccountFeatures;
		
		private EntitySet<AppliedInterest> _AppliedInterests;
		
		private EntitySet<AppliedDeduction> _AppliedDeductions;
		
		private EntityRef<AccountTypeFeature> _AccountTypeFeature;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppliedFeatureHistoryIdChanging(int value);
    partial void OnAppliedFeatureHistoryIdChanged();
    partial void OnAccountTypeFeatureIDChanging(System.Nullable<int> value);
    partial void OnAccountTypeFeatureIDChanged();
    partial void OnAppliedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAppliedDateChanged();
    partial void OnAppliedByChanging(string value);
    partial void OnAppliedByChanged();
    partial void OnActionInitiatedByChanging(string value);
    partial void OnActionInitiatedByChanged();
    partial void OnAppliedForDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAppliedForDateChanged();
    #endregion
		
		public AppliedFeatureHistory()
		{
			this._FailMessages = new EntitySet<FailMessage>(new Action<FailMessage>(this.attach_FailMessages), new Action<FailMessage>(this.detach_FailMessages));
			this._AppliedAccountFeatures = new EntitySet<AppliedAccountFeature>(new Action<AppliedAccountFeature>(this.attach_AppliedAccountFeatures), new Action<AppliedAccountFeature>(this.detach_AppliedAccountFeatures));
			this._AppliedInterests = new EntitySet<AppliedInterest>(new Action<AppliedInterest>(this.attach_AppliedInterests), new Action<AppliedInterest>(this.detach_AppliedInterests));
			this._AppliedDeductions = new EntitySet<AppliedDeduction>(new Action<AppliedDeduction>(this.attach_AppliedDeductions), new Action<AppliedDeduction>(this.detach_AppliedDeductions));
			this._AccountTypeFeature = default(EntityRef<AccountTypeFeature>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppliedFeatureHistoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AppliedFeatureHistoryId
		{
			get
			{
				return this._AppliedFeatureHistoryId;
			}
			set
			{
				if ((this._AppliedFeatureHistoryId != value))
				{
					this.OnAppliedFeatureHistoryIdChanging(value);
					this.SendPropertyChanging();
					this._AppliedFeatureHistoryId = value;
					this.SendPropertyChanged("AppliedFeatureHistoryId");
					this.OnAppliedFeatureHistoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountTypeFeatureID", DbType="Int")]
		public System.Nullable<int> AccountTypeFeatureID
		{
			get
			{
				return this._AccountTypeFeatureID;
			}
			set
			{
				if ((this._AccountTypeFeatureID != value))
				{
					if (this._AccountTypeFeature.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountTypeFeatureIDChanging(value);
					this.SendPropertyChanging();
					this._AccountTypeFeatureID = value;
					this.SendPropertyChanged("AccountTypeFeatureID");
					this.OnAccountTypeFeatureIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppliedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AppliedDate
		{
			get
			{
				return this._AppliedDate;
			}
			set
			{
				if ((this._AppliedDate != value))
				{
					this.OnAppliedDateChanging(value);
					this.SendPropertyChanging();
					this._AppliedDate = value;
					this.SendPropertyChanged("AppliedDate");
					this.OnAppliedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppliedBy", DbType="NVarChar(50)")]
		public string AppliedBy
		{
			get
			{
				return this._AppliedBy;
			}
			set
			{
				if ((this._AppliedBy != value))
				{
					this.OnAppliedByChanging(value);
					this.SendPropertyChanging();
					this._AppliedBy = value;
					this.SendPropertyChanged("AppliedBy");
					this.OnAppliedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionInitiatedBy", DbType="NVarChar(50)")]
		public string ActionInitiatedBy
		{
			get
			{
				return this._ActionInitiatedBy;
			}
			set
			{
				if ((this._ActionInitiatedBy != value))
				{
					this.OnActionInitiatedByChanging(value);
					this.SendPropertyChanging();
					this._ActionInitiatedBy = value;
					this.SendPropertyChanged("ActionInitiatedBy");
					this.OnActionInitiatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppliedForDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AppliedForDate
		{
			get
			{
				return this._AppliedForDate;
			}
			set
			{
				if ((this._AppliedForDate != value))
				{
					this.OnAppliedForDateChanging(value);
					this.SendPropertyChanging();
					this._AppliedForDate = value;
					this.SendPropertyChanged("AppliedForDate");
					this.OnAppliedForDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppliedFeatureHistory_FailMessage", Storage="_FailMessages", ThisKey="AppliedFeatureHistoryId", OtherKey="AppliedAccountTypeFeatureHistoryID")]
		public EntitySet<FailMessage> FailMessages
		{
			get
			{
				return this._FailMessages;
			}
			set
			{
				this._FailMessages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppliedFeatureHistory_AppliedAccountFeature", Storage="_AppliedAccountFeatures", ThisKey="AppliedFeatureHistoryId", OtherKey="AppliedFeatureHistoryId")]
		public EntitySet<AppliedAccountFeature> AppliedAccountFeatures
		{
			get
			{
				return this._AppliedAccountFeatures;
			}
			set
			{
				this._AppliedAccountFeatures.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppliedFeatureHistory_AppliedInterest", Storage="_AppliedInterests", ThisKey="AppliedFeatureHistoryId", OtherKey="AppliedFeatureHistoryId")]
		public EntitySet<AppliedInterest> AppliedInterests
		{
			get
			{
				return this._AppliedInterests;
			}
			set
			{
				this._AppliedInterests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppliedFeatureHistory_AppliedDeduction", Storage="_AppliedDeductions", ThisKey="AppliedFeatureHistoryId", OtherKey="AppliedFeatureHistoryId")]
		public EntitySet<AppliedDeduction> AppliedDeductions
		{
			get
			{
				return this._AppliedDeductions;
			}
			set
			{
				this._AppliedDeductions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AccountTypeFeature_AppliedFeatureHistory", Storage="_AccountTypeFeature", ThisKey="AccountTypeFeatureID", OtherKey="AccountFeatureID", IsForeignKey=true, DeleteRule="CASCADE")]
		public AccountTypeFeature AccountTypeFeature
		{
			get
			{
				return this._AccountTypeFeature.Entity;
			}
			set
			{
				AccountTypeFeature previousValue = this._AccountTypeFeature.Entity;
				if (((previousValue != value) 
							|| (this._AccountTypeFeature.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AccountTypeFeature.Entity = null;
						previousValue.AppliedFeatureHistories.Remove(this);
					}
					this._AccountTypeFeature.Entity = value;
					if ((value != null))
					{
						value.AppliedFeatureHistories.Add(this);
						this._AccountTypeFeatureID = value.AccountFeatureID;
					}
					else
					{
						this._AccountTypeFeatureID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AccountTypeFeature");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FailMessages(FailMessage entity)
		{
			this.SendPropertyChanging();
			entity.AppliedFeatureHistory = this;
		}
		
		private void detach_FailMessages(FailMessage entity)
		{
			this.SendPropertyChanging();
			entity.AppliedFeatureHistory = null;
		}
		
		private void attach_AppliedAccountFeatures(AppliedAccountFeature entity)
		{
			this.SendPropertyChanging();
			entity.AppliedFeatureHistory = this;
		}
		
		private void detach_AppliedAccountFeatures(AppliedAccountFeature entity)
		{
			this.SendPropertyChanging();
			entity.AppliedFeatureHistory = null;
		}
		
		private void attach_AppliedInterests(AppliedInterest entity)
		{
			this.SendPropertyChanging();
			entity.AppliedFeatureHistory = this;
		}
		
		private void detach_AppliedInterests(AppliedInterest entity)
		{
			this.SendPropertyChanging();
			entity.AppliedFeatureHistory = null;
		}
		
		private void attach_AppliedDeductions(AppliedDeduction entity)
		{
			this.SendPropertyChanging();
			entity.AppliedFeatureHistory = this;
		}
		
		private void detach_AppliedDeductions(AppliedDeduction entity)
		{
			this.SendPropertyChanging();
			entity.AppliedFeatureHistory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AppliedInterest")]
	public partial class AppliedInterest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AppliedInterestID;
		
		private System.Nullable<int> _InvestmentID;
		
		private System.Nullable<decimal> _Rate;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _CreatedBy;
		
		private System.Nullable<decimal> _InterestAmount;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<int> _AppliedFeatureHistoryId;
		
		private System.Nullable<System.DateTime> _AppliedFor;
		
		private string _Narration;
		
		private EntityRef<AppliedFeatureHistory> _AppliedFeatureHistory;
		
		private EntityRef<Investment> _Investment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppliedInterestIDChanging(int value);
    partial void OnAppliedInterestIDChanged();
    partial void OnInvestmentIDChanging(System.Nullable<int> value);
    partial void OnInvestmentIDChanged();
    partial void OnRateChanging(System.Nullable<decimal> value);
    partial void OnRateChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnInterestAmountChanging(System.Nullable<decimal> value);
    partial void OnInterestAmountChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnAppliedFeatureHistoryIdChanging(System.Nullable<int> value);
    partial void OnAppliedFeatureHistoryIdChanged();
    partial void OnAppliedForChanging(System.Nullable<System.DateTime> value);
    partial void OnAppliedForChanged();
    partial void OnNarrationChanging(string value);
    partial void OnNarrationChanged();
    #endregion
		
		public AppliedInterest()
		{
			this._AppliedFeatureHistory = default(EntityRef<AppliedFeatureHistory>);
			this._Investment = default(EntityRef<Investment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppliedInterestID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AppliedInterestID
		{
			get
			{
				return this._AppliedInterestID;
			}
			set
			{
				if ((this._AppliedInterestID != value))
				{
					this.OnAppliedInterestIDChanging(value);
					this.SendPropertyChanging();
					this._AppliedInterestID = value;
					this.SendPropertyChanged("AppliedInterestID");
					this.OnAppliedInterestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentID", DbType="Int")]
		public System.Nullable<int> InvestmentID
		{
			get
			{
				return this._InvestmentID;
			}
			set
			{
				if ((this._InvestmentID != value))
				{
					if (this._Investment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvestmentIDChanging(value);
					this.SendPropertyChanging();
					this._InvestmentID = value;
					this.SendPropertyChanged("InvestmentID");
					this.OnInvestmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(100)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> InterestAmount
		{
			get
			{
				return this._InterestAmount;
			}
			set
			{
				if ((this._InterestAmount != value))
				{
					this.OnInterestAmountChanging(value);
					this.SendPropertyChanging();
					this._InterestAmount = value;
					this.SendPropertyChanged("InterestAmount");
					this.OnInterestAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppliedFeatureHistoryId", DbType="Int")]
		public System.Nullable<int> AppliedFeatureHistoryId
		{
			get
			{
				return this._AppliedFeatureHistoryId;
			}
			set
			{
				if ((this._AppliedFeatureHistoryId != value))
				{
					if (this._AppliedFeatureHistory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAppliedFeatureHistoryIdChanging(value);
					this.SendPropertyChanging();
					this._AppliedFeatureHistoryId = value;
					this.SendPropertyChanged("AppliedFeatureHistoryId");
					this.OnAppliedFeatureHistoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppliedFor", DbType="Date")]
		public System.Nullable<System.DateTime> AppliedFor
		{
			get
			{
				return this._AppliedFor;
			}
			set
			{
				if ((this._AppliedFor != value))
				{
					this.OnAppliedForChanging(value);
					this.SendPropertyChanging();
					this._AppliedFor = value;
					this.SendPropertyChanged("AppliedFor");
					this.OnAppliedForChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Narration", DbType="NVarChar(200)")]
		public string Narration
		{
			get
			{
				return this._Narration;
			}
			set
			{
				if ((this._Narration != value))
				{
					this.OnNarrationChanging(value);
					this.SendPropertyChanging();
					this._Narration = value;
					this.SendPropertyChanged("Narration");
					this.OnNarrationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppliedFeatureHistory_AppliedInterest", Storage="_AppliedFeatureHistory", ThisKey="AppliedFeatureHistoryId", OtherKey="AppliedFeatureHistoryId", IsForeignKey=true, DeleteRule="CASCADE")]
		public AppliedFeatureHistory AppliedFeatureHistory
		{
			get
			{
				return this._AppliedFeatureHistory.Entity;
			}
			set
			{
				AppliedFeatureHistory previousValue = this._AppliedFeatureHistory.Entity;
				if (((previousValue != value) 
							|| (this._AppliedFeatureHistory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AppliedFeatureHistory.Entity = null;
						previousValue.AppliedInterests.Remove(this);
					}
					this._AppliedFeatureHistory.Entity = value;
					if ((value != null))
					{
						value.AppliedInterests.Add(this);
						this._AppliedFeatureHistoryId = value.AppliedFeatureHistoryId;
					}
					else
					{
						this._AppliedFeatureHistoryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("AppliedFeatureHistory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Investment_AppliedInterest", Storage="_Investment", ThisKey="InvestmentID", OtherKey="InvestmentID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Investment Investment
		{
			get
			{
				return this._Investment.Entity;
			}
			set
			{
				Investment previousValue = this._Investment.Entity;
				if (((previousValue != value) 
							|| (this._Investment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Investment.Entity = null;
						previousValue.AppliedInterests.Remove(this);
					}
					this._Investment.Entity = value;
					if ((value != null))
					{
						value.AppliedInterests.Add(this);
						this._InvestmentID = value.InvestmentID;
					}
					else
					{
						this._InvestmentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Investment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AppliedDeduction")]
	public partial class AppliedDeduction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AppliedDeductionID;
		
		private System.Nullable<int> _InvestmentID;
		
		private System.Nullable<decimal> _Rate;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _CreatedBy;
		
		private System.Nullable<decimal> _DeductionAmount;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<int> _AppliedFeatureHistoryId;
		
		private System.Nullable<System.DateTime> _AppliedFor;
		
		private string _Narration;
		
		private EntityRef<AppliedFeatureHistory> _AppliedFeatureHistory;
		
		private EntityRef<Investment> _Investment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppliedDeductionIDChanging(int value);
    partial void OnAppliedDeductionIDChanged();
    partial void OnInvestmentIDChanging(System.Nullable<int> value);
    partial void OnInvestmentIDChanged();
    partial void OnRateChanging(System.Nullable<decimal> value);
    partial void OnRateChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnDeductionAmountChanging(System.Nullable<decimal> value);
    partial void OnDeductionAmountChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnAppliedFeatureHistoryIdChanging(System.Nullable<int> value);
    partial void OnAppliedFeatureHistoryIdChanged();
    partial void OnAppliedForChanging(System.Nullable<System.DateTime> value);
    partial void OnAppliedForChanged();
    partial void OnNarrationChanging(string value);
    partial void OnNarrationChanged();
    #endregion
		
		public AppliedDeduction()
		{
			this._AppliedFeatureHistory = default(EntityRef<AppliedFeatureHistory>);
			this._Investment = default(EntityRef<Investment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppliedDeductionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AppliedDeductionID
		{
			get
			{
				return this._AppliedDeductionID;
			}
			set
			{
				if ((this._AppliedDeductionID != value))
				{
					this.OnAppliedDeductionIDChanging(value);
					this.SendPropertyChanging();
					this._AppliedDeductionID = value;
					this.SendPropertyChanged("AppliedDeductionID");
					this.OnAppliedDeductionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvestmentID", DbType="Int")]
		public System.Nullable<int> InvestmentID
		{
			get
			{
				return this._InvestmentID;
			}
			set
			{
				if ((this._InvestmentID != value))
				{
					if (this._Investment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInvestmentIDChanging(value);
					this.SendPropertyChanging();
					this._InvestmentID = value;
					this.SendPropertyChanged("InvestmentID");
					this.OnInvestmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(100)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeductionAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DeductionAmount
		{
			get
			{
				return this._DeductionAmount;
			}
			set
			{
				if ((this._DeductionAmount != value))
				{
					this.OnDeductionAmountChanging(value);
					this.SendPropertyChanging();
					this._DeductionAmount = value;
					this.SendPropertyChanged("DeductionAmount");
					this.OnDeductionAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppliedFeatureHistoryId", DbType="Int")]
		public System.Nullable<int> AppliedFeatureHistoryId
		{
			get
			{
				return this._AppliedFeatureHistoryId;
			}
			set
			{
				if ((this._AppliedFeatureHistoryId != value))
				{
					if (this._AppliedFeatureHistory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAppliedFeatureHistoryIdChanging(value);
					this.SendPropertyChanging();
					this._AppliedFeatureHistoryId = value;
					this.SendPropertyChanged("AppliedFeatureHistoryId");
					this.OnAppliedFeatureHistoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppliedFor", DbType="Date")]
		public System.Nullable<System.DateTime> AppliedFor
		{
			get
			{
				return this._AppliedFor;
			}
			set
			{
				if ((this._AppliedFor != value))
				{
					this.OnAppliedForChanging(value);
					this.SendPropertyChanging();
					this._AppliedFor = value;
					this.SendPropertyChanged("AppliedFor");
					this.OnAppliedForChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Narration", DbType="NVarChar(200)")]
		public string Narration
		{
			get
			{
				return this._Narration;
			}
			set
			{
				if ((this._Narration != value))
				{
					this.OnNarrationChanging(value);
					this.SendPropertyChanging();
					this._Narration = value;
					this.SendPropertyChanged("Narration");
					this.OnNarrationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppliedFeatureHistory_AppliedDeduction", Storage="_AppliedFeatureHistory", ThisKey="AppliedFeatureHistoryId", OtherKey="AppliedFeatureHistoryId", IsForeignKey=true, DeleteRule="CASCADE")]
		public AppliedFeatureHistory AppliedFeatureHistory
		{
			get
			{
				return this._AppliedFeatureHistory.Entity;
			}
			set
			{
				AppliedFeatureHistory previousValue = this._AppliedFeatureHistory.Entity;
				if (((previousValue != value) 
							|| (this._AppliedFeatureHistory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AppliedFeatureHistory.Entity = null;
						previousValue.AppliedDeductions.Remove(this);
					}
					this._AppliedFeatureHistory.Entity = value;
					if ((value != null))
					{
						value.AppliedDeductions.Add(this);
						this._AppliedFeatureHistoryId = value.AppliedFeatureHistoryId;
					}
					else
					{
						this._AppliedFeatureHistoryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("AppliedFeatureHistory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Investment_AppliedDeduction", Storage="_Investment", ThisKey="InvestmentID", OtherKey="InvestmentID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Investment Investment
		{
			get
			{
				return this._Investment.Entity;
			}
			set
			{
				Investment previousValue = this._Investment.Entity;
				if (((previousValue != value) 
							|| (this._Investment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Investment.Entity = null;
						previousValue.AppliedDeductions.Remove(this);
					}
					this._Investment.Entity = value;
					if ((value != null))
					{
						value.AppliedDeductions.Add(this);
						this._InvestmentID = value.InvestmentID;
					}
					else
					{
						this._InvestmentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Investment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
